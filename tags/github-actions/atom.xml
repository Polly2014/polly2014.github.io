<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Polly Blog - AI Assistant, Tutorials, and Insights - GitHub Actions</title>
    <subtitle>Explore Polly Blog for AI tutorials, insights, and updates on cutting-edge technology.</subtitle>
    <link href="https://polly2014.github.io/tags/github-actions/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://polly2014.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-03-09T00:00:00+00:00</updated>
    <id>https://polly2014.github.io/tags/github-actions/atom.xml</id>
    <entry xml:lang="en">
        <title>OpenHands Issue Resolver 集成到 GitHub Actions 教程</title>
        <published>2025-03-09T00:00:00+00:00</published>
        <updated>2025-03-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly2014.github.io/integrate-openhands-issue-resolver-into-github-actions/" type="text/html"/>
        <id>https://polly2014.github.io/integrate-openhands-issue-resolver-into-github-actions/</id>
        
        <content type="html">&lt;p&gt;OpenHands Issue Resolver是一个强大的工具，可以帮助开发者自动化问题的解决过程。通过GitHub Actions的集成，您可以在每次提交代码时自动运行它，从而提高开发效率。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhun-bei-gong-zuo&quot;&gt;准备工作&lt;&#x2F;h2&gt;
&lt;p&gt;在开始之前，请确保您已经完成以下准备工作：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;拥有一个GitHub仓库。&lt;&#x2F;li&gt;
&lt;li&gt;确保仓库中启用了GitHub Actions。&lt;&#x2F;li&gt;
&lt;li&gt;确保您有权限编辑仓库的&lt;code&gt;.github&#x2F;workflows&lt;&#x2F;code&gt;目录。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;pei-zhi-bu-zou&quot;&gt;配置步骤&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;di-yi-bu-chuang-jian-github-actionsgong-zuo-liu-wen-jian&quot;&gt;第一步：创建GitHub Actions工作流文件&lt;&#x2F;h3&gt;
&lt;p&gt;在您的仓库中，导航到&lt;code&gt;.github&#x2F;workflows&lt;&#x2F;code&gt;目录。如果该目录不存在，请创建一个。&lt;&#x2F;p&gt;
&lt;p&gt;在该目录下，新建一个名为&lt;code&gt;openhands-resolver.yml&lt;&#x2F;code&gt;的文件，并添加以下内容：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Resolve Issue with OpenHands
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;on&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;issues&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;labeled&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pull_request&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;labeled&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;issue_comment&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;created&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pull_request_review_comment&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;created&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pull_request_review&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;submitted&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;permissions&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;contents&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;write
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pull-requests&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;write
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;issues&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;write
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;jobs&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;call-openhands-resolver&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;All-Hands-AI&#x2F;OpenHands&#x2F;.github&#x2F;workflows&#x2F;openhands-resolver.yml@main
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;macro&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ vars.OPENHANDS_MACRO || &amp;#39;@openhands-agent&amp;#39; }}
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;max_iterations&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ fromJson(vars.OPENHANDS_MAX_ITER || 50) }}
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base_container_image&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ vars.OPENHANDS_BASE_CONTAINER_IMAGE || &amp;#39;&amp;#39; }}
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LLM_MODEL&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ vars.LLM_MODEL || &amp;#39;azure&#x2F;gpt-4o&amp;#39; }}
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;target_branch&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ vars.TARGET_BRANCH || &amp;#39;dev&amp;#39; }}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;secrets&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PAT_TOKEN&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ secrets.OPENHANDS_RESOLVER_TOKEN }}
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PAT_USERNAME&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ secrets.OPENHANDS_RESOLVER_USERNAME }}
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LLM_API_KEY&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ secrets.LLM_API_KEY }}
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LLM_BASE_URL&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ secrets.LLM_BASE_URL }}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;di-er-bu-pei-zhi-repo-quan-xian&quot;&gt;第二步，配置 Repo 权限&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;依次点击 &lt;code&gt;Settings -&amp;gt; Actions -&amp;gt; Genral -&amp;gt; Workflow permissions&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;勾选 &lt;code&gt;Read and write permissions&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;勾选 &lt;code&gt;Allow Github Actions to create and approve pull requests&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;di-san-bu-pei-zhi-github-secrets&quot;&gt;第三步：配置 GitHub Secrets&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;打开 &lt;a href=&quot;https:&#x2F;&#x2F;docs.github.com&#x2F;en&#x2F;actions&#x2F;security-for-github-actions&#x2F;security-guides&#x2F;using-secrets-in-github-actions&quot;&gt;GitHub Secrets&lt;&#x2F;a&gt;。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;必须项： &lt;code&gt;LLM_API_KEY&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;可选项： &lt;code&gt;OPENHANDS_RESOLVER_TOKEN&lt;&#x2F;code&gt;, &lt;code&gt;OPENHANDS_RESOLVER_USERNAME&lt;&#x2F;code&gt;, &lt;code&gt;LLM_BASE_URL&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;为了让 OpenHands Issue Resolver 能够访问您的GitHub仓库，您需要配置&lt;code&gt;GITHUB_TOKEN&lt;&#x2F;code&gt;。幸运的是，GitHub 会自动为每个工作流运行提供一个&lt;code&gt;GITHUB_TOKEN&lt;&#x2F;code&gt;，您无需手动设置。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-si-bu-yan-zheng-pei-zhi&quot;&gt;第四步：验证配置&lt;&#x2F;h3&gt;
&lt;p&gt;完成上述步骤后，提交并推送更改到您的仓库。即通过如下步骤触发 OpenHands Issue Resolver 工作流运行：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;在 Repo 中创建新的 Issue。&lt;&#x2F;li&gt;
&lt;li&gt;给 Issue 添加 &lt;code&gt;fix-me&lt;&#x2F;code&gt; 的标签，或者在 Issue 的评论区 &lt;code&gt;@openhands-agent&lt;&#x2F;code&gt;。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;fix-me&lt;&#x2F;code&gt; 标签， Agent 会基于所有的留言进行处理。&lt;&#x2F;li&gt;
&lt;li&gt;使用 &lt;code&gt;@openhands-agent&lt;&#x2F;code&gt;， Agent进针对所处的留言帖子进行处理。
&lt;img src=&quot;https:&#x2F;&#x2F;polly2014.github.io&#x2F;integrate-openhands-issue-resolver-into-github-actions&#x2F;GtiHub_Issue_Creation.png&quot; alt=&quot;GitHub Issue Creation&quot; &#x2F;&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Openhands Agent自动被触发，即可通过 Agent生成的新评论或在 GitHub Repo 的 &amp;quot;Actions&amp;quot; 选项卡中查看工作流的运行状态。
&lt;img src=&quot;https:&#x2F;&#x2F;polly2014.github.io&#x2F;integrate-openhands-issue-resolver-into-github-actions&#x2F;GitHub_Actions_001.png&quot; alt=&quot;GitHub Actions&quot; &#x2F;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;polly2014.github.io&#x2F;integrate-openhands-issue-resolver-into-github-actions&#x2F;GitHub_Actions_002.png&quot; alt=&quot;GitHub Actions&quot; &#x2F;&gt;&lt;&#x2F;li&gt;
&lt;li&gt;OpenHands完成工作，并生成了新的PR，可人工进行review, merge
&lt;img src=&quot;https:&#x2F;&#x2F;polly2014.github.io&#x2F;integrate-openhands-issue-resolver-into-github-actions&#x2F;GitHub_Issue_PR.png&quot; alt=&quot;GitHub Issue PR&quot; &#x2F;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;polly2014.github.io&#x2F;integrate-openhands-issue-resolver-into-github-actions&#x2F;GitHub_Issue_Finished.png&quot; alt=&quot;GitHub Issue Finished&quot; &#x2F;&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;然后如果一切正常，您将看到OpenHands Issue Resolver成功运行的日志。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao-zi-liao&quot;&gt;参考资料&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.all-hands.dev&#x2F;modules&#x2F;usage&#x2F;how-to&#x2F;github-action&quot;&gt;OpenHands GitHub Action使用文档&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;All-Hands-AI&#x2F;OpenHands&#x2F;blob&#x2F;main&#x2F;openhands&#x2F;resolver&#x2F;README.md&quot;&gt;OpenHands Issue Resolver README&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;通过以上步骤，您已经成功将OpenHands Issue Resolver集成到GitHub Actions中。现在，您可以享受自动化问题解决带来的便利了！&lt;&#x2F;p&gt;
&lt;p&gt;如果您在配置过程中遇到任何问题，可随时在评论区下方留言。希望这篇文章对您有所帮助！&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>GitHub Actions: 实现Zola博客的自动化部署</title>
        <published>2025-03-04T00:00:00+00:00</published>
        <updated>2025-03-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly2014.github.io/blog-automation-with-github-actions/" type="text/html"/>
        <id>https://polly2014.github.io/blog-automation-with-github-actions/</id>
        
        <content type="html">&lt;p&gt;管理一个 Zola 博客是一件令人愉快的事情，但手动构建和部署博客的步骤可能会随着时间的推移变得繁琐。在本文中，我们将探讨如何利用 &lt;strong&gt;GitHub Actions&lt;&#x2F;strong&gt; 来完全自动化 Zola 博客的构建和部署过程。这种方法消除了手动干预的需要，使得工作流程更加高效且无错误。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dang-qian-gong-zuo-liu-cheng-de-tiao-zhan&quot;&gt;当前工作流程的挑战&lt;&#x2F;h2&gt;
&lt;p&gt;之前，管理 Zola 博客的工作流程包括以下步骤：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;在 &lt;code&gt;www.polly.com&lt;&#x2F;code&gt; 仓库中修改博客内容或配置。&lt;&#x2F;li&gt;
&lt;li&gt;本地运行 &lt;code&gt;zola build&lt;&#x2F;code&gt; 生成 &lt;code&gt;public&lt;&#x2F;code&gt; 文件夹中的静态文件。&lt;&#x2F;li&gt;
&lt;li&gt;手动将 &lt;code&gt;public&lt;&#x2F;code&gt; 文件夹的内容复制到 &lt;code&gt;polly2014.github.io&lt;&#x2F;code&gt; 仓库。&lt;&#x2F;li&gt;
&lt;li&gt;将更改推送到 GitHub，从而触发 GitHub Pages 部署。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;虽然这种工作流程可以正常工作，但它耗时且容易出错，尤其是忘记构建或推送更改时。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wei-shi-yao-xuan-ze-github-actions&quot;&gt;为什么选择 GitHub Actions？&lt;&#x2F;h2&gt;
&lt;p&gt;GitHub Actions 是一个强大的 CI&#x2F;CD 工具，允许直接在 GitHub 仓库中自动化任务。使用 GitHub Actions，可以：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;自动化构建和部署过程。&lt;&#x2F;li&gt;
&lt;li&gt;确保部署管道的一致性。&lt;&#x2F;li&gt;
&lt;li&gt;节省时间并减少人为错误的风险。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;github-pages-yu-github-actions-de-dui-bi&quot;&gt;GitHub Pages 与 GitHub Actions 的对比&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;特性&lt;&#x2F;th&gt;&lt;th&gt;GitHub Pages&lt;&#x2F;th&gt;&lt;th&gt;GitHub Actions&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;自动化程度&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;需要手动构建和推送&lt;&#x2F;td&gt;&lt;td&gt;完全自动化&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;灵活性&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;仅支持静态文件部署&lt;&#x2F;td&gt;&lt;td&gt;支持复杂的构建和部署逻辑&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;适用场景&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;简单的静态网站&lt;&#x2F;td&gt;&lt;td&gt;需要频繁更新或复杂流程的项目&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;集成能力&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;无法轻松集成其他工具&lt;&#x2F;td&gt;&lt;td&gt;可集成测试、代码检查等工具&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;学习成本&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;低&lt;&#x2F;td&gt;&lt;td&gt;需要编写和配置 Workflow 文件&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;如果博客更新频率较低且不需要复杂的构建流程，GitHub Pages 是一个简单的选择。但如果希望提高效率并减少手动操作，GitHub Actions 是更好的选择。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yong-github-actions-she-zhi-zola-zi-dong-hua-bu-shu&quot;&gt;使用 GitHub Actions 设置 Zola 自动化部署&lt;&#x2F;h2&gt;
&lt;p&gt;以下是设置 GitHub Actions 自动化部署 Zola 博客的步骤。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-yi-bu-chuang-jian-workflow-wen-jian&quot;&gt;第一步：创建 Workflow 文件&lt;&#x2F;h3&gt;
&lt;p&gt;在 &lt;code&gt;www.polly.com&lt;&#x2F;code&gt; 仓库中，创建一个新文件 &lt;code&gt;.github&#x2F;workflows&#x2F;deploy.yml&lt;&#x2F;code&gt;，内容如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Deploy Zola Blog
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;on&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;branches&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;main  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 监听 main 分支的提交
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;jobs&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;build-and-deploy&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;runs-on&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ubuntu-latest
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;steps&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Checkout Source Code
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;actions&#x2F;checkout@v3
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fetch-depth&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Install Zola
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        curl -sSf https:&#x2F;&#x2F;sh.rustup.rs | sh -s -- -y
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        export PATH=&amp;quot;$HOME&#x2F;.cargo&#x2F;bin:$PATH&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        cargo install zola
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Build Zola Site
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;zola build
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Deploy to polly2014.github.io
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;peaceiris&#x2F;actions-gh-pages@v3
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;github_token&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${{ secrets.GITHUB_TOKEN }}
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;publish_dir&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.&#x2F;public
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;external_repository&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;polly2014&#x2F;polly2014.github.io
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;publish_branch&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;main
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;di-er-bu-workflow-de-guan-jian-dian&quot;&gt;第二步：Workflow 的关键点&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;触发条件&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Workflow 在每次推送到 &lt;code&gt;main&lt;&#x2F;code&gt; 分支时触发。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装 Zola&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Rust 的包管理工具 &lt;code&gt;cargo&lt;&#x2F;code&gt; 安装 Zola。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;构建站点&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;运行 &lt;code&gt;zola build&lt;&#x2F;code&gt; 命令生成 &lt;code&gt;public&lt;&#x2F;code&gt; 文件夹中的静态文件。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;部署&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;peaceiris&#x2F;actions-gh-pages&lt;&#x2F;code&gt; Action 将 &lt;code&gt;public&lt;&#x2F;code&gt; 文件夹的内容部署到 &lt;code&gt;polly2014.github.io&lt;&#x2F;code&gt; 仓库。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;di-san-bu-ce-shi-workflow&quot;&gt;第三步：测试 Workflow&lt;&#x2F;h3&gt;
&lt;p&gt;提交 Workflow 文件后，对博客进行更改并推送到 &lt;code&gt;main&lt;&#x2F;code&gt; 分支。GitHub Actions 将自动：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;检出源代码。&lt;&#x2F;li&gt;
&lt;li&gt;安装 Zola。&lt;&#x2F;li&gt;
&lt;li&gt;构建站点。&lt;&#x2F;li&gt;
&lt;li&gt;将生成的文件部署到 &lt;code&gt;polly2014.github.io&lt;&#x2F;code&gt; 仓库。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;可以在仓库的 &lt;strong&gt;Actions&lt;&#x2F;strong&gt; 标签中监控 Workflow 的进度。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xin-gong-zuo-liu-cheng-de-you-shi&quot;&gt;新工作流程的优势&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自动化&lt;&#x2F;strong&gt;：无需手动构建和复制文件。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;一致性&lt;&#x2F;strong&gt;：确保每次部署过程都相同。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;高效性&lt;&#x2F;strong&gt;：节省时间并减少错误风险。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;jie-lun&quot;&gt;结论&lt;&#x2F;h2&gt;
&lt;p&gt;通过将GitHub Actions集成到Zola博客工作流程中，可以实现完全自动化的构建和部署管道。这不仅简化了工作流程，还让你能够专注于真正重要的事情——创作优质内容。&lt;&#x2F;p&gt;
&lt;p&gt;如果还没有尝试过 GitHub Actions，现在正是探索其功能并将您的 Zola 博客提升到新水平的最佳时机！&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
