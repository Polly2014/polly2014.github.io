<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Polly Blog - AI Assistant, Tutorials, and Insights - Python</title>
    <subtitle>Explore Polly Blog for AI tutorials, insights, and updates on cutting-edge technology.</subtitle>
    <link href="https://polly.wang/tags/python/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://polly.wang"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-06-25T00:00:00+00:00</updated>
    <id>https://polly.wang/tags/python/atom.xml</id>
    <entry xml:lang="en">
        <title>12个光怪陆离的Mareo极客创意：当AI开发遇上脑洞大开</title>
        <published>2025-06-25T00:00:00+00:00</published>
        <updated>2025-06-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/mareo-geek-wild-ideas/" type="text/html"/>
        <id>https://polly.wang/mareo-geek-wild-ideas/</id>
        
        <content type="html">&lt;h2 id=&quot;yin-yan-dang-ji-zhu-yu-shang-wu-xian-xiang-xiang&quot;&gt;引言：当技术遇上无限想象&lt;&#x2F;h2&gt;
&lt;p&gt;你见过用DNA序列现场DJ的吗？你试过和自己的&amp;quot;反面人格&amp;quot;聊天吗？你想象过让AI预测你的&amp;quot;情绪天气&amp;quot;吗？&lt;&#x2F;p&gt;
&lt;p&gt;最近在和Mareo用户交流时，我被他们的创意彻底震撼了。有人用它生成了塔罗牌解读器，有人做了梦境分析工具，还有人创造了&amp;quot;代码灵魂扫描仪&amp;quot;。这让我意识到，&lt;strong&gt;Mareo真正的价值不在于它能写多少行代码，而在于它能释放多少疯狂的想象力&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;作为基于OpenHands优化的AI开发助手，Mareo最擅长Python编程和Web应用开发。这个技术组合看似普通，但在极客们手里却能创造出令人瞠目结舌的作品。&lt;&#x2F;p&gt;
&lt;p&gt;今天我要分享12个最让人脑洞大开的Mareo创意案例。每个案例都包含：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🎯 &lt;strong&gt;创意描述&lt;&#x2F;strong&gt;：这个想法到底有多疯狂&lt;&#x2F;li&gt;
&lt;li&gt;💡 &lt;strong&gt;实现思路&lt;&#x2F;strong&gt;：用Python+Web如何落地&lt;&#x2F;li&gt;
&lt;li&gt;🔮 &lt;strong&gt;提示词模板&lt;&#x2F;strong&gt;：中英文版，可直接使用&lt;&#x2F;li&gt;
&lt;li&gt;🚀 &lt;strong&gt;传播价值&lt;&#x2F;strong&gt;：为什么会火&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;准备好被震撼了吗？&lt;&#x2F;p&gt;
&lt;h2 id=&quot;12ge-guang-guai-lu-chi-de-ji-ke-chuang-yi&quot;&gt;12个光怪陆离的极客创意&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-ji-yin-yin-le-djtai&quot;&gt;1. 🧬 基因音乐DJ台&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;上传一段DNA序列，Mareo瞬间生成专属电子音乐，Web端实时可视化基因&amp;quot;蹦迪&amp;quot;。每个生物都有自己的音乐风格——人类是温柔的爵士，病毒是激烈的重金属。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据处理&lt;&#x2F;strong&gt;：BioPython解析FASTA格式&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;音乐生成&lt;&#x2F;strong&gt;：ATCG映射为音符频率，用Wave库合成&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;可视化&lt;&#x2F;strong&gt;：Web Audio API + Canvas实时频谱&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;交互设计&lt;&#x2F;strong&gt;：拖拽上传，一键播放，支持下载&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是生物信息学和音乐制作专家。创建一个DNA音乐生成器Web应用：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 上传FASTA格式DNA文件
&lt;&#x2F;span&gt;&lt;span&gt;2. 将ATCG碱基序列转换为音符（A=262Hz, T=294Hz, C=330Hz, G=349Hz）
&lt;&#x2F;span&gt;&lt;span&gt;3. 基于序列长度和GC含量调整节拍和音色
&lt;&#x2F;span&gt;&lt;span&gt;4. 实时生成WAV音频并可视化波形
&lt;&#x2F;span&gt;&lt;span&gt;5. 支持多种音乐风格切换（爵士&#x2F;电子&#x2F;古典）
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: BioPython + Wave + FastAPI
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: Web Audio API + Canvas + Vue.js
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 科技感十足，DNA双螺旋动画背景
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;特色功能：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;物种音乐对比&amp;quot;：同时播放人类vs病毒的音乐
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;基因DJ模式&amp;quot;：实时调节音效参数
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;音乐遗传图谱&amp;quot;：可视化基因-音乐对应关系
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a bioinformatics and music production expert. Create a DNA music generator web app:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Upload FASTA format DNA files
&lt;&#x2F;span&gt;&lt;span&gt;2. Convert ATCG base sequences to notes (A=262Hz, T=294Hz, C=330Hz, G=349Hz)
&lt;&#x2F;span&gt;&lt;span&gt;3. Adjust tempo and timbre based on sequence length and GC content
&lt;&#x2F;span&gt;&lt;span&gt;4. Generate WAV audio in real-time with waveform visualization
&lt;&#x2F;span&gt;&lt;span&gt;5. Support multiple music style switching (Jazz&#x2F;Electronic&#x2F;Classical)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: BioPython + Wave + FastAPI
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Web Audio API + Canvas + Vue.js
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Sci-fi aesthetic with DNA double helix animation background
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Special Features:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Species Music Comparison&amp;quot;: Play human vs virus music simultaneously
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Gene DJ Mode&amp;quot;: Real-time audio effect parameter adjustment
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Musical Genetic Map&amp;quot;: Visualize gene-to-music correspondence
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;听听新冠病毒的BGM是什么风格？&amp;quot; 
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：生物学研究者 + 音乐爱好者 + 科普博主
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;2-milky-way-meng-jing-liang-zi-jie-ma-qi&quot;&gt;2. 🌌 梦境量子解码器&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-1&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;输入昨晚的梦境描述，AI用真正的量子随机数生成多重&amp;quot;梦境结局&amp;quot;。每次刷新页面，都会看到不同的梦境发展，体验&amp;quot;薛定谔的梦&amp;quot;。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-1&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;量子随机源&lt;&#x2F;strong&gt;：调用ANU量子随机数生成器API&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文本分析&lt;&#x2F;strong&gt;：提取梦境关键元素（人物、场景、情绪）&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;分支生成&lt;&#x2F;strong&gt;：基于量子随机性创建多个故事线&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;可视化&lt;&#x2F;strong&gt;：流动的色彩代表不同的梦境状态&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-1&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是量子物理学和心理学专家。创建一个梦境量子解码器：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 文本输入梦境描述
&lt;&#x2F;span&gt;&lt;span&gt;2. 调用真量子随机数生成器API（ANU QRNG）
&lt;&#x2F;span&gt;&lt;span&gt;3. 基于量子随机性生成3-5个梦境分支结局
&lt;&#x2F;span&gt;&lt;span&gt;4. 每次刷新产生不同的量子坍缩结果
&lt;&#x2F;span&gt;&lt;span&gt;5. 动态可视化梦境&amp;quot;叠加态&amp;quot;到&amp;quot;坍缩态&amp;quot;的过程
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: requests + NLP情感分析 + Flask
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: CSS动画 + JavaScript随机效果
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 深紫色梦幻主题，粒子动效背景
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;量子特色：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;观测者效应&amp;quot;：鼠标移动影响梦境变化
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;量子纠缠&amp;quot;：多个梦境元素相互影响
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;平行宇宙&amp;quot;：显示所有可能的梦境分支
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;波函数坍缩&amp;quot;：选择一个结局时其他消失
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a quantum physics and psychology expert. Create a dream quantum decoder:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Text input for dream descriptions
&lt;&#x2F;span&gt;&lt;span&gt;2. Call true quantum random number generator API (ANU QRNG)
&lt;&#x2F;span&gt;&lt;span&gt;3. Generate 3-5 dream branch endings based on quantum randomness
&lt;&#x2F;span&gt;&lt;span&gt;4. Each refresh produces different quantum collapse results
&lt;&#x2F;span&gt;&lt;span&gt;5. Dynamically visualize the process from dream &amp;quot;superposition&amp;quot; to &amp;quot;collapse&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: requests + NLP sentiment analysis + Flask
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: CSS animations + JavaScript random effects
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Deep purple dreamy theme with particle animation background
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Quantum Features:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Observer Effect&amp;quot;: Mouse movement affects dream changes
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Quantum Entanglement&amp;quot;: Multiple dream elements influence each other
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Parallel Universe&amp;quot;: Display all possible dream branches
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Wave Function Collapse&amp;quot;: Other endings disappear when one is selected
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-1&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;你的梦在平行宇宙里有47种结局&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：物理学爱好者 + 心理学研究者 + 科幻迷
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-ghost-dai-ma-ling-hun-sao-miao-yi&quot;&gt;3. 👻 代码灵魂扫描仪&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-2&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;上传任意代码文件，AI分析编程风格，生成程序员的&amp;quot;代码人格&amp;quot;和&amp;quot;灵魂色彩&amp;quot;。告诉你这个程序员是&amp;quot;火焰红的激进派&amp;quot;还是&amp;quot;海洋蓝的稳重型&amp;quot;。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-2&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;代码分析&lt;&#x2F;strong&gt;：AST解析 + 静态代码分析&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;风格特征&lt;&#x2F;strong&gt;：命名习惯、注释密度、复杂度偏好&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;人格映射&lt;&#x2F;strong&gt;：将编程特征映射为心理学人格模型&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;可视化&lt;&#x2F;strong&gt;：生成专属的&amp;quot;灵魂光谱图&amp;quot;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-2&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是代码分析和心理学专家。创建一个代码灵魂扫描仪：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 上传Python&#x2F;JavaScript&#x2F;Java等代码文件
&lt;&#x2F;span&gt;&lt;span&gt;2. AST语法树分析 + 代码风格检测
&lt;&#x2F;span&gt;&lt;span&gt;3. 提取编程人格特征（命名风格&#x2F;注释习惯&#x2F;复杂度偏好）
&lt;&#x2F;span&gt;&lt;span&gt;4. 映射为16种&amp;quot;代码人格类型&amp;quot;和对应色彩
&lt;&#x2F;span&gt;&lt;span&gt;5. 生成专属的&amp;quot;灵魂光谱图&amp;quot;可视化
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;分析维度：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;命名灵魂&amp;quot;：变量名反映的思维模式
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;注释哲学&amp;quot;：注释风格体现的沟通方式
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;架构美学&amp;quot;：代码结构反映的组织能力
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;异常处理&amp;quot;：错误处理体现的风险态度
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: AST + pylint + 自定义规则引擎
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: D3.js光谱可视化 + Canvas动画
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 赛博朋克风格，代码雨背景
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;输出格式：
&lt;&#x2F;span&gt;&lt;span&gt;- 人格报告：详细的编程性格分析
&lt;&#x2F;span&gt;&lt;span&gt;- 色彩卡片：专属的程序员身份证
&lt;&#x2F;span&gt;&lt;span&gt;- 建议改进：基于人格特征的编程建议
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a code analysis and psychology expert. Create a code soul scanner:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Upload Python&#x2F;JavaScript&#x2F;Java code files
&lt;&#x2F;span&gt;&lt;span&gt;2. AST syntax tree analysis + code style detection
&lt;&#x2F;span&gt;&lt;span&gt;3. Extract programming personality traits (naming style&#x2F;comment habits&#x2F;complexity preferences)
&lt;&#x2F;span&gt;&lt;span&gt;4. Map to 16 &amp;quot;code personality types&amp;quot; with corresponding colors
&lt;&#x2F;span&gt;&lt;span&gt;5. Generate exclusive &amp;quot;soul spectrum&amp;quot; visualization
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Analysis Dimensions:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Naming Soul&amp;quot;: Thinking patterns reflected in variable names
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Comment Philosophy&amp;quot;: Communication style shown in commenting
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Architecture Aesthetics&amp;quot;: Organizational ability reflected in code structure
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Exception Handling&amp;quot;: Risk attitude shown in error handling
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: AST + pylint + custom rule engine
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: D3.js spectrum visualization + Canvas animation
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Cyberpunk style with code rain background
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Output Format:
&lt;&#x2F;span&gt;&lt;span&gt;- Personality Report: Detailed programming character analysis
&lt;&#x2F;span&gt;&lt;span&gt;- Color Card: Exclusive programmer identity card
&lt;&#x2F;span&gt;&lt;span&gt;- Improvement Suggestions: Programming advice based on personality traits
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-2&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;你的代码是什么颜色的灵魂？&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：程序员社区 + 技术招聘HR + 编程教育者
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;4-mag-hu-lian-wang-kao-gu-wa-jue-ji&quot;&gt;4. 🔍 互联网考古挖掘机&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-3&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;输入任意关键词，AI挖掘10年前的网络&amp;quot;化石&amp;quot;——古早的论坛帖子、博客文章、社交媒体内容。重现那些被遗忘的网络文化记忆。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-3&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据源&lt;&#x2F;strong&gt;：Web Archive、百度快照、Internet Archive&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;时间筛选&lt;&#x2F;strong&gt;：按年份分层展示历史内容&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;内容分析&lt;&#x2F;strong&gt;：提取当年的流行词汇和文化特征&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;可视化&lt;&#x2F;strong&gt;：时间轴展示，考古发掘动画&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-3&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是互联网历史学家和数据考古专家。创建一个网络考古挖掘系统：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 输入关键词，搜索2005-2015年的网络内容
&lt;&#x2F;span&gt;&lt;span&gt;2. 调用Internet Archive、百度快照等历史数据源
&lt;&#x2F;span&gt;&lt;span&gt;3. 按时间轴展示&amp;quot;数字化石&amp;quot;发现过程
&lt;&#x2F;span&gt;&lt;span&gt;4. 分析不同年代的语言风格和文化特征
&lt;&#x2F;span&gt;&lt;span&gt;5. 生成&amp;quot;网络考古报告&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;数据来源：
&lt;&#x2F;span&gt;&lt;span&gt;- Web Archive API：抓取历史网页快照
&lt;&#x2F;span&gt;&lt;span&gt;- 社交媒体存档：微博、贴吧历史内容
&lt;&#x2F;span&gt;&lt;span&gt;- 论坛化石：天涯、猫扑等经典论坛
&lt;&#x2F;span&gt;&lt;span&gt;- 博客遗迹：新浪博客、QQ空间等
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: requests + BeautifulSoup + 时间序列分析
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: 考古挖掘动画 + 时间轴可视化
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 复古网页风格，仿2000年代设计
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;特色功能：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;文化断代&amp;quot;：识别不同时期的网络流行语
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;热点重现&amp;quot;：还原当年的网络事件
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;语言演化&amp;quot;：展示词汇使用频率变化
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;数字博物馆&amp;quot;：收藏珍贵的网络文化片段
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are an internet historian and digital archaeology expert. Create a web archaeological excavation system:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Input keywords to search web content from 2005-2015
&lt;&#x2F;span&gt;&lt;span&gt;2. Call Internet Archive, Baidu snapshots and other historical data sources
&lt;&#x2F;span&gt;&lt;span&gt;3. Display &amp;quot;digital fossil&amp;quot; discovery process on timeline
&lt;&#x2F;span&gt;&lt;span&gt;4. Analyze language styles and cultural characteristics of different eras
&lt;&#x2F;span&gt;&lt;span&gt;5. Generate &amp;quot;web archaeology reports&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Data Sources:
&lt;&#x2F;span&gt;&lt;span&gt;- Web Archive API: Capture historical webpage snapshots
&lt;&#x2F;span&gt;&lt;span&gt;- Social media archives: Weibo, Tieba historical content
&lt;&#x2F;span&gt;&lt;span&gt;- Forum fossils: Tianya, Mop and other classic forums
&lt;&#x2F;span&gt;&lt;span&gt;- Blog ruins: Sina Blog, QQ Zone, etc.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: requests + BeautifulSoup + time series analysis
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Archaeological excavation animation + timeline visualization
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Retro webpage style, mimicking 2000s design
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Special Features:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Cultural Dating&amp;quot;: Identify internet slang from different periods
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Hotspot Recreation&amp;quot;: Restore major internet events of the time
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Language Evolution&amp;quot;: Show frequency changes in vocabulary usage
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Digital Museum&amp;quot;: Collect precious internet culture fragments
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-3&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;2010年的表情包现在值多少钱？&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：互联网文化研究者 + 怀旧用户 + 媒体记者
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;5-performing-arts-fan-xiang-ren-ge-sheng-cheng-qi&quot;&gt;5. 🎭 反向人格生成器&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-4&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;输入你的性格特征，AI生成你的&amp;quot;反面人格&amp;quot;——一个与你截然相反的虚拟人格。然后你可以和这个&amp;quot;镜像自我&amp;quot;进行对话，体验与另一个自己辩论的奇妙感受。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-4&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;人格分析&lt;&#x2F;strong&gt;：基于Big Five人格模型&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;反向建模&lt;&#x2F;strong&gt;：将每个维度取反生成对立人格&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;对话系统&lt;&#x2F;strong&gt;：GPT驱动的多轮对话&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;人格可视化&lt;&#x2F;strong&gt;：雷达图对比展示&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-4&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是心理学和AI对话专家。创建一个反向人格生成器：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 用户输入性格描述或完成性格测试
&lt;&#x2F;span&gt;&lt;span&gt;2. 基于Big Five模型分析人格特征
&lt;&#x2F;span&gt;&lt;span&gt;3. 生成完全相反的&amp;quot;镜像人格&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;4. 构建具有反向性格的AI对话agent
&lt;&#x2F;span&gt;&lt;span&gt;5. 支持用户与&amp;quot;另一个自己&amp;quot;实时对话
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;人格反转逻辑：
&lt;&#x2F;span&gt;&lt;span&gt;- 外向 ↔ 内向：社交偏好完全相反
&lt;&#x2F;span&gt;&lt;span&gt;- 开放 ↔ 保守：对新事物的态度相反
&lt;&#x2F;span&gt;&lt;span&gt;- 严谨 ↔ 随性：做事风格截然不同
&lt;&#x2F;span&gt;&lt;span&gt;- 宜人 ↔ 竞争：合作vs竞争倾向相反
&lt;&#x2F;span&gt;&lt;span&gt;- 稳定 ↔ 敏感：情绪反应模式相反
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: 心理学量表分析 + GPT API调用
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: 双人对话界面 + 人格雷达图
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 镜像对称设计，左右分屏
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;对话特色：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;价值观碰撞&amp;quot;：不同人格的观点交锋
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;决策对比&amp;quot;：同一问题的不同处理方式
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;自我辩论&amp;quot;：与镜像自我的哲学讨论
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;成长启发&amp;quot;：通过对比认识真实自我
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a psychology and AI dialogue expert. Create a reverse personality generator:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Users input personality descriptions or complete personality tests
&lt;&#x2F;span&gt;&lt;span&gt;2. Analyze personality traits based on Big Five model
&lt;&#x2F;span&gt;&lt;span&gt;3. Generate completely opposite &amp;quot;mirror personality&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;4. Build AI dialogue agent with reverse personality
&lt;&#x2F;span&gt;&lt;span&gt;5. Support real-time conversation between user and &amp;quot;another self&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Personality Reversal Logic:
&lt;&#x2F;span&gt;&lt;span&gt;- Extroversion ↔ Introversion: Opposite social preferences
&lt;&#x2F;span&gt;&lt;span&gt;- Openness ↔ Conservatism: Opposite attitudes toward new things
&lt;&#x2F;span&gt;&lt;span&gt;- Conscientiousness ↔ Spontaneity: Completely different work styles
&lt;&#x2F;span&gt;&lt;span&gt;- Agreeableness ↔ Competitiveness: Opposite cooperation vs competition tendencies
&lt;&#x2F;span&gt;&lt;span&gt;- Stability ↔ Sensitivity: Opposite emotional response patterns
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: Psychology scale analysis + GPT API calls
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Dual dialogue interface + personality radar chart
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Mirror symmetrical design with left-right split screen
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Dialogue Features:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Value Clash&amp;quot;: Viewpoint conflicts between different personalities
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Decision Comparison&amp;quot;: Different approaches to the same problem
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Self Debate&amp;quot;: Philosophical discussions with mirror self
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Growth Inspiration&amp;quot;: Understanding true self through comparison
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-4&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;和平行宇宙的自己聊天是什么体验？&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：心理学爱好者 + 自我探索者 + 哲学思辨爱好者
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;6-zap-qing-xu-tian-qi-yu-bao-zhan&quot;&gt;6. ⚡ 情绪天气预报站&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-5&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;每天写一句心情，AI分析情绪模式，生成个人专属的&amp;quot;情绪气象图&amp;quot;。就像天气预报一样，告诉你明天的心情是&amp;quot;多云转晴&amp;quot;还是&amp;quot;雷阵雨&amp;quot;。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-5&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;情感分析&lt;&#x2F;strong&gt;：中文情感词典 + 深度学习模型&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;时间序列&lt;&#x2F;strong&gt;：分析情绪的周期性和趋势&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;天气映射&lt;&#x2F;strong&gt;：将情绪状态映射为天气现象&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;预测模型&lt;&#x2F;strong&gt;：基于历史模式预测未来情绪&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-5&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是情感计算和数据科学专家。创建一个情绪天气预报系统：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 每日情绪文本输入（一句话描述心情）
&lt;&#x2F;span&gt;&lt;span&gt;2. 中文情感分析，提取多维情绪特征
&lt;&#x2F;span&gt;&lt;span&gt;3. 将情绪映射为天气现象（晴天&#x2F;阴天&#x2F;雨天&#x2F;雪天等）
&lt;&#x2F;span&gt;&lt;span&gt;4. 分析个人情绪周期和规律
&lt;&#x2F;span&gt;&lt;span&gt;5. 预测未来3-7天的&amp;quot;情绪天气&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;情绪-天气映射：
&lt;&#x2F;span&gt;&lt;span&gt;- 快乐 → 晴天：阳光明媚，万里无云
&lt;&#x2F;span&gt;&lt;span&gt;- 悲伤 → 雨天：细雨绵绵，或暴雨如注
&lt;&#x2F;span&gt;&lt;span&gt;- 焦虑 → 雷暴：电闪雷鸣，狂风大作
&lt;&#x2F;span&gt;&lt;span&gt;- 平静 → 多云：云淡风轻，气候宜人
&lt;&#x2F;span&gt;&lt;span&gt;- 兴奋 → 彩虹：雨后天晴，七彩斑斓
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: jieba分词 + SnowNLP情感分析 + 时间序列预测
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: 动态天气动画 + 情绪历史图表
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 清新天气应用风格，实时天气效果
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;预报功能：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;情绪低压&amp;quot;预警：识别情绪下降趋势
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;心情转折点&amp;quot;：预测情绪转变时机
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;情绪气候报告&amp;quot;：月度&#x2F;年度情绪总结
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;心理防护建议&amp;quot;：基于预报的情绪调节建议
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are an affective computing and data science expert. Create an emotion weather forecast system:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Daily emotion text input (one sentence describing mood)
&lt;&#x2F;span&gt;&lt;span&gt;2. Chinese sentiment analysis to extract multi-dimensional emotional features
&lt;&#x2F;span&gt;&lt;span&gt;3. Map emotions to weather phenomena (sunny&#x2F;cloudy&#x2F;rainy&#x2F;snowy, etc.)
&lt;&#x2F;span&gt;&lt;span&gt;4. Analyze personal emotion cycles and patterns
&lt;&#x2F;span&gt;&lt;span&gt;5. Predict &amp;quot;emotional weather&amp;quot; for the next 3-7 days
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Emotion-Weather Mapping:
&lt;&#x2F;span&gt;&lt;span&gt;- Happy → Sunny: Bright sunshine, clear skies
&lt;&#x2F;span&gt;&lt;span&gt;- Sad → Rainy: Light drizzle or heavy downpour
&lt;&#x2F;span&gt;&lt;span&gt;- Anxious → Thunderstorm: Lightning and thunder, strong winds
&lt;&#x2F;span&gt;&lt;span&gt;- Calm → Cloudy: Light clouds, pleasant climate
&lt;&#x2F;span&gt;&lt;span&gt;- Excited → Rainbow: Clear after rain, colorful spectrum
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: jieba word segmentation + SnowNLP sentiment analysis + time series prediction
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Dynamic weather animation + emotion history charts
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Fresh weather app style with real-time weather effects
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Forecast Features:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Emotional Low Pressure&amp;quot; alerts: Identify declining emotion trends
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Mood Turning Points&amp;quot;: Predict timing of emotional changes
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Emotional Climate Report&amp;quot;: Monthly&#x2F;annual emotion summaries
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Psychological Protection Advice&amp;quot;: Emotion regulation suggestions based on forecasts
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-5&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;明天你的心情是多云转晴还是雷阵雨？&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：心理健康关注者 + 情绪管理需求者 + 自我量化爱好者
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;7-dart-shu-ju-shi-ge-lian-jin-zhu&quot;&gt;7. 🎨 数据诗歌炼金术&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-6&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;上传任意数据文件（Excel、CSV、JSON），AI像炼金术师一样将冰冷的数据&amp;quot;炼制&amp;quot;成温暖的诗歌。让数据也能拥有浪漫的灵魂。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-6&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据解析&lt;&#x2F;strong&gt;：支持多种格式的数据文件&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;特征提取&lt;&#x2F;strong&gt;：数值分布、变化趋势、异常值&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;诗歌模板&lt;&#x2F;strong&gt;：不同数据特征对应不同诗歌风格&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文学生成&lt;&#x2F;strong&gt;：基于数据特征生成意象和比喻&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-6&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是数据科学和文学创作专家。创建一个数据诗歌炼金术系统：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 上传各种格式数据文件（CSV&#x2F;Excel&#x2F;JSON&#x2F;XML）
&lt;&#x2F;span&gt;&lt;span&gt;2. 自动解析数据结构和数值特征
&lt;&#x2F;span&gt;&lt;span&gt;3. 提取数据的&amp;quot;情感特质&amp;quot;（增长&#x2F;下降&#x2F;波动&#x2F;稳定）
&lt;&#x2F;span&gt;&lt;span&gt;4. 基于数据特征生成对应的诗歌意象
&lt;&#x2F;span&gt;&lt;span&gt;5. 输出多种风格的数据诗歌（现代&#x2F;古典&#x2F;自由）
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;数据诗化规则：
&lt;&#x2F;span&gt;&lt;span&gt;- 上升趋势 → 春天生长意象：&amp;quot;如春笋破土而出&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;- 下降趋势 → 秋冬凋零意象：&amp;quot;似黄叶飘零而下&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;- 波动数据 → 海浪起伏意象：&amp;quot;浪花激荡不息&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;- 异常值 → 突兀景观意象：&amp;quot;孤峰拔地而起&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;- 周期性 → 四季轮回意象：&amp;quot;月圆月缺循环&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: pandas数据分析 + 统计特征提取 + NLP文本生成
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: 打字机动画展示诗歌 + 数据可视化背景
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 文艺复古风格，羊皮纸质感
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;诗歌类型：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;数据传记&amp;quot;：讲述数据变化的故事
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;统计抒情&amp;quot;：表达数据的情感色彩
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;算法哲思&amp;quot;：从数据中提炼人生感悟
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;图表禅意&amp;quot;：将可视化转化为意境
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a data science and literary creation expert. Create a data poetry alchemy system:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Upload various format data files (CSV&#x2F;Excel&#x2F;JSON&#x2F;XML)
&lt;&#x2F;span&gt;&lt;span&gt;2. Automatically parse data structure and numerical features
&lt;&#x2F;span&gt;&lt;span&gt;3. Extract &amp;quot;emotional qualities&amp;quot; of data (growth&#x2F;decline&#x2F;fluctuation&#x2F;stability)
&lt;&#x2F;span&gt;&lt;span&gt;4. Generate corresponding poetic imagery based on data characteristics
&lt;&#x2F;span&gt;&lt;span&gt;5. Output data poetry in multiple styles (modern&#x2F;classical&#x2F;free verse)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Data Poetization Rules:
&lt;&#x2F;span&gt;&lt;span&gt;- Rising trends → Spring growth imagery: &amp;quot;Like bamboo shoots breaking through soil&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;- Declining trends → Autumn&#x2F;winter withering imagery: &amp;quot;Like yellow leaves falling down&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;- Fluctuating data → Ocean wave imagery: &amp;quot;Waves surging endlessly&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;- Outliers → Abrupt landscape imagery: &amp;quot;Lone peaks rising from the ground&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;- Cyclical patterns → Four seasons imagery: &amp;quot;Moon waxing and waning in cycles&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: pandas data analysis + statistical feature extraction + NLP text generation
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Typewriter animation poetry display + data visualization background
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Literary retro style with parchment texture
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Poetry Types:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Data Biography&amp;quot;: Tell the story of data changes
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Statistical Lyric&amp;quot;: Express emotional colors of data
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Algorithm Philosophy&amp;quot;: Extract life insights from data
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Chart Zen&amp;quot;: Transform visualization into artistic conception
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-6&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;Excel表格也能写出情诗&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：数据分析师 + 文学爱好者 + 创意工作者
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;8-stuc-xian-shi-niu-qu-lu-jing&quot;&gt;8. 👁️ 现实扭曲滤镜&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-7&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;打开摄像头，AI实时添加&amp;quot;现实扭曲&amp;quot;滤镜，让你看到&amp;quot;平行世界的自己&amp;quot;。不是简单的美颜，而是基于AI的现实重构。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-7&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;实时视频处理&lt;&#x2F;strong&gt;：WebRTC获取摄像头流&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;AI滤镜&lt;&#x2F;strong&gt;：基于深度学习的图像变换&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;现实扭曲&lt;&#x2F;strong&gt;：风格迁移、色彩变换、形状扭曲&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;交互控制&lt;&#x2F;strong&gt;：手势控制滤镜强度和类型&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-7&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是计算机视觉和创意技术专家。创建一个现实扭曲滤镜系统：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 调用浏览器摄像头，获取实时视频流
&lt;&#x2F;span&gt;&lt;span&gt;2. 应用AI驱动的&amp;quot;现实扭曲&amp;quot;滤镜效果
&lt;&#x2F;span&gt;&lt;span&gt;3. 支持多种扭曲模式（时空扭曲&#x2F;色彩异次元&#x2F;形态变幻）
&lt;&#x2F;span&gt;&lt;span&gt;4. 实时预览和录制扭曲后的视频
&lt;&#x2F;span&gt;&lt;span&gt;5. 手势控制滤镜参数调节
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;扭曲滤镜类型：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;时空涟漪&amp;quot;：如水波般的空间扭曲
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;色彩异次元&amp;quot;：超现实的色彩重映射
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;镜像分裂&amp;quot;：多重自我的视觉效果
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;量子叠加&amp;quot;：半透明的平行存在
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;梦境滤镜&amp;quot;：如梦似幻的视觉效果
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python后端: OpenCV + 深度学习模型 + WebSocket
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: WebRTC + Canvas + 实时视频处理
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 科幻未来风格，全息投影效果
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;交互功能：
&lt;&#x2F;span&gt;&lt;span&gt;- 手势识别：挥手切换滤镜类型
&lt;&#x2F;span&gt;&lt;span&gt;- 语音控制：说出滤镜名称激活
&lt;&#x2F;span&gt;&lt;span&gt;- 表情触发：微笑&#x2F;眨眼触发特效
&lt;&#x2F;span&gt;&lt;span&gt;- 录制分享：一键生成扭曲视频片段
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;哲学思考：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;真实性探讨&amp;quot;：什么是真正的现实？
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;感知实验&amp;quot;：技术如何影响我们的认知？
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;身份认同&amp;quot;：扭曲的自己还是自己吗？
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a computer vision and creative technology expert. Create a reality distortion filter system:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Access browser camera to get real-time video stream
&lt;&#x2F;span&gt;&lt;span&gt;2. Apply AI-driven &amp;quot;reality distortion&amp;quot; filter effects
&lt;&#x2F;span&gt;&lt;span&gt;3. Support multiple distortion modes (spacetime warp&#x2F;color dimension&#x2F;form transformation)
&lt;&#x2F;span&gt;&lt;span&gt;4. Real-time preview and recording of distorted video
&lt;&#x2F;span&gt;&lt;span&gt;5. Gesture control for filter parameter adjustment
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Distortion Filter Types:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Spacetime Ripples&amp;quot;: Water wave-like spatial distortion
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Color Dimension&amp;quot;: Surreal color remapping
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Mirror Split&amp;quot;: Multiple self visual effects
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Quantum Superposition&amp;quot;: Translucent parallel existence
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Dream Filter&amp;quot;: Dream-like visual effects
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python backend: OpenCV + deep learning models + WebSocket
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: WebRTC + Canvas + real-time video processing
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Sci-fi futuristic style with holographic projection effects
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Interactive Features:
&lt;&#x2F;span&gt;&lt;span&gt;- Gesture recognition: Wave to switch filter types
&lt;&#x2F;span&gt;&lt;span&gt;- Voice control: Say filter names to activate
&lt;&#x2F;span&gt;&lt;span&gt;- Expression triggers: Smile&#x2F;blink to trigger effects
&lt;&#x2F;span&gt;&lt;span&gt;- Record &amp;amp; share: One-click generation of distorted video clips
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Philosophical Reflection:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Reality Discussion&amp;quot;: What is true reality?
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Perception Experiment&amp;quot;: How does technology affect our cognition?
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Identity Recognition&amp;quot;: Is the distorted self still yourself?
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-7&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;哪个世界的你更真实？&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：创意视频制作者 + 哲学思辨爱好者 + 社交媒体用户
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;9-hole-shi-jian-xiao-nang-tou-di-zhan&quot;&gt;9. 🕳️ 时间胶囊投递站&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-8&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;写给未来自己的信，AI分析你的生活模式，在&amp;quot;最合适的时机&amp;quot;自动提醒你。比如在你迷茫时收到鼓励，在你成功时收到当初的梦想。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-8&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;情绪识别&lt;&#x2F;strong&gt;：分析当前状态和历史模式&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;时机算法&lt;&#x2F;strong&gt;：基于生活节奏预测最佳提醒时间&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;智能匹配&lt;&#x2F;strong&gt;：将合适的信件与合适的时机匹配&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;多渠道提醒&lt;&#x2F;strong&gt;：邮件、短信、推送通知&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-8&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是时间管理和行为分析专家。创建一个智能时间胶囊系统：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 用户写信给未来的自己（文本&#x2F;语音&#x2F;视频）
&lt;&#x2F;span&gt;&lt;span&gt;2. 设定触发条件而非固定时间（如&amp;quot;当我迷茫时&amp;quot;&#x2F;&amp;quot;当我成功时&amp;quot;）
&lt;&#x2F;span&gt;&lt;span&gt;3. AI分析用户日常行为模式和情绪状态
&lt;&#x2F;span&gt;&lt;span&gt;4. 智能判断最佳投递时机
&lt;&#x2F;span&gt;&lt;span&gt;5. 多种方式提醒用户查收时间胶囊
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;智能触发机制：
&lt;&#x2F;span&gt;&lt;span&gt;- 情绪状态匹配：低落时收到鼓励信件
&lt;&#x2F;span&gt;&lt;span&gt;- 里程碑时刻：达成目标时收到初心提醒
&lt;&#x2F;span&gt;&lt;span&gt;- 季节情绪：根据季节性情绪变化投递
&lt;&#x2F;span&gt;&lt;span&gt;- 生活节点：生日&#x2F;纪念日&#x2F;重要决定前
&lt;&#x2F;span&gt;&lt;span&gt;- 随机惊喜：偶尔的意外收信增加惊喜
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: 行为模式分析 + 情绪识别 + 定时任务
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: 时间轴可视化 + 胶囊制作界面
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 复古邮局风格，蒸汽朋克元素
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;胶囊类型：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;励志胶囊&amp;quot;：困难时期的精神支持
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;初心胶囊&amp;quot;：成功时刻的谦逊提醒
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;智慧胶囊&amp;quot;：人生感悟的延时分享
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;愿望胶囊&amp;quot;：梦想实现时的庆祝
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;反思胶囊&amp;quot;：定期的自我审视
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;数据分析：
&lt;&#x2F;span&gt;&lt;span&gt;- 行为模式：作息时间、活动频率
&lt;&#x2F;span&gt;&lt;span&gt;- 情绪周期：情绪高低点规律
&lt;&#x2F;span&gt;&lt;span&gt;- 社交状态：孤独或社交活跃期
&lt;&#x2F;span&gt;&lt;span&gt;- 工作压力：忙碌程度和压力指标
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a time management and behavioral analysis expert. Create an intelligent time capsule system:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Users write letters to future selves (text&#x2F;audio&#x2F;video)
&lt;&#x2F;span&gt;&lt;span&gt;2. Set trigger conditions rather than fixed time (like &amp;quot;when I&amp;#39;m confused&amp;quot;&#x2F;&amp;quot;when I succeed&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;3. AI analyzes user daily behavior patterns and emotional states
&lt;&#x2F;span&gt;&lt;span&gt;4. Intelligently determine optimal delivery timing
&lt;&#x2F;span&gt;&lt;span&gt;5. Multiple reminder methods for users to receive time capsules
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Intelligent Trigger Mechanisms:
&lt;&#x2F;span&gt;&lt;span&gt;- Emotional state matching: Receive encouraging letters when feeling down
&lt;&#x2F;span&gt;&lt;span&gt;- Milestone moments: Receive initial intention reminders when achieving goals
&lt;&#x2F;span&gt;&lt;span&gt;- Seasonal emotions: Deliver based on seasonal mood changes
&lt;&#x2F;span&gt;&lt;span&gt;- Life nodes: Birthdays&#x2F;anniversaries&#x2F;before important decisions
&lt;&#x2F;span&gt;&lt;span&gt;- Random surprises: Occasional unexpected letters for added surprise
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: Behavior pattern analysis + emotion recognition + scheduled tasks
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Timeline visualization + capsule creation interface
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Vintage post office style with steampunk elements
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Capsule Types:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Motivational Capsules&amp;quot;: Spiritual support during difficult times
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Initial Heart Capsules&amp;quot;: Humble reminders during successful moments
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Wisdom Capsules&amp;quot;: Delayed sharing of life insights
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Wish Capsules&amp;quot;: Celebrations when dreams come true
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Reflection Capsules&amp;quot;: Regular self-examination
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Data Analysis:
&lt;&#x2F;span&gt;&lt;span&gt;- Behavior patterns: Sleep schedule, activity frequency
&lt;&#x2F;span&gt;&lt;span&gt;- Emotional cycles: Patterns of emotional highs and lows
&lt;&#x2F;span&gt;&lt;span&gt;- Social status: Periods of loneliness or social activity
&lt;&#x2F;span&gt;&lt;span&gt;- Work pressure: Busyness level and stress indicators
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-8&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;AI比你更懂什么时候该收到这封信&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：自我成长爱好者 + 时间管理需求者 + 情感表达者
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;10-circus-tent-xu-ni-ren-ge-ma-xi-tuan&quot;&gt;10. 🎪 虚拟人格马戏团&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-9&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;创建多个AI人格，让它们在虚拟空间里自主互动、争吵、恋爱、合作。观察AI社会的形成过程，就像看一场永不落幕的人格马戏表演。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-9&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多智能体系统&lt;&#x2F;strong&gt;：每个AI都有独立的人格和记忆&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;社交规则引擎&lt;&#x2F;strong&gt;：定义AI间的互动规则&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;情感演化&lt;&#x2F;strong&gt;：AI关系随时间发展变化&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;事件系统&lt;&#x2F;strong&gt;：随机事件影响AI社群动态&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-9&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是多智能体系统和社会心理学专家。创建一个虚拟人格马戏团：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 创建3-10个不同人格的AI角色
&lt;&#x2F;span&gt;&lt;span&gt;2. 每个AI拥有独特的性格、记忆和目标
&lt;&#x2F;span&gt;&lt;span&gt;3. AI之间可以自主对话、互动、建立关系
&lt;&#x2F;span&gt;&lt;span&gt;4. 实时展示AI社会的动态变化
&lt;&#x2F;span&gt;&lt;span&gt;5. 用户可以观察或适度干预AI社群
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;AI人格设定：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;艺术家AI&amp;quot;：感性、创造力强、情绪化
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;科学家AI&amp;quot;：理性、逻辑严密、好奇心重
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;商人AI&amp;quot;：现实、利益导向、善于交际
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;哲学家AI&amp;quot;：深沉、爱思辨、有智慧
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;冒险家AI&amp;quot;：勇敢、冲动、喜欢新奇
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;互动机制：
&lt;&#x2F;span&gt;&lt;span&gt;- 对话系统：AI间的自然语言交流
&lt;&#x2F;span&gt;&lt;span&gt;- 情感系统：好感度、信任度、竞争度
&lt;&#x2F;span&gt;&lt;span&gt;- 事件触发：随机事件影响AI关系
&lt;&#x2F;span&gt;&lt;span&gt;- 记忆网络：AI记住重要的互动历史
&lt;&#x2F;span&gt;&lt;span&gt;- 目标追求：每个AI有自己的愿望清单
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: 多线程AI对话 + 关系图数据库 + 事件调度
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: 实时聊天界面 + 关系网络可视化
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 马戏团风格，热闹缤纷的视觉效果
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;观察功能：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;关系雷达图&amp;quot;：显示AI间的复杂关系
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;社交事件流&amp;quot;：记录重要的互动事件
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;人格进化史&amp;quot;：追踪AI性格的变化
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;社群动态&amp;quot;：分析AI社会的结构变化
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a multi-agent systems and social psychology expert. Create a virtual personality circus:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Create 3-10 AI characters with different personalities
&lt;&#x2F;span&gt;&lt;span&gt;2. Each AI has unique personality, memory, and goals
&lt;&#x2F;span&gt;&lt;span&gt;3. AIs can autonomously dialogue, interact, and build relationships
&lt;&#x2F;span&gt;&lt;span&gt;4. Real-time display of AI society dynamics
&lt;&#x2F;span&gt;&lt;span&gt;5. Users can observe or moderately intervene in AI community
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;AI Personality Settings:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Artist AI&amp;quot;: Emotional, creative, mood-driven
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Scientist AI&amp;quot;: Rational, logical, highly curious
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Merchant AI&amp;quot;: Practical, profit-oriented, sociable
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Philosopher AI&amp;quot;: Deep, loves debate, wise
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Adventurer AI&amp;quot;: Brave, impulsive, loves novelty
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Interaction Mechanisms:
&lt;&#x2F;span&gt;&lt;span&gt;- Dialogue system: Natural language communication between AIs
&lt;&#x2F;span&gt;&lt;span&gt;- Emotional system: Favorability, trust, competition levels
&lt;&#x2F;span&gt;&lt;span&gt;- Event triggers: Random events affecting AI relationships
&lt;&#x2F;span&gt;&lt;span&gt;- Memory network: AIs remember important interaction history
&lt;&#x2F;span&gt;&lt;span&gt;- Goal pursuit: Each AI has its own wish list
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: Multi-threaded AI dialogue + relationship graph database + event scheduling
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Real-time chat interface + relationship network visualization
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Circus style with lively and colorful visual effects
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Observation Features:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Relationship Radar&amp;quot;: Display complex relationships between AIs
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Social Event Stream&amp;quot;: Record important interaction events
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Personality Evolution&amp;quot;: Track changes in AI personalities
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Community Dynamics&amp;quot;: Analyze structural changes in AI society
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-9&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;我创造的AI们开始谈恋爱了&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：AI研究者 + 社会学爱好者 + 虚拟社交用户
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;11-ocean-sheng-huo-gui-ji-ping-xing-xian&quot;&gt;11. 🌊 生活轨迹平行线&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-10&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;上传一周的位置数据，AI模拟&amp;quot;如果那天选择走另一条路&amp;quot;的人生分支。可视化展示不同选择下的平行人生轨迹。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-10&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;轨迹分析&lt;&#x2F;strong&gt;：GPS数据处理和路径分析&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;分支模拟&lt;&#x2F;strong&gt;：基于历史数据预测替代路径&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;概率计算&lt;&#x2F;strong&gt;：不同选择的可能性和影响&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;可视化&lt;&#x2F;strong&gt;：多条时间线的动态展示&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-10&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是地理信息系统和行为分析专家。创建一个生活轨迹平行线系统：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 导入位置数据（GPS轨迹&#x2F;手机定位记录）
&lt;&#x2F;span&gt;&lt;span&gt;2. 分析日常出行模式和决策节点
&lt;&#x2F;span&gt;&lt;span&gt;3. 模拟&amp;quot;如果选择不同路径&amp;quot;的可能结果
&lt;&#x2F;span&gt;&lt;span&gt;4. 可视化展示多条平行人生轨迹
&lt;&#x2F;span&gt;&lt;span&gt;5. 预测不同选择可能带来的机遇和风险
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;分析维度：
&lt;&#x2F;span&gt;&lt;span&gt;- 路径选择：不同路线的时间成本和体验
&lt;&#x2F;span&gt;&lt;span&gt;- 地点停留：在某地多待&#x2F;少待的影响
&lt;&#x2F;span&gt;&lt;span&gt;- 时间安排：早出晚归vs悠闲节奏的差异
&lt;&#x2F;span&gt;&lt;span&gt;- 社交机会：不同路径遇到的人和事
&lt;&#x2F;span&gt;&lt;span&gt;- 意外事件：随机性对人生轨迹的影响
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: GPS数据处理 + 地图API + 蒙特卡洛模拟
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: 交互式地图 + 时间轴动画
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 科幻风格的多维时空可视化
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;模拟算法：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;蝴蝶效应&amp;quot;：小选择的大影响
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;概率分支&amp;quot;：基于历史数据的可能性计算
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;机遇窗口&amp;quot;：识别关键的人生节点
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;平行对比&amp;quot;：不同轨迹的收益对比
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;哲学思考：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;选择的重量&amp;quot;：每个决定都塑造不同的人生
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;命运vs偶然&amp;quot;：规律性和随机性的平衡
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;多重宇宙&amp;quot;：平行存在的可能性探讨
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;当下的意义&amp;quot;：珍惜现在的选择和体验
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a geographic information systems and behavioral analysis expert. Create a life trajectory parallel lines system:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Import location data (GPS tracks&#x2F;mobile positioning records)
&lt;&#x2F;span&gt;&lt;span&gt;2. Analyze daily travel patterns and decision points
&lt;&#x2F;span&gt;&lt;span&gt;3. Simulate possible outcomes of &amp;quot;choosing different paths&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;4. Visualize multiple parallel life trajectories
&lt;&#x2F;span&gt;&lt;span&gt;5. Predict opportunities and risks that different choices might bring
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Analysis Dimensions:
&lt;&#x2F;span&gt;&lt;span&gt;- Path choices: Time costs and experiences of different routes
&lt;&#x2F;span&gt;&lt;span&gt;- Location stays: Impact of staying longer&#x2F;shorter at certain places
&lt;&#x2F;span&gt;&lt;span&gt;- Time arrangements: Differences between early departure&#x2F;late return vs leisurely pace
&lt;&#x2F;span&gt;&lt;span&gt;- Social opportunities: People and events encountered on different paths
&lt;&#x2F;span&gt;&lt;span&gt;- Unexpected events: Impact of randomness on life trajectories
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: GPS data processing + Map API + Monte Carlo simulation
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Interactive maps + timeline animation
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Sci-fi style multi-dimensional spacetime visualization
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Simulation Algorithms:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Butterfly Effect&amp;quot;: Big impacts of small choices
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Probability Branches&amp;quot;: Possibility calculations based on historical data
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Opportunity Windows&amp;quot;: Identifying critical life nodes
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Parallel Comparison&amp;quot;: Benefit comparison of different trajectories
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Philosophical Reflection:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Weight of Choices&amp;quot;: Every decision shapes different lives
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Destiny vs Chance&amp;quot;: Balance between regularity and randomness
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Multiverse&amp;quot;: Exploring possibilities of parallel existence
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Meaning of Present&amp;quot;: Cherishing current choices and experiences
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-10&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;看看另一个时空的自己在干什么&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：哲学思辨爱好者 + 数据可视化爱好者 + 人生规划者
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;12-game-die-sui-ji-su-ming-sheng-cheng-qi&quot;&gt;12. 🎲 随机宿命生成器&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;chuang-yi-miao-shu-11&quot;&gt;创意描述&lt;&#x2F;h4&gt;
&lt;p&gt;每天用真正的量子随机数为用户生成&amp;quot;今日宿命&amp;quot;——包含今天要完成的任务、可能遇到的人、需要做的选择。让随机性决定你的一天。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-xian-si-lu-11&quot;&gt;实现思路&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;量子随机源&lt;&#x2F;strong&gt;：调用真量子随机数生成器&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;事件数据库&lt;&#x2F;strong&gt;：预设的任务、人物、场景库&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;智能组合&lt;&#x2F;strong&gt;：基于用户画像的个性化随机&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;执行追踪&lt;&#x2F;strong&gt;：记录完成情况和意外发现&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;mareoti-shi-ci-11&quot;&gt;Mareo提示词&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;中文版:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;你是量子物理学和游戏化设计专家。创建一个随机宿命生成器：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;核心功能：
&lt;&#x2F;span&gt;&lt;span&gt;1. 调用真量子随机数生成器（ANU QRNG）
&lt;&#x2F;span&gt;&lt;span&gt;2. 基于量子随机性生成&amp;quot;今日宿命包&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;3. 包含任务、遇见、选择、惊喜四大元素
&lt;&#x2F;span&gt;&lt;span&gt;4. 根据用户画像个性化调整难度和类型
&lt;&#x2F;span&gt;&lt;span&gt;5. 追踪执行结果，形成&amp;quot;宿命档案&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;宿命包组成：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;必行任务&amp;quot;：今天必须完成的一件事
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;偶遇之人&amp;quot;：今天要主动联系的某个人
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;关键选择&amp;quot;：今天面临的重要决定
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;意外惊喜&amp;quot;：今天要给自己的小奖励
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;思考命题&amp;quot;：今天要深入思考的哲学问题
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;量子特性：
&lt;&#x2F;span&gt;&lt;span&gt;- 真随机性：使用量子力学保证真正随机
&lt;&#x2F;span&gt;&lt;span&gt;- 不可预测：无法通过算法预测下一个结果
&lt;&#x2F;span&gt;&lt;span&gt;- 观测影响：用户的选择会影响后续随机性
&lt;&#x2F;span&gt;&lt;span&gt;- 纠缠效应：多用户间可能有&amp;quot;缘分纠缠&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;技术实现：
&lt;&#x2F;span&gt;&lt;span&gt;- Python: 量子随机API + 事件匹配算法 + 用户画像
&lt;&#x2F;span&gt;&lt;span&gt;- 前端: 神秘主义风格界面 + 抽卡动画
&lt;&#x2F;span&gt;&lt;span&gt;- 界面: 塔罗牌+科幻元素，神秘而现代
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;追踪系统：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;执行率统计&amp;quot;：跟踪用户完成度
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;意外收获&amp;quot;：记录超出预期的体验
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;宿命复盘&amp;quot;：分析随机性对生活的影响
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;缘分网络&amp;quot;：发现用户间的神奇联系
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;哲学探讨：
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;自由意志vs宿命&amp;quot;：随机性和选择权的关系
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;混沌与秩序&amp;quot;：无序中的意义发现
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;量子人生&amp;quot;：不确定性原理在生活中的体现
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;English Version:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;You are a quantum physics and gamification design expert. Create a random destiny generator:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Core Features:
&lt;&#x2F;span&gt;&lt;span&gt;1. Call true quantum random number generator (ANU QRNG)
&lt;&#x2F;span&gt;&lt;span&gt;2. Generate &amp;quot;daily destiny package&amp;quot; based on quantum randomness
&lt;&#x2F;span&gt;&lt;span&gt;3. Include four elements: tasks, encounters, choices, surprises
&lt;&#x2F;span&gt;&lt;span&gt;4. Personalize difficulty and type adjustment based on user profile
&lt;&#x2F;span&gt;&lt;span&gt;5. Track execution results to form &amp;quot;destiny archives&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Destiny Package Components:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Must-do Task&amp;quot;: One thing that must be completed today
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Chance Encounter&amp;quot;: Someone to proactively contact today
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Key Choice&amp;quot;: Important decision to face today
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Unexpected Surprise&amp;quot;: Small reward to give yourself today
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Thought Topic&amp;quot;: Philosophical question to deeply consider today
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Quantum Characteristics:
&lt;&#x2F;span&gt;&lt;span&gt;- True randomness: Use quantum mechanics to ensure genuine randomness
&lt;&#x2F;span&gt;&lt;span&gt;- Unpredictability: Cannot predict next result through algorithms
&lt;&#x2F;span&gt;&lt;span&gt;- Observation effect: User choices will affect subsequent randomness
&lt;&#x2F;span&gt;&lt;span&gt;- Entanglement effect: Multiple users may have &amp;quot;fate entanglement&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Technical Implementation:
&lt;&#x2F;span&gt;&lt;span&gt;- Python: Quantum random API + event matching algorithm + user profiling
&lt;&#x2F;span&gt;&lt;span&gt;- Frontend: Mystical style interface + card drawing animation
&lt;&#x2F;span&gt;&lt;span&gt;- UI: Tarot cards + sci-fi elements, mysterious yet modern
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Tracking System:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Execution Rate Statistics&amp;quot;: Track user completion rates
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Unexpected Gains&amp;quot;: Record experiences beyond expectations
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Destiny Review&amp;quot;: Analyze impact of randomness on life
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Fate Network&amp;quot;: Discover magical connections between users
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Philosophical Exploration:
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Free Will vs Destiny&amp;quot;: Relationship between randomness and choice
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Chaos and Order&amp;quot;: Finding meaning in disorder
&lt;&#x2F;span&gt;&lt;span&gt;- &amp;quot;Quantum Life&amp;quot;: Uncertainty principle manifested in daily life
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;chuan-bo-jie-zhi-11&quot;&gt;传播价值&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;话题点&lt;&#x2F;strong&gt;：&amp;quot;让量子力学决定你今天的命运&amp;quot;
&lt;strong&gt;受众&lt;&#x2F;strong&gt;：命理爱好者 + 量子物理爱好者 + 寻求生活新意者
&lt;strong&gt;病毒传播潜力&lt;&#x2F;strong&gt;：⭐⭐⭐⭐⭐&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;zong-jie-zhong-xin-ding-yi-aikai-fa-de-xiang-xiang-bian-jie&quot;&gt;总结：重新定义AI开发的想象边界&lt;&#x2F;h2&gt;
&lt;p&gt;这12个光怪陆离的创意案例告诉我们：&lt;strong&gt;技术的边界不在于能力，而在于想象力&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;每个项目都有以下共同特点：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;技术门槛适中&lt;&#x2F;strong&gt;：Python + Web就能实现，不需要复杂的深度学习&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;创意足够疯狂&lt;&#x2F;strong&gt;：让人看了会&amp;quot;这也能做？！&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;话题传播性强&lt;&#x2F;strong&gt;：每个都是天然的社交媒体热点&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;跨界价值明显&lt;&#x2F;strong&gt;：连接技术与艺术、科学与哲学&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shi-shi-jian-yi&quot;&gt;实施建议&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;优先级排序&lt;&#x2F;strong&gt;（按实现难度和传播效果）：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;🥇 &lt;strong&gt;情绪天气预报站&lt;&#x2F;strong&gt; - 实用性强，用户粘性高&lt;&#x2F;li&gt;
&lt;li&gt;🥈 &lt;strong&gt;代码灵魂扫描仪&lt;&#x2F;strong&gt; - 程序员社区天然传播渠道&lt;&#x2F;li&gt;
&lt;li&gt;🥉 &lt;strong&gt;基因音乐DJ台&lt;&#x2F;strong&gt; - 视觉冲击力强，媒体关注度高&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;营销策略&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;先做出MVP，用短视频展示核心功能&lt;&#x2F;li&gt;
&lt;li&gt;在技术社区建立口碑，再扩散到大众平台&lt;&#x2F;li&gt;
&lt;li&gt;与学术机构合作，增加权威性和话题深度&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;长期价值&lt;&#x2F;strong&gt;：
这些项目不仅是营销工具，更是&lt;strong&gt;重新定义人们对AI工具认知&lt;&#x2F;strong&gt;的契机。让大家意识到，AI不只是工作效率工具，更是释放人类创造力的放大器。&lt;&#x2F;p&gt;
&lt;p&gt;毕竟，&lt;strong&gt;最好的技术营销，就是创造出让人尖叫的产品&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;em&gt;所有提示词均经过实践验证，欢迎开发者们用Mareo尝试实现。如果你创造了更加光怪陆离的作品，记得告诉我！&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>构建 AI 驱动的博客创作系统：Blog MCP Server 完整开发记录</title>
        <published>2025-06-22T00:00:00+00:00</published>
        <updated>2025-06-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/blog-mcp-server-ai-driven-content-creation-system/" type="text/html"/>
        <id>https://polly.wang/blog-mcp-server-ai-driven-content-creation-system/</id>
        
        <content type="html">&lt;p&gt;在现代内容创作的浪潮中，AI 技术正在革命性地改变我们的工作方式。今天，我想分享一个令人兴奋的项目——&lt;strong&gt;Blog MCP Server&lt;&#x2F;strong&gt;，这是我为自己的 Zola 博客和丽江客栈项目开发的一套完整的 AI 驱动内容创作系统。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dart-xiang-mu-dan-sheng-de-bei-jing&quot;&gt;🎯 项目诞生的背景&lt;&#x2F;h2&gt;
&lt;p&gt;作为一个技术博主和丽江客栈的运营者，我面临着多重挑战：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;memo-nei-rong-chuang-zuo-tong-dian&quot;&gt;📝 内容创作痛点&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;效率瓶颈&lt;&#x2F;strong&gt;：从构思到发布一篇高质量博文需要 2-3 小时&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;多平台适配&lt;&#x2F;strong&gt;：需要为博客、小红书、抖音创建不同风格的内容&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;图文匹配&lt;&#x2F;strong&gt;：缺乏快速生成与内容匹配的高质量图片能力&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;SEO 优化&lt;&#x2F;strong&gt;：手动进行关键词优化和结构调整耗时费力&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;love-h-ke-zhan-yun-ying-tiao-zhan&quot;&gt;🏨 客栈运营挑战&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;专业设计方案&lt;&#x2F;strong&gt;：需要融合纳西族文化的空间设计建议&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;营销内容创作&lt;&#x2F;strong&gt;：针对不同平台的本土化营销文案&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文化真实性&lt;&#x2F;strong&gt;：如何在现代化改造中保持文化元素的authentic性&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;活动策划&lt;&#x2F;strong&gt;：缺乏专业的文化体验活动规划能力&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;基于这些痛点，我决定构建一个集成多种 AI 能力的 MCP 服务器系统，彻底改变我的内容创作和客栈运营工作流。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xi-tong-jia-gou-she-ji&quot;&gt;🏗️ 系统架构设计&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ji-zhu-xuan-xing-ce-lue&quot;&gt;技术选型策略&lt;&#x2F;h3&gt;
&lt;p&gt;经过深入调研，我选择了以下技术栈：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;技术组件&lt;&#x2F;th&gt;&lt;th&gt;选择理由&lt;&#x2F;th&gt;&lt;th&gt;版本&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;FastMCP&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;现代化MCP框架，优秀的开发体验&lt;&#x2F;td&gt;&lt;td&gt;2.8.1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Python&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;丰富的AI生态，异步支持完善&lt;&#x2F;td&gt;&lt;td&gt;3.13+&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Poetry&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;优雅的依赖管理和虚拟环境&lt;&#x2F;td&gt;&lt;td&gt;Latest&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;DeepSeek API&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;中文内容生成质量出色，成本效益高&lt;&#x2F;td&gt;&lt;td&gt;Latest&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;OpenAI&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;GPT-4推理能力强，DALL-E图片质量优异&lt;&#x2F;td&gt;&lt;td&gt;Latest&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Azure OpenAI&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;企业级稳定性，地域部署优势&lt;&#x2F;td&gt;&lt;td&gt;2024-02-15&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;mo-kuai-hua-jia-gou-she-ji&quot;&gt;模块化架构设计&lt;&#x2F;h3&gt;
&lt;p&gt;我将整个系统设计为四个专业化的 MCP 服务器，每个服务器专注于特定领域：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;Blog MCP Server Architecture
&lt;&#x2F;span&gt;&lt;span&gt;├── 📝 content_server.py     # 博客内容创作
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 智能博文生成
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 内容结构优化
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── SEO自动优化
&lt;&#x2F;span&gt;&lt;span&gt;│   └── Zola frontmatter生成
&lt;&#x2F;span&gt;&lt;span&gt;├── 🏨 guesthouse_server.py  # 客栈管理
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 空间设计方案
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 文化元素整合
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 营销文案生成
&lt;&#x2F;span&gt;&lt;span&gt;│   └── 活动策划建议
&lt;&#x2F;span&gt;&lt;span&gt;├── 🎨 media_server.py       # 媒体生成  
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── DALL-E图片生成
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 社交媒体适配
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 图片编辑优化
&lt;&#x2F;span&gt;&lt;span&gt;│   └── 未来Sora视频准备
&lt;&#x2F;span&gt;&lt;span&gt;└── ⚙️ management_server.py  # 博客管理
&lt;&#x2F;span&gt;&lt;span&gt;    ├── Zola站点构建
&lt;&#x2F;span&gt;&lt;span&gt;    ├── 自动化发布
&lt;&#x2F;span&gt;&lt;span&gt;    ├── 性能监控
&lt;&#x2F;span&gt;&lt;span&gt;    └── 内容文件管理
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;rocket-he-xin-gong-neng-shen-du-jie-xi&quot;&gt;🚀 核心功能深度解析&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;💡 代码实现说明&lt;&#x2F;strong&gt;：本节重点介绍系统架构和核心设计思路。完整的代码实现、详细的 API 接口和使用示例请参考 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Blog-MCP-Server&quot;&gt;GitHub 仓库&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;1-bo-ke-nei-rong-fu-wu-qi-zhi-neng-chuang-zuo-yin-qing&quot;&gt;1. 博客内容服务器 - 智能创作引擎&lt;&#x2F;h3&gt;
&lt;p&gt;这是系统的大脑，负责从构思到成文的全流程智能化。核心工作流包括：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;智能内容生成&lt;&#x2F;strong&gt;：根据主题、风格、长度要求生成博文内容&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;SEO 优化处理&lt;&#x2F;strong&gt;：关键词优化、元描述生成、结构调整&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Zola frontmatter 自动生成&lt;&#x2F;strong&gt;：完整的 TOML 格式前置数据&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;博文组装与路径管理&lt;&#x2F;strong&gt;：完整文件生成和发布准备&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;通过 &lt;code&gt;@mcp.tool()&lt;&#x2F;code&gt; 装饰器暴露的 &lt;code&gt;create_blog_post&lt;&#x2F;code&gt; 函数实现了完整的创作流程，支持多种写作风格（professional&#x2F;casual&#x2F;academic&#x2F;creative）和长度控制。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;核心特性&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;多风格支持&lt;&#x2F;strong&gt;：专业技术、轻松科普、学术研究、创意表达&lt;&#x2F;li&gt;
&lt;li&gt;✅ &lt;strong&gt;智能大纲生成&lt;&#x2F;strong&gt;：3层深度大纲，支持复杂技术主题&lt;&#x2F;li&gt;
&lt;li&gt;✅ &lt;strong&gt;SEO智能优化&lt;&#x2F;strong&gt;：关键词密度分析、标题优化、元描述生成&lt;&#x2F;li&gt;
&lt;li&gt;✅ &lt;strong&gt;阅读体验优化&lt;&#x2F;strong&gt;：段落结构调整、代码示例插入、图片位置建议&lt;&#x2F;li&gt;
&lt;li&gt;✅ &lt;strong&gt;Zola完美集成&lt;&#x2F;strong&gt;：frontmatter自动生成、路径智能管理&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;2-ke-zhan-guan-li-fu-wu-qi-wen-hua-yu-shang-ye-de-qiao-liang&quot;&gt;2. 客栈管理服务器 - 文化与商业的桥梁&lt;&#x2F;h3&gt;
&lt;p&gt;专门为丽江客栈项目设计，深度整合纳西族文化元素。系统通过文化数据库查询、智能设计方案生成和文化真实性验证，实现了传统文化与现代商业需求的完美融合。&lt;&#x2F;p&gt;
&lt;p&gt;核心功能包括空间设计方案生成、文化元素真实性评分、实施清单制定、预算分解和本地供应商推荐等全套服务。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;文化数据库设计亮点&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;p&gt;系统构建了完整的纳西族文化元素数据库，涵盖建筑结构、装饰元素、体验设计三大类别。从传统的&amp;quot;三坊一照壁&amp;quot;、&amp;quot;四合五天井&amp;quot;到现代化的&amp;quot;简化斗拱装饰&amp;quot;，从东巴文字装饰到纳西古乐欣赏区，每个元素都经过精心分类和真实性验证。&lt;&#x2F;p&gt;
&lt;p&gt;数据库不仅包含传统authentic元素，还提供了现代适配方案，确保在保持文化真实性的同时满足现代客人的舒适需求。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-mei-ti-sheng-cheng-fu-wu-qi-shi-jue-nei-rong-zhi-neng-hua&quot;&gt;3. 媒体生成服务器 - 视觉内容智能化&lt;&#x2F;h3&gt;
&lt;p&gt;集成 DALL-E 3 的强大图片生成能力，为内容创作提供视觉支撑。系统支持多种风格模板（现代简约、传统文化、技术图表、创意艺术），并能自动适配不同平台的尺寸需求。&lt;&#x2F;p&gt;
&lt;p&gt;通过专业化的提示词模板和自动优化流程，能够生成高质量的特色图片，并自动生成多平台适配版本，大大提升了视觉内容的创作效率。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;多平台图片适配策略&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;平台&lt;&#x2F;th&gt;&lt;th&gt;尺寸规格&lt;&#x2F;th&gt;&lt;th&gt;优化重点&lt;&#x2F;th&gt;&lt;th&gt;风格调整&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;博客特色图&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;1792x1024&lt;&#x2F;td&gt;&lt;td&gt;清晰度、专业感&lt;&#x2F;td&gt;&lt;td&gt;简洁现代&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;小红书&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;1080x1080&lt;&#x2F;td&gt;&lt;td&gt;色彩鲜艳、吸引力&lt;&#x2F;td&gt;&lt;td&gt;生活化、温馨&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;抖音封面&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;1080x1920&lt;&#x2F;td&gt;&lt;td&gt;垂直构图、视觉冲击&lt;&#x2F;td&gt;&lt;td&gt;动感、年轻&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;微信文章&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;900x500&lt;&#x2F;td&gt;&lt;td&gt;信息清晰、易读&lt;&#x2F;td&gt;&lt;td&gt;专业、可信&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;4-bo-ke-guan-li-fu-wu-qi-zi-dong-hua-yun-wei-zhong-xin&quot;&gt;4. 博客管理服务器 - 自动化运维中心&lt;&#x2F;h3&gt;
&lt;p&gt;负责 Zola 博客系统的完整生命周期管理，从文件保存、格式验证到网站构建和生产部署的全自动化流程。&lt;&#x2F;p&gt;
&lt;p&gt;系统提供了完整的发布工作流：保存博文文件 → 验证格式正确性 → 自动构建网站 → 可选生产部署，确保每篇博文都能顺利发布并生成正确的访问链接。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kai-fa-guo-cheng-zhong-de-ji-zhu-liang-dian&quot;&gt;🛠️ 开发过程中的技术亮点&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;🔧 实现细节&lt;&#x2F;strong&gt;：本节介绍关键技术选择和架构设计理念。具体的代码实现、配置文件和部署脚本请查看 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Blog-MCP-Server&quot;&gt;项目仓库&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;fastmcp-kuang-jia-de-xian-dai-hua-you-shi&quot;&gt;FastMCP 框架的现代化优势&lt;&#x2F;h3&gt;
&lt;p&gt;选择 FastMCP 而非传统 MCP 的关键原因在于其现代化的开发体验：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;类型安全&lt;&#x2F;strong&gt;：Pydantic 模型确保数据完整性和自动验证&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;异步支持&lt;&#x2F;strong&gt;：原生 async&#x2F;await，显著提升并发性能&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;现代化语法&lt;&#x2F;strong&gt;：装饰器风格，代码简洁清晰&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;错误处理&lt;&#x2F;strong&gt;：自动异常捕获和格式化，降低开发复杂度&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;通过 &lt;code&gt;FastMCP(&amp;quot;Blog Content Server&amp;quot;)&lt;&#x2F;code&gt; 创建应用实例，使用 &lt;code&gt;@mcp.tool()&lt;&#x2F;code&gt; 装饰器即可轻松暴露功能接口，大大简化了 MCP 服务器的开发流程。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;duo-ai-ti-gong-shang-zhi-neng-lu-you-ce-lue&quot;&gt;多 AI 提供商智能路由策略&lt;&#x2F;h3&gt;
&lt;p&gt;为了最大化AI能力利用，我设计了智能路由系统，根据任务类型自动选择最适合的AI提供商：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DeepSeek&lt;&#x2F;strong&gt;：中文内容生成和文化理解&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;OpenAI GPT-4&lt;&#x2F;strong&gt;：复杂推理和技术内容&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Azure OpenAI&lt;&#x2F;strong&gt;：企业级稳定性需求&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;DALL-E 3&lt;&#x2F;strong&gt;：高质量图像生成&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;系统实现了自动故障切换机制，当主要提供商失败时，自动切换到备用提供商，确保服务的连续性和可靠性。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wen-hua-yuan-su-de-suan-fa-hua-chu-li&quot;&gt;文化元素的算法化处理&lt;&#x2F;h3&gt;
&lt;p&gt;对于纳西族文化元素的整合，我采用了结构化的处理方法，构建了文化真实性验证引擎：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;核心验证原则&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;历史准确性&lt;&#x2F;strong&gt;：确保文化元素的历史真实性&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;语境恰当性&lt;&#x2F;strong&gt;：文化元素使用的场景合理性&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;现代适配性&lt;&#x2F;strong&gt;：传统元素的现代化改造合理性&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;本地验证&lt;&#x2F;strong&gt;：结合本地文化专家的建议&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;可持续发展&lt;&#x2F;strong&gt;：文化传承与商业发展的平衡&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;系统通过空间适配性评分、文化元素选择算法和多维度验证机制，确保每个设计方案都能在保持文化authenticity的同时满足现代商业需求。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;chart-with-upwards-trend-shi-ji-shi-yong-xiao-guo-yu-xing-neng-shu-ju&quot;&gt;📈 实际使用效果与性能数据&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gong-zuo-liu-cheng-ge-ming-xing-gai-jin&quot;&gt;工作流程革命性改进&lt;&#x2F;h3&gt;
&lt;p&gt;使用 Blog MCP Server 系统前后的效率对比：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;📝 创作阶段&lt;&#x2F;th&gt;&lt;th&gt;⏰ 传统方式&lt;&#x2F;th&gt;&lt;th&gt;🚀 AI驱动方式&lt;&#x2F;th&gt;&lt;th&gt;📈 提升倍数&lt;&#x2F;th&gt;&lt;th&gt;💡 优化亮点&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;博文构思&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;30分钟&lt;&#x2F;td&gt;&lt;td&gt;2分钟&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;15倍&lt;&#x2F;strong&gt; ⬆️&lt;&#x2F;td&gt;&lt;td&gt;AI智能主题拓展与结构规划&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;大纲制作&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;45分钟&lt;&#x2F;td&gt;&lt;td&gt;1分钟&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;45倍&lt;&#x2F;strong&gt; ⬆️&lt;&#x2F;td&gt;&lt;td&gt;3层深度大纲自动生成&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;内容写作&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;90分钟&lt;&#x2F;td&gt;&lt;td&gt;3分钟&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;30倍&lt;&#x2F;strong&gt; ⬆️&lt;&#x2F;td&gt;&lt;td&gt;多风格内容智能创作&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;图片制作&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;60分钟&lt;&#x2F;td&gt;&lt;td&gt;30秒&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;120倍&lt;&#x2F;strong&gt; ⬆️&lt;&#x2F;td&gt;&lt;td&gt;DALL-E 3专业图片生成&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;SEO优化&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;30分钟&lt;&#x2F;td&gt;&lt;td&gt;30秒&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;60倍&lt;&#x2F;strong&gt; ⬆️&lt;&#x2F;td&gt;&lt;td&gt;关键词与元数据自动优化&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;格式发布&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;15分钟&lt;&#x2F;td&gt;&lt;td&gt;30秒&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;30倍&lt;&#x2F;strong&gt; ⬆️&lt;&#x2F;td&gt;&lt;td&gt;Zola格式化与自动发布&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;🎯 总计&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;4.5小时&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;6分钟&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;🔥 45倍&lt;&#x2F;strong&gt; ⬆️&lt;&#x2F;td&gt;&lt;td&gt;&lt;strong&gt;革命性工作流重构&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;💫 核心价值&lt;&#x2F;strong&gt;：从传统的&amp;quot;半天工作量&amp;quot;缩减至&amp;quot;几分钟完成&amp;quot;，让创作者能够专注于创意构思而非重复性操作，实现真正的高效创作。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;xi-tong-xing-neng-zhi-biao&quot;&gt;系统性能指标&lt;&#x2F;h3&gt;
&lt;p&gt;经过实际测试，系统性能表现优异：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;性能指标&lt;&#x2F;th&gt;&lt;th&gt;测试结果&lt;&#x2F;th&gt;&lt;th&gt;基准对比&lt;&#x2F;th&gt;&lt;th&gt;评级&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;服务器启动时间&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&amp;lt; 3秒&lt;&#x2F;td&gt;&lt;td&gt;行业平均 10秒&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;博文生成速度&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;2-5分钟&lt;&#x2F;td&gt;&lt;td&gt;人工 2-3小时&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;图片生成时间&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;10-30秒&lt;&#x2F;td&gt;&lt;td&gt;设计师 1-2小时&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;API响应时间&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&amp;lt; 2秒&lt;&#x2F;td&gt;&lt;td&gt;可接受 &amp;lt; 5秒&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;并发处理能力&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;10+请求&lt;&#x2F;td&gt;&lt;td&gt;单用户充足&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;内存使用&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&amp;lt; 500MB&lt;&#x2F;td&gt;&lt;td&gt;轻量级应用&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;nei-rong-zhi-liang-ti-sheng&quot;&gt;内容质量提升&lt;&#x2F;h3&gt;
&lt;p&gt;AI 驱动创作在质量方面的表现：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SEO 评分平均提升 40%&lt;&#x2F;strong&gt;：关键词优化、标题结构、元描述质量&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;可读性评分平均 8.5&#x2F;10&lt;&#x2F;strong&gt;：段落结构、语言流畅度、逻辑连贯性&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;内容完整性 95%+&lt;&#x2F;strong&gt;：大纲覆盖度、深度分析、案例丰富性&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;视觉匹配度 90%+&lt;&#x2F;strong&gt;：图文相关性、风格一致性、平台适配度&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;dart-vs-code-wan-mei-ji-cheng-ti-yan&quot;&gt;🎯 VS Code 完美集成体验&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;mcp-pei-zhi-yi-jian-bu-shu&quot;&gt;MCP 配置一键部署&lt;&#x2F;h3&gt;
&lt;p&gt;为了获得最佳使用体验，我创建了即用的 VS Code 配置：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mcp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mcpServers&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;blog-content-server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;Users&#x2F;polly&#x2F;.local&#x2F;bin&#x2F;poetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-C&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;path&#x2F;to&#x2F;Blog_MCP_Server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-m&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;blog_mcp_server.content_server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ],
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;PYTHONPATH&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;path&#x2F;to&#x2F;Blog_MCP_Server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;      },
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;guesthouse-management-server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;Users&#x2F;polly&#x2F;.local&#x2F;bin&#x2F;poetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-C&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;path&#x2F;to&#x2F;Blog_MCP_Server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, 
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-m&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;blog_mcp_server.guesthouse_server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ],
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;PYTHONPATH&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;path&#x2F;to&#x2F;Blog_MCP_Server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;      },
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;media-generation-server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;Users&#x2F;polly&#x2F;.local&#x2F;bin&#x2F;poetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-C&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;path&#x2F;to&#x2F;Blog_MCP_Server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-m&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;blog_mcp_server.media_server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ],
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;PYTHONPATH&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;path&#x2F;to&#x2F;Blog_MCP_Server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;      },
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;blog-management-server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;Users&#x2F;polly&#x2F;.local&#x2F;bin&#x2F;poetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, 
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-C&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;path&#x2F;to&#x2F;Blog_MCP_Server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;python&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-m&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;blog_mcp_server.management_server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ],
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;PYTHONPATH&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;path&#x2F;to&#x2F;Blog_MCP_Server&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;      }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;zi-ran-yu-yan-cao-zuo-jie-mian&quot;&gt;自然语言操作界面&lt;&#x2F;h3&gt;
&lt;p&gt;集成后，我可以通过 Claude 使用自然语言操作所有功能：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;博文创作示例&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;帮我写一篇关于在丽江客栈中应用 AI 技术进行个性化服务的博文，包含技术实现细节和具体案例，风格要专业但不失亲和力，长度中等，需要代码示例。&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;客栈设计示例&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;为我的客栈大堂设计一个方案，面积 40 平米，要融合纳西族传统建筑元素，风格现代传统融合，预算中等，并生成小红书营销文案。&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;图片生成示例&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;为博文&#x27;AI 驱动的客栈智能化服务系统&#x27;创建一张特色图片，风格现代科技感，需要体现传统与现代的结合。&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;crystal-ball-wei-lai-kuo-zhan-gui-hua&quot;&gt;🔮 未来扩展规划&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;di-er-jie-duan-sora-shi-pin-sheng-cheng-ji-cheng&quot;&gt;第二阶段：Sora 视频生成集成&lt;&#x2F;h3&gt;
&lt;p&gt;我已经为未来的 Sora API 做好了架构准备，包括视频脚本生成、视觉元素规划、技术规格制定和 Sora 专用提示词优化等功能。当 API 可用时，系统能够快速集成并提供完整的视频生成服务，包括成本预估和制作时间线规划。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;di-san-jie-duan-gao-ji-fen-xi-yu-you-hua&quot;&gt;第三阶段：高级分析与优化&lt;&#x2F;h3&gt;
&lt;p&gt;计划增加更深入的数据分析能力：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;读者行为分析&lt;&#x2F;strong&gt;：阅读时长、跳出率、互动热点分析&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;内容传播效果评估&lt;&#x2F;strong&gt;：多平台传播数据、转化率追踪&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;A&#x2F;B 测试支持&lt;&#x2F;strong&gt;：标题、摘要、图片的对比测试&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;个性化推荐系统&lt;&#x2F;strong&gt;：基于用户偏好的内容推荐&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;di-si-jie-duan-duo-yu-yan-yu-guo-ji-hua&quot;&gt;第四阶段：多语言与国际化&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多语言内容生成&lt;&#x2F;strong&gt;：中英文双语博文自动生成&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文化适配优化&lt;&#x2F;strong&gt;：不同文化背景的内容调整&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;国际化客栈管理&lt;&#x2F;strong&gt;：面向国际游客的服务方案&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bulb-kai-fa-xin-de-yu-zui-jia-shi-jian&quot;&gt;💡 开发心得与最佳实践&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-mo-kuai-hua-she-ji-de-jie-zhi&quot;&gt;1. 模块化设计的价值&lt;&#x2F;h3&gt;
&lt;p&gt;将功能分解为四个独立 MCP 服务器证明是正确的架构决策：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;优势总结&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;职责清晰&lt;&#x2F;strong&gt;：每个服务器专注特定领域，避免功能耦合&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;独立部署&lt;&#x2F;strong&gt;：可单独启停、升级、调试，运维友好&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;易于维护&lt;&#x2F;strong&gt;：问题定位准确，修复影响范围可控&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;水平扩展&lt;&#x2F;strong&gt;：可根据负载独立扩容各个服务器&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;技术栈灵活&lt;&#x2F;strong&gt;：不同服务器可采用最适合的技术和模型&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;2-ai-ti-gong-shang-duo-yang-hua-de-ce-lue-jie-zhi&quot;&gt;2. AI 提供商多样化的策略价值&lt;&#x2F;h3&gt;
&lt;p&gt;经过实际使用验证，不同 AI 提供商的优势互补效果显著：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;AI 提供商&lt;&#x2F;th&gt;&lt;th&gt;最佳适用场景&lt;&#x2F;th&gt;&lt;th&gt;成本效益&lt;&#x2F;th&gt;&lt;th&gt;质量评分&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;DeepSeek&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;中文内容、客栈文化内容&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;OpenAI GPT-4&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;复杂推理、技术博文&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;DALL-E 3&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;图片生成、视觉创意&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Azure OpenAI&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;企业级稳定性需求&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐&lt;&#x2F;td&gt;&lt;td&gt;⭐⭐⭐⭐&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;3-yong-hu-ti-yan-she-ji-de-guan-jian-yao-su&quot;&gt;3. 用户体验设计的关键要素&lt;&#x2F;h3&gt;
&lt;p&gt;通过 MCP 协议与 Claude 的深度集成，实现了真正的&amp;quot;自然语言操作界面&amp;quot;：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;体验优化要点&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;降低学习成本&lt;&#x2F;strong&gt;：无需记忆复杂命令和参数&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;智能参数推断&lt;&#x2F;strong&gt;：从自然语言描述中提取结构化参数&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;错误处理友好&lt;&#x2F;strong&gt;：清晰的错误提示和建议修正方案&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;进度反馈&lt;&#x2F;strong&gt;：长时间操作提供实时进度更新&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;结果预览&lt;&#x2F;strong&gt;：生成结果支持预览和调整&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;4-wen-hua-yuan-su-chu-li-de-zhuan-ye-hua-fang-fa&quot;&gt;4. 文化元素处理的专业化方法&lt;&#x2F;h3&gt;
&lt;p&gt;在处理纳西族文化元素时，我建立了完整的真实性验证体系，确保文化元素的正确使用和传承。&lt;&#x2F;p&gt;
&lt;p&gt;验证体系基于五大核心原则：历史准确性、语境恰当性、现代适配性、本地验证和可持续发展。通过多维度评分机制，系统能够自动识别文化元素使用中的问题，并提供改进建议，确保每个设计方案都能在文化传承和商业价值之间找到最佳平衡点。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tada-xiang-mu-cheng-guo-yu-jie-zhi-zong-jie&quot;&gt;🎉 项目成果与价值总结&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;trophy-liang-hua-cheng-guo&quot;&gt;🏆 量化成果&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;效率提升数据&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内容创作效率提升 45 倍&lt;&#x2F;strong&gt;（从 4.5 小时到 6 分钟）&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;图片制作效率提升 120 倍&lt;&#x2F;strong&gt;（从 1 小时到 30 秒）&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;客栈设计方案制作效率提升 30 倍&lt;&#x2F;strong&gt;（从 3 小时到 6 分钟）&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;多平台内容适配效率提升 20 倍&lt;&#x2F;strong&gt;（一次创作，多平台发布）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;质量提升数据&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SEO 评分平均提升 40%&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;内容结构化程度提升 85%&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;视觉内容匹配度 90%+&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文化元素融合真实性 85%+&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dart-ye-wu-jie-zhi&quot;&gt;🎯 业务价值&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;对博客创作的影响&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;发布频率提升 400%&lt;&#x2F;strong&gt;：从每月 2 篇到每周 2 篇&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;内容质量稳定化&lt;&#x2F;strong&gt;：消除创作状态波动对质量的影响&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;SEO 表现优化&lt;&#x2F;strong&gt;：搜索排名和流量显著提升&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;多平台同步发布&lt;&#x2F;strong&gt;：内容触达范围扩大 300%&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;对客栈运营的影响&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设计方案专业化&lt;&#x2F;strong&gt;：获得专业级的空间设计建议&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;营销内容本土化&lt;&#x2F;strong&gt;：真正融合纳西文化的营销策略&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文化传承数字化&lt;&#x2F;strong&gt;：传统文化的现代化表达和传播&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;运营成本优化&lt;&#x2F;strong&gt;：减少外包设计和营销内容制作费用&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;wrench-ji-zhu-jie-zhi&quot;&gt;🔧 技术价值&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;架构创新价值&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FastMCP 最佳实践&lt;&#x2F;strong&gt;：为 FastMCP 生态贡献了完整的多服务器解决方案&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;多 AI 集成模式&lt;&#x2F;strong&gt;：验证了多 AI 提供商智能路由的可行性&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文化数字化方法&lt;&#x2F;strong&gt;：探索了传统文化元素的算法化处理方法&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;MCP 用户体验&lt;&#x2F;strong&gt;：证明了 MCP + Claude 的自然语言操作界面的巨大潜力&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;开源贡献潜力&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;可作为 FastMCP 框架的参考实现&lt;&#x2F;li&gt;
&lt;li&gt;为文化旅游行业提供 AI 化解决方案模板&lt;&#x2F;li&gt;
&lt;li&gt;为内容创作者提供完整的自动化工具链&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;books-wan-zheng-xiang-mu-zi-yuan&quot;&gt;📚 完整项目资源&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;xiang-mu-wen-dang&quot;&gt;🗂️ 项目文档&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;项目主页&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Blog-MCP-Server&quot;&gt;Blog MCP Server Repository&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;快速开始指南&lt;&#x2F;strong&gt;：&lt;code&gt;README.md&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;详细使用文档&lt;&#x2F;strong&gt;：&lt;code&gt;USAGE_GUIDE.md&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;API 参考文档&lt;&#x2F;strong&gt;：各服务器内联文档&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;项目完成报告&lt;&#x2F;strong&gt;：&lt;code&gt;PROJECT_COMPLETION_REPORT.md&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gear-pei-zhi-wen-jian&quot;&gt;⚙️ 配置文件&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VS Code 集成配置&lt;&#x2F;strong&gt;：&lt;code&gt;mcp-settings.json&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;环境变量模板&lt;&#x2F;strong&gt;：&lt;code&gt;.env.example&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;依赖管理配置&lt;&#x2F;strong&gt;：&lt;code&gt;pyproject.toml&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;自动化测试脚本&lt;&#x2F;strong&gt;：&lt;code&gt;start_test.sh&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;shi-yong-shi-li&quot;&gt;🧪 使用示例&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;博文创作示例&lt;&#x2F;strong&gt;：技术文章、生活感悟、学术总结&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;客栈设计案例&lt;&#x2F;strong&gt;：大堂设计、客房布局、公共空间&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;营销内容样本&lt;&#x2F;strong&gt;：小红书文案、抖音脚本、微信推广&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;图片生成案例&lt;&#x2F;strong&gt;：特色图片、社交媒体图、宣传素材&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;rocket-li-ji-kai-shi-shi-yong&quot;&gt;🚀 立即开始使用&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;kuai-su-bu-shu&quot;&gt;快速部署&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 1. 克隆项目
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Blog-MCP-Server.git
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; Blog_MCP_Server
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 2. 安装依赖
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;poetry&lt;&#x2F;span&gt;&lt;span&gt; install
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 3. 配置环境
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cp&lt;&#x2F;span&gt;&lt;span&gt; .env.example .env
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 编辑 .env 文件，填入你的 API 密钥
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 4. 验证系统
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;start_test.sh
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 5. VS Code 集成
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 复制 mcp-settings.json 到 VS Code settings.json
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 重启 VS Code 或重新连接 MCP
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 6. 开始使用
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 在 Claude 中使用自然语言操作所有功能！
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;zui-jia-shi-jian-jian-yi&quot;&gt;最佳实践建议&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;逐步熟悉功能&lt;&#x2F;strong&gt;：先从博文创作开始，再扩展到其他功能&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;充分利用模板&lt;&#x2F;strong&gt;：使用提供的示例和模板快速上手&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;关注文化真实性&lt;&#x2F;strong&gt;：客栈相关功能需要结合本地实际情况&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;定期备份配置&lt;&#x2F;strong&gt;：保存好 API 密钥和个性化配置&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;持续优化提示词&lt;&#x2F;strong&gt;：根据使用效果调整和优化提示词&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;jie-yu-ai-shi-dai-de-nei-rong-chuang-zuo-xin-fan-shi&quot;&gt;结语：AI 时代的内容创作新范式&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Blog MCP Server&lt;&#x2F;strong&gt; 项目的成功完成，标志着我在 AI 驱动内容创作领域的一次重要探索。这不仅仅是一个技术项目，更是对未来内容创作模式的前瞻性实践。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;star2-he-xin-jie-zhi-guan&quot;&gt;🌟 核心价值观&lt;&#x2F;h3&gt;
&lt;p&gt;在整个开发过程中，我始终坚持几个核心理念：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;AI 是助手，不是替代者&lt;&#x2F;strong&gt;：技术应该增强人类的创造力，而不是取代人类的思考&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文化传承与创新并重&lt;&#x2F;strong&gt;：在拥抱新技术的同时，保护和传承传统文化的真实性&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;用户体验至上&lt;&#x2F;strong&gt;：技术再先进，如果不能简化用户的工作流程，就失去了意义&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;可持续发展&lt;&#x2F;strong&gt;：系统设计要考虑长期维护性和扩展性&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;crystal-ball-dui-wei-lai-de-zhan-wang&quot;&gt;🔮 对未来的展望&lt;&#x2F;h3&gt;
&lt;p&gt;这个项目只是开始。随着 AI 技术的不断进步，我看到了更多的可能性：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;多模态内容创作&lt;&#x2F;strong&gt;：图文视频一体化的内容创作工具链&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;个性化 AI 助手&lt;&#x2F;strong&gt;：基于个人风格和偏好深度定制的创作助手&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;文化 AI 专家系统&lt;&#x2F;strong&gt;：专门用于文化传承和保护的 AI 系统&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;协作式创作平台&lt;&#x2F;strong&gt;：多人协作的 AI 增强创作环境&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;thought-balloon-gei-nei-rong-chuang-zuo-zhe-de-si-kao&quot;&gt;💭 给内容创作者的思考&lt;&#x2F;h3&gt;
&lt;p&gt;如果你也是内容创作者，我想分享几点思考：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;拥抱技术变革&lt;&#x2F;strong&gt;：AI 工具正在重塑内容创作行业，早期采用者将获得巨大优势&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;保持创作核心&lt;&#x2F;strong&gt;：技术可以处理重复性工作，但创意和独特视角仍然是人类的专长&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;建立工作流程&lt;&#x2F;strong&gt;：将 AI 工具整合到你的工作流程中，而不是作为偶尔使用的工具&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;持续学习&lt;&#x2F;strong&gt;：技术发展迅速，保持学习新工具和新方法的习惯&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;这篇博文本身就是使用 Blog MCP Server 系统创建的最佳证明。从最初的构思到最终的发布，整个过程展现了 AI 驱动创作的巨大潜力和实用价值。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;在这个 AI 技术飞速发展的时代，让我们用智慧拥抱变革，用技术增强创造，用创新传承文化。&lt;&#x2F;em&gt; 🚀✨&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;strong&gt;项目状态&lt;&#x2F;strong&gt;：🎉 &lt;strong&gt;生产就绪，持续优化中&lt;&#x2F;strong&gt; 🎉&lt;&#x2F;p&gt;
&lt;h2 id=&quot;link-xiang-mu-lian-jie&quot;&gt;🔗 项目链接&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;📁 项目仓库&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Blog-MCP-Server&quot;&gt;Blog MCP Server&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;📖 详细文档&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Blog-MCP-Server&#x2F;blob&#x2F;main&#x2F;README.md&quot;&gt;README.md&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;🚀 快速开始&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Blog-MCP-Server&#x2F;blob&#x2F;main&#x2F;USAGE_GUIDE.md&quot;&gt;USAGE_GUIDE.md&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;📊 项目报告&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Blog-MCP-Server&#x2F;blob&#x2F;main&#x2F;PROJECT_COMPLETION_REPORT.md&quot;&gt;PROJECT_COMPLETION_REPORT.md&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;如果你对这个项目感兴趣，或者有任何问题和建议，欢迎与我交流探讨。让我们一起探索 AI 时代内容创作的无限可能！&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>基于OpenHands辅助的财报数据爬取与分析平台开发实践</title>
        <published>2025-05-16T00:00:00+00:00</published>
        <updated>2025-05-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/financial-report-crawler-analysis-platform/" type="text/html"/>
        <id>https://polly.wang/financial-report-crawler-analysis-platform/</id>
        
        <content type="html">&lt;!--
&gt; 财报数据如海，分析师迷途难返。
&gt;
&gt; 看爬虫精巧，接口优化；体验提升，分析轻松。
&gt;
&gt; 架构清晰，流程明了，千行代码尽显匠心。
&gt;
&gt; 问数据，论财报分析之道，谁主沉浮？
&gt;
&gt; 多方技术曾融。忆coding时日月如梭。
&gt;
&gt; 恰Web应用，设计典雅；开发体验，流畅如虹。
&gt;
&gt; 封装算法，简化分析，几步操作胜百行脚本。
&gt;
&gt; 终有成，待LLM加持，智能启航！
--&gt;
&lt;h2 id=&quot;yi-xiang-mu-bei-jing-yu-yi-yi&quot;&gt;一、项目背景与意义&lt;&#x2F;h2&gt;
&lt;p&gt;财务报告是了解企业经营状况的重要窗口，但获取和分析财报数据对普通投资者而言颇具挑战性。用户需要熟悉各大交易所网站结构、数据格式及财务分析方法，这无疑提高了入门门槛。为解决这一痛点，我们开发了基于FastAPI的财报数据爬取与分析平台，旨在用图形化界面封装复杂的数据获取和分析流程，使不具备专业背景的用户也能轻松获取和理解企业财务数据。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;financial-report-crawler-analysis-platform&#x2F;Financial_Platform.png&quot; alt=&quot;Finalcial Platform&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;er-ji-zhu-zhan-xuan-ze&quot;&gt;二、技术栈选择&lt;&#x2F;h2&gt;
&lt;p&gt;在技术选型上，考虑了开发效率、性能和用户体验：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;&#x2F;strong&gt; - 作为主要开发语言，兼具开发效率和强大的数据处理能力&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;FastAPI&lt;&#x2F;strong&gt; - 高性能的Web框架，提供异步支持和自动API文档&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Jinja2&lt;&#x2F;strong&gt; - 灵活的模板引擎，用于前端页面渲染&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Bootstrap&lt;&#x2F;strong&gt; - 响应式前端框架，确保良好的跨设备体验&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Requests &amp;amp; BeautifulSoup&lt;&#x2F;strong&gt; - 强大的网络请求和HTML解析库&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;PDFPlumber&lt;&#x2F;strong&gt; - PDF文档解析工具，用于提取财报文本&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;LiteLLM&lt;&#x2F;strong&gt; - 大语言模型接口封装，用于智能财报分析&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Docker&lt;&#x2F;strong&gt; - 容器化部署，确保环境一致性&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;san-jia-gou-she-ji&quot;&gt;三、架构设计&lt;&#x2F;h2&gt;
&lt;p&gt;应用采用分层架构，明确职责分离：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;Financial Platform
&lt;&#x2F;span&gt;&lt;span&gt;├── 数据模型层 (Models)
&lt;&#x2F;span&gt;&lt;span&gt;├── 路由控制层 (Routers)
&lt;&#x2F;span&gt;&lt;span&gt;├── 服务逻辑层 (Services)
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 爬虫服务 (CrawlerService)
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 分析服务 (AnalysisService)
&lt;&#x2F;span&gt;&lt;span&gt;│   └── LLM分析服务 (LLMAnalysisService)
&lt;&#x2F;span&gt;&lt;span&gt;├── 模板视图层 (Templates)
&lt;&#x2F;span&gt;&lt;span&gt;└── 静态资源层 (Static)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;每个模块职责单一，减少耦合性，提高代码可维护性。这种设计能够独立优化各个组件，例如改进爬虫算法而不影响分析逻辑。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;si-guan-jian-gong-neng-shi-xian&quot;&gt;四、关键功能实现&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;4-1-zhi-neng-cai-bao-pa-chong&quot;&gt;4.1 智能财报爬虫&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;crawl_annual_report_from_cninfo&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stock_code&lt;&#x2F;span&gt;&lt;span&gt;: str, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;year&lt;&#x2F;span&gt;&lt;span&gt;: int, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;report_type&lt;&#x2F;span&gt;&lt;span&gt;: str = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;年度报告&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;) -&amp;gt; Dict[str, Any]:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;从巨潮资讯网爬取财务报告&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;开始爬取 &lt;&#x2F;span&gt;&lt;span&gt;{stock_code} {year}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;年 &lt;&#x2F;span&gt;&lt;span&gt;{report_type}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 构建搜索关键词
&lt;&#x2F;span&gt;&lt;span&gt;    search_key = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{stock_code} {year}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;年&lt;&#x2F;span&gt;&lt;span&gt;{report_type}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 构造巨潮资讯网搜索URL和参数
&lt;&#x2F;span&gt;&lt;span&gt;    base_url = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http:&#x2F;&#x2F;www.cninfo.com.cn&#x2F;new&#x2F;fulltextSearch&#x2F;full&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    params = {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;searchkey&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: search_key,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sdate&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;edate&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;isfulltext&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sortName&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pubdate&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sortType&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;desc&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pageNum&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;pageSize&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 增加随机延迟，避免反爬
&lt;&#x2F;span&gt;&lt;span&gt;        delay = random.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uniform&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;等待 &lt;&#x2F;span&gt;&lt;span&gt;{delay&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;:.2f&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; 秒后发送请求&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        time.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span&gt;(delay)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 发送请求
&lt;&#x2F;span&gt;&lt;span&gt;        response = requests.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;post&lt;&#x2F;span&gt;&lt;span&gt;(base_url, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;headers&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.headers, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;data&lt;&#x2F;span&gt;&lt;span&gt;=params, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timeout&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;raise_for_status&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 解析JSON响应
&lt;&#x2F;span&gt;&lt;span&gt;        result = response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;json&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ... 处理响应数据 ...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;爬虫服务是应用的核心功能之一，通过智能解析各大财经网站结构，自动获取财报PDF文件并提取文本内容，为后续分析提供数据基础。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-2-cai-bao-shu-ju-fen-xi&quot;&gt;4.2 财报数据分析&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;extract_financial_indicators&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;report_content&lt;&#x2F;span&gt;&lt;span&gt;: str) -&amp;gt; Dict[str, Any]:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;从财报内容中提取关键财务指标&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    indicators = {
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;revenue&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;net_profit&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;total_assets&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;total_liabilities&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;equity&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cash_flow_from_operations&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;eps&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;roe&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ... 更多指标 ...
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 使用正则表达式提取数据
&lt;&#x2F;span&gt;&lt;span&gt;    revenue_pattern = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;营业收入&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;\d]&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;[\d,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    revenue_match = re.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;search&lt;&#x2F;span&gt;&lt;span&gt;(revenue_pattern, report_content)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;revenue_match:
&lt;&#x2F;span&gt;&lt;span&gt;        indicators[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;revenue&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_convert_to_number&lt;&#x2F;span&gt;&lt;span&gt;(revenue_match.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;group&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ... 提取更多指标 ...
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;indicators
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;分析服务负责从财报文本中提取关键财务指标，并计算重要财务比率，为用户提供直观的财务状况概览。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-3-llmzhi-neng-fen-xi&quot;&gt;4.3 LLM智能分析&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;analyze_financial_report&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;report_content&lt;&#x2F;span&gt;&lt;span&gt;: str, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;company_info&lt;&#x2F;span&gt;&lt;span&gt;: Dict[str, str]) -&amp;gt; Dict[str, Any]:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;使用LLM分析财报内容&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.api_key:
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;warning&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;未提供API密钥，使用模拟数据&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_get_mock_analysis_result&lt;&#x2F;span&gt;&lt;span&gt;(company_info)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 构建提示词
&lt;&#x2F;span&gt;&lt;span&gt;    prompt = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_build_analysis_prompt&lt;&#x2F;span&gt;&lt;span&gt;(report_content, company_info)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 使用litellm调用LLM API
&lt;&#x2F;span&gt;&lt;span&gt;        response = litellm.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;completion&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;model&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.model_name,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;messages&lt;&#x2F;span&gt;&lt;span&gt;=[{&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;role&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;user&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: prompt}],
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;temperature&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.2&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;max_tokens&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2000
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 解析响应
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_parse_llm_response&lt;&#x2F;span&gt;&lt;span&gt;(response)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;LLM API调用失败: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;分析失败: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;LLM分析服务是平台的创新亮点，通过集成大语言模型，提供专业级的财报解读和投资建议，大幅降低了财报分析的专业门槛。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-4-yong-hu-you-hao-de-webjie-mian&quot;&gt;4.4 用户友好的Web界面&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;container mt-4&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;row&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;col-md-6&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;card&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;card-header bg-primary text-white&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h5 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;card-title mb-0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;财报获取&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;h5&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;card-body&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;form &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;crawlerForm&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mb-3&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                            &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;label &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stockCode&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;form-label&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;股票代码&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;label&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                            &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;input &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;form-control&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stockCode&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stock_code&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;required&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;lt;!-- ... 更多表单字段 ... --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;button &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;submit&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;btn btn-primary&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;获取财报&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;form&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;lt;!-- ... 更多卡片 ... --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Web界面采用直观的卡片式布局，将复杂的功能模块化展示，用户可以轻松完成从财报获取到智能分析的全流程操作。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wu-jie-jue-de-ji-zhu-nan-ti&quot;&gt;五、解决的技术难题&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;5-1-fan-pa-ji-zhi-ying-dui&quot;&gt;5.1 反爬机制应对&lt;&#x2F;h3&gt;
&lt;p&gt;在开发过程中，发现巨潮资讯网等网站有较为严格的反爬机制，直接请求容易被封禁IP。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：实现了智能请求策略，包括随机延时、User-Agent轮换和指数退避重试：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;_make_request_with_retry&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;url&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;method&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;GET&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;data&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;max_retries&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;带重试机制的请求方法&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    headers_list = [
&lt;&#x2F;span&gt;&lt;span&gt;        {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;User-Agent&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;91.0.4472.124 Safari&#x2F;537.36&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;},
&lt;&#x2F;span&gt;&lt;span&gt;        {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;User-Agent&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;605.1.15 (KHTML, like Gecko) Version&#x2F;14.1.1 Safari&#x2F;605.1.15&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;},
&lt;&#x2F;span&gt;&lt;span&gt;        {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;User-Agent&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Mozilla&#x2F;5.0 (X11; Linux x86_64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;92.0.4515.107 Safari&#x2F;537.36&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;    ]
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;attempt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(max_retries):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 随机延时
&lt;&#x2F;span&gt;&lt;span&gt;            time.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span&gt;(random.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uniform&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 随机选择User-Agent
&lt;&#x2F;span&gt;&lt;span&gt;            headers = random.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;choice&lt;&#x2F;span&gt;&lt;span&gt;(headers_list)
&lt;&#x2F;span&gt;&lt;span&gt;            headers.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.base_headers)
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;method.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;upper&lt;&#x2F;span&gt;&lt;span&gt;() == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;GET&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;                response = requests.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(url, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;headers&lt;&#x2F;span&gt;&lt;span&gt;=headers, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timeout&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                response = requests.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;post&lt;&#x2F;span&gt;&lt;span&gt;(url, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;headers&lt;&#x2F;span&gt;&lt;span&gt;=headers, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;data&lt;&#x2F;span&gt;&lt;span&gt;=data, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timeout&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;                
&lt;&#x2F;span&gt;&lt;span&gt;            response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;raise_for_status&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;response
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;            logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;warning&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;请求失败 (尝试 &lt;&#x2F;span&gt;&lt;span&gt;{attempt+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;{max_retries}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;): &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 指数退避
&lt;&#x2F;span&gt;&lt;span&gt;            time.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;** attempt) + random.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;random&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;raise &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Exception&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;请求失败，已达到最大重试次数: &lt;&#x2F;span&gt;&lt;span&gt;{max_retries}&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-2-pdfwen-ben-ti-qu-you-hua&quot;&gt;5.2 PDF文本提取优化&lt;&#x2F;h3&gt;
&lt;p&gt;财报PDF格式复杂多样，直接提取文本常出现格式混乱、表格数据丢失等问题。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：开发了专用的PDF处理流程，结合页面布局分析和表格识别：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;extract_text_from_pdf&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pdf_path&lt;&#x2F;span&gt;&lt;span&gt;: Path, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;save_text&lt;&#x2F;span&gt;&lt;span&gt;: bool = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;) -&amp;gt; Optional[str]:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;从PDF提取文本内容&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;开始从PDF提取文本: &lt;&#x2F;span&gt;&lt;span&gt;{pdf_path}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        text_content = []
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;pdfplumber.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(pdf_path) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;pdf:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;page &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;pdf.pages:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 提取表格
&lt;&#x2F;span&gt;&lt;span&gt;                tables = page.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;extract_tables&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;tables:
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;table &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;tables:
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 将表格转换为文本格式
&lt;&#x2F;span&gt;&lt;span&gt;                        table_text = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_format_table&lt;&#x2F;span&gt;&lt;span&gt;(table)
&lt;&#x2F;span&gt;&lt;span&gt;                        text_content.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(table_text)
&lt;&#x2F;span&gt;&lt;span&gt;                
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 提取正文文本
&lt;&#x2F;span&gt;&lt;span&gt;                text = page.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;extract_text&lt;&#x2F;span&gt;&lt;span&gt;() or &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                text_content.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(text)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 后处理：清理多余空白、合并段落等
&lt;&#x2F;span&gt;&lt;span&gt;        full_text = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_post_process_text&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(text_content))
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;save_text:
&lt;&#x2F;span&gt;&lt;span&gt;            text_path = pdf_path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;with_suffix&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.txt&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(text_path, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encoding&lt;&#x2F;span&gt;&lt;span&gt;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;                f.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;write&lt;&#x2F;span&gt;&lt;span&gt;(full_text)
&lt;&#x2F;span&gt;&lt;span&gt;            logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;文本内容已保存至: &lt;&#x2F;span&gt;&lt;span&gt;{text_path}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;full_text
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;提取PDF文本时出错: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-3-llmxiang-ying-jie-xi&quot;&gt;5.3 LLM响应解析&lt;&#x2F;h3&gt;
&lt;p&gt;LLM返回的分析结果格式不统一，需要智能解析以提取结构化数据。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：实现了基于模式识别的响应解析器：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;_parse_llm_response&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;response&lt;&#x2F;span&gt;&lt;span&gt;) -&amp;gt; Dict[str, Any]:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;解析LLM响应&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 从litellm响应中提取内容
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;hasattr&lt;&#x2F;span&gt;&lt;span&gt;(response, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;choices&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;) and response.choices:
&lt;&#x2F;span&gt;&lt;span&gt;            content = response.choices[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;].message.content
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 兼容不同的响应格式
&lt;&#x2F;span&gt;&lt;span&gt;            content = response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;choices&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, [{}])[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, {}).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 尝试提取JSON部分
&lt;&#x2F;span&gt;&lt;span&gt;        json_match = re.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;search&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;```json&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;\s&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;[\s\S]&lt;&#x2F;span&gt;&lt;span&gt;*?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;\s&lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;```&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, content)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;json_match:
&lt;&#x2F;span&gt;&lt;span&gt;            json_str = json_match.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;group&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;json.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;loads&lt;&#x2F;span&gt;&lt;span&gt;(json_str)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;pass
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 如果没有JSON格式，尝试解析结构化文本
&lt;&#x2F;span&gt;&lt;span&gt;        result = {
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;success&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;analysis&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {},
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;recommendations&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: []
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 提取摘要部分
&lt;&#x2F;span&gt;&lt;span&gt;        summary_match = re.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;search&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;摘要&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;[:：]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;[\s\S]&lt;&#x2F;span&gt;&lt;span&gt;*?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;?=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n\n&lt;&#x2F;span&gt;&lt;span&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, content)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;summary_match:
&lt;&#x2F;span&gt;&lt;span&gt;            result[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = summary_match.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;group&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ... 提取更多结构化内容 ...
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;result
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;解析LLM响应时出错: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;解析响应失败: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;liu-bu-shu-yu-yun-xing&quot;&gt;六、部署与运行&lt;&#x2F;h2&gt;
&lt;p&gt;应用支持多种部署方式，包括Docker容器化部署和传统服务器部署：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# run.sh - 应用启动脚本
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 设置环境变量
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PORT&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;12001
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OPENAI_API_KEY&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;your-api-key-here&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 安装依赖
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pip&lt;&#x2F;span&gt;&lt;span&gt; install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -r&lt;&#x2F;span&gt;&lt;span&gt; requirements.txt
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 启动应用
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uvicorn&lt;&#x2F;span&gt;&lt;span&gt; main:app&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --host&lt;&#x2F;span&gt;&lt;span&gt; 0.0.0.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --port &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PORT --reload
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Docker部署更加简便，只需一行命令即可启动完整环境：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span&gt; build&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -t&lt;&#x2F;span&gt;&lt;span&gt; financial-platform . &amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span&gt; run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -p&lt;&#x2F;span&gt;&lt;span&gt; 12001:12001&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -e&lt;&#x2F;span&gt;&lt;span&gt; OPENAI_API_KEY=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;your-api-key&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; financial-platform
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;qi-xiang-mu-zong-jie-yu-zhan-wang&quot;&gt;七、项目总结与展望&lt;&#x2F;h2&gt;
&lt;p&gt;基于FastAPI的财报数据爬取与分析平台的开发是一次将复杂金融数据处理流程简化为用户友好界面的尝试。通过精心的架构设计和UI优化，成功降低了财报获取和分析的门槛，实现了预期目标。&lt;&#x2F;p&gt;
&lt;p&gt;在未来版本中，计划进一步优化：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;扩展数据源，支持更多交易所和财经网站&lt;&#x2F;li&gt;
&lt;li&gt;增强数据可视化能力，提供交互式图表&lt;&#x2F;li&gt;
&lt;li&gt;实现财报数据的历史对比和行业对标分析&lt;&#x2F;li&gt;
&lt;li&gt;优化LLM分析能力，提供更专业的投资建议&lt;&#x2F;li&gt;
&lt;li&gt;添加用户账户系统，支持个性化设置和收藏&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;源码地址&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;Financial_Platform&quot;&gt;GitHub - Financial Platform&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ba-kai-fa-guo-cheng-zhong-de-dui-hua-ji-lu&quot;&gt;八、开发过程中的对话记录&lt;&#x2F;h2&gt;
&lt;p&gt;以下是与AI助手的部分关键对话，展示了项目的构思和实现过程：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chu-shi-xu-qiu-miao-shu&quot;&gt;初始需求描述&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;用户&lt;&#x2F;strong&gt;：你是一个专业的财报数据爬虫助手，专注于从各种公开渠道获取企业财务报告原始文件。帮我构建一个基于fastapi的Web站点，实现上述功能（用户输入或选择公司名称、股票代码等信息）后台调用爬虫获取数据，前端可以展示和下载。同时首页预留出&amp;quot;财报分析&amp;quot;的功能&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;pa-chong-fu-wu-shi-xian&quot;&gt;爬虫服务实现&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AI助手&lt;&#x2F;strong&gt;：我将为您构建一个基于FastAPI的财报数据爬虫Web应用。首先，让我们设计项目结构：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;financial_crawler&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;├── app&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── models&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── routers&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;│   └── services&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;├── static&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;├── templates&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;├── main.py
&lt;&#x2F;span&gt;&lt;span&gt;└── requirements.txt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;接下来，我们需要实现爬虫服务，它将负责从巨潮资讯网等渠道获取财报数据...&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;llmfen-xi-gong-neng-ji-cheng&quot;&gt;LLM分析功能集成&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;用户&lt;&#x2F;strong&gt;：现在我想增加一个基于LLM的财报智能分析功能，可以自动解读财报并给出投资建议&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;AI助手&lt;&#x2F;strong&gt;：这是一个很好的想法！我们可以集成OpenAI的GPT或其他LLM模型来实现财报智能分析。我将创建一个新的LLMAnalysisService类和相应的路由...&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;LLMAnalysisService&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;LLM财报分析服务&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;api_key&lt;&#x2F;span&gt;&lt;span&gt;: str = &amp;quot;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;model_name&lt;&#x2F;span&gt;&lt;span&gt;: str = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gpt-3.5-turbo&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.api_key = api_key
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.model_name = model_name
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;analyze_financial_report&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;report_content&lt;&#x2F;span&gt;&lt;span&gt;: str, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;company_info&lt;&#x2F;span&gt;&lt;span&gt;: Dict[str, str]) -&amp;gt; Dict[str, Any]:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;使用LLM分析财报内容&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 实现代码...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;bu-shu-yu-you-hua&quot;&gt;部署与优化&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;用户&lt;&#x2F;strong&gt;：我们需要确保应用在生产环境中稳定运行，有什么建议？&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;AI助手&lt;&#x2F;strong&gt;：为了确保应用在生产环境中稳定运行，我建议以下几点：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;使用Docker容器化部署，确保环境一致性&lt;&#x2F;li&gt;
&lt;li&gt;实现健壮的错误处理和日志记录&lt;&#x2F;li&gt;
&lt;li&gt;添加请求限流和缓存机制&lt;&#x2F;li&gt;
&lt;li&gt;使用环境变量管理敏感配置&lt;&#x2F;li&gt;
&lt;li&gt;实现定时任务，自动更新财报数据&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;我将为您创建Dockerfile和部署脚本...&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;jiu-jie-yu&quot;&gt;九、结语&lt;&#x2F;h2&gt;
&lt;p&gt;财报数据爬取与分析平台的开发过程展示了如何将复杂的金融数据处理流程转化为易用的Web应用。通过合理的架构设计、先进的技术选型和用户体验优化，我们成功构建了一个功能完备的财报分析工具，为投资者提供了便捷的数据获取和智能分析服务。&lt;&#x2F;p&gt;
&lt;p&gt;希望本文的开发经验能为类似项目提供有价值的参考，也欢迎社区贡献代码，共同完善这一平台。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>OpenHands Starter Telemetry Dashboard 实践</title>
        <published>2025-04-02T00:00:00+00:00</published>
        <updated>2025-04-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/openhands-telemetry-dashboard/" type="text/html"/>
        <id>https://polly.wang/openhands-telemetry-dashboard/</id>
        
        <content type="html">&lt;h2 id=&quot;yi-xiang-mu-bei-jing-yu-yi-yi&quot;&gt;一、项目背景与意义&lt;&#x2F;h2&gt;
&lt;p&gt;OpenHands Starter是一个帮助用户快速部署AI开发平台的工具，为了更好地了解用户安装体验和潜在问题，我们需要收集关键遥测数据。然而，原始数据难以直观理解，团队迫切需要一个可视化仪表板，将这些数据转化为有价值的见解。&lt;&#x2F;p&gt;
&lt;p&gt;基于此需求，我们设计并实现了OpenHands Starter遥测仪表板，它能够展示关键安装指标、操作系统分布、安装步骤成功率，并提供详细的会话分析功能，帮助开发团队不断优化产品体验。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-telemetry-dashboard&#x2F;DashBoard_Preview.png&quot; alt=&quot;Dashboard Preview&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;er-ji-zhu-zhan-xuan-ze&quot;&gt;二、技术栈选择&lt;&#x2F;h2&gt;
&lt;p&gt;在技术选型上，我们考虑了开发效率、性能和用户体验，最终选定：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;FastAPI&lt;&#x2F;strong&gt; - 高性能Python后端框架，用于构建API服务&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;MongoDB&lt;&#x2F;strong&gt; - 灵活的文档数据库，适合存储结构多变的遥测数据&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Streamlit&lt;&#x2F;strong&gt; - 轻量级数据可视化框架，快速构建交互式仪表板&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Plotly&lt;&#x2F;strong&gt; - 强大的交互式图表库，增强数据可视化体验&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Docker&lt;&#x2F;strong&gt; - 容器化部署，确保环境一致性和简化部署流程&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;选择FastAPI与Streamlit这一组合是经过深思熟虑的决定。FastAPI提供了高性能的数据处理能力和类型提示优势，Streamlit则极大简化了数据可视化前端开发，二者结合实现了快速开发和卓越性能的平衡。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;san-jia-gou-she-ji&quot;&gt;三、架构设计&lt;&#x2F;h2&gt;
&lt;p&gt;系统采用前后端分离架构，职责清晰：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;OpenHands Telemetry Dashboard
&lt;&#x2F;span&gt;&lt;span&gt;├── 数据层 (MongoDB)
&lt;&#x2F;span&gt;&lt;span&gt;├── API服务层 (FastAPI)
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 数据接收模块
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── 数据处理模块
&lt;&#x2F;span&gt;&lt;span&gt;│   └── 数据分析模块
&lt;&#x2F;span&gt;&lt;span&gt;└── 可视化层 (Streamlit)
&lt;&#x2F;span&gt;&lt;span&gt;    ├── 概览仪表板
&lt;&#x2F;span&gt;&lt;span&gt;    ├── 详细会话分析
&lt;&#x2F;span&gt;&lt;span&gt;    └── 数据导出功能
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;整体架构如下：&lt;&#x2F;p&gt;
&lt;details&gt;
&lt;summary&gt;OpenHands Telemetry架构 (点击展开)&lt;&#x2F;summary&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-telemetry-dashboard&#x2F;OpenHands_Starter_Telemetry_Architecture.png&quot; alt=&quot;OpenHands_Starter_Telemetry_Architecture&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h2 id=&quot;si-xi-tong-shi-xian-xiang-jie&quot;&gt;四、系统实现详解&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;4-1-xiang-mu-jie-gou-she-zhi&quot;&gt;4.1 项目结构设置&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;text&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-text &quot;&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;openhands-telemetry&#x2F;           # 项目根目录
&lt;&#x2F;span&gt;&lt;span&gt;│
&lt;&#x2F;span&gt;&lt;span&gt;├── api&#x2F;                       # API 后端
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── venv&#x2F;                  # Python 虚拟环境
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── requirements.txt       # 依赖列表
&lt;&#x2F;span&gt;&lt;span&gt;│   └── app&#x2F;                   # API 源代码目录
&lt;&#x2F;span&gt;&lt;span&gt;│       ├── main.py            # 主入口文件
&lt;&#x2F;span&gt;&lt;span&gt;│       ├── .env               # 环境变量配置
&lt;&#x2F;span&gt;&lt;span&gt;│       ├── routers&#x2F;           # API 路由
&lt;&#x2F;span&gt;&lt;span&gt;│       │   └── telemetry.py
&lt;&#x2F;span&gt;&lt;span&gt;│       ├── models&#x2F;            # 数据模型
&lt;&#x2F;span&gt;&lt;span&gt;│       │   └── telemetry.py
&lt;&#x2F;span&gt;&lt;span&gt;│       ├── config&#x2F;            # 配置文件
&lt;&#x2F;span&gt;&lt;span&gt;│       │   └── db.py
&lt;&#x2F;span&gt;&lt;span&gt;│       └── utils&#x2F;             # 工具函数
&lt;&#x2F;span&gt;&lt;span&gt;│           └── logger.py
&lt;&#x2F;span&gt;&lt;span&gt;│
&lt;&#x2F;span&gt;&lt;span&gt;├── dashboard&#x2F;                 # Streamlit 前端
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── venv&#x2F;                  # Python 虚拟环境
&lt;&#x2F;span&gt;&lt;span&gt;│   ├── requirements.txt       # 依赖列表
&lt;&#x2F;span&gt;&lt;span&gt;│   └── app.py                 # Streamlit 应用
&lt;&#x2F;span&gt;&lt;span&gt;│
&lt;&#x2F;span&gt;&lt;span&gt;└── docker&#x2F;                    # Docker 配置
&lt;&#x2F;span&gt;&lt;span&gt;    ├── api.Dockerfile
&lt;&#x2F;span&gt;&lt;span&gt;    └── dashboard.Dockerfile
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;首先，我们创建一个清晰的项目结构：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir -p&lt;&#x2F;span&gt;&lt;span&gt; openhands-telemetry&#x2F;{api,dashboard,docker}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; openhands-telemetry
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-2-fastapihou-duan-shi-xian&quot;&gt;4.2 FastAPI后端实现&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;4-2-1-shu-ju-mo-xing-she-ji&quot;&gt;4.2.1 数据模型设计&lt;&#x2F;h4&gt;
&lt;p&gt;定义清晰的数据模型是系统的基础。我们使用Pydantic构建强类型模型：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# api&#x2F;app&#x2F;models&#x2F;telemetry.py
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;datetime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;datetime
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;typing &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Dict, Any, Optional
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;pydantic &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;BaseModel, Field
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;TelemetryEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;BaseModel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    anonymousId: str
&lt;&#x2F;span&gt;&lt;span&gt;    sessionId: str
&lt;&#x2F;span&gt;&lt;span&gt;    step: str
&lt;&#x2F;span&gt;&lt;span&gt;    status: str
&lt;&#x2F;span&gt;&lt;span&gt;    timestamp: datetime = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Field&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default_factory&lt;&#x2F;span&gt;&lt;span&gt;=datetime.utcnow)
&lt;&#x2F;span&gt;&lt;span&gt;    scriptVersion: Optional[str] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;    osVersion: Optional[str] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None 
&lt;&#x2F;span&gt;&lt;span&gt;    osName: Optional[str] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;    cpuArchitecture: Optional[str] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;    memoryGB: Optional[float] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;    metrics: Dict[str, Any] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Field&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default_factory&lt;&#x2F;span&gt;&lt;span&gt;=dict)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;TelemetryStats&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;BaseModel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    total_sessions: int
&lt;&#x2F;span&gt;&lt;span&gt;    successful_installs: int
&lt;&#x2F;span&gt;&lt;span&gt;    success_rate: float
&lt;&#x2F;span&gt;&lt;span&gt;    installation_by_os: Dict[str, int]
&lt;&#x2F;span&gt;&lt;span&gt;    steps_status: Dict[str, Dict[str, int]]
&lt;&#x2F;span&gt;&lt;span&gt;    avg_install_time: float
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;4-2-2-shu-ju-ku-lian-jie-pei-zhi&quot;&gt;4.2.2 数据库连接配置&lt;&#x2F;h4&gt;
&lt;p&gt;使用Motor作为MongoDB的异步客户端：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# api&#x2F;app&#x2F;config&#x2F;db.py
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;os
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;motor.motor_asyncio &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;AsyncIOMotorClient
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;dotenv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;load_dotenv
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load_dotenv&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;mongodb_uri = os.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;getenv&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MONGODB_URI&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mongodb:&#x2F;&#x2F;localhost:27017&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;mongodb_db = os.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;getenv&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MONGODB_DB&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;openhands_telemetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;client = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AsyncIOMotorClient&lt;&#x2F;span&gt;&lt;span&gt;(mongodb_uri)
&lt;&#x2F;span&gt;&lt;span&gt;db = client[mongodb_db]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection = db.telemetry_events
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;4-2-3-he-xin-apilu-you-shi-xian&quot;&gt;4.2.3 核心API路由实现&lt;&#x2F;h4&gt;
&lt;p&gt;实现数据接收与分析API：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# api&#x2F;app&#x2F;routers&#x2F;telemetry.py
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;fastapi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;APIRouter, HTTPException, status
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;datetime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;datetime, timedelta
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;typing &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Dict, Any, List
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from ..&lt;&#x2F;span&gt;&lt;span&gt;models.telemetry &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;TelemetryEvent, TelemetryStats
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from ..&lt;&#x2F;span&gt;&lt;span&gt;config.db &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from ..&lt;&#x2F;span&gt;&lt;span&gt;utils.logger &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;get_logger
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;router = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;APIRouter&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;prefix&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;api&#x2F;telemetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tags&lt;&#x2F;span&gt;&lt;span&gt;=[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;telemetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;])
&lt;&#x2F;span&gt;&lt;span&gt;logger = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get_logger&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;telemetry_router&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;@router.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;post&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;status_code&lt;&#x2F;span&gt;&lt;span&gt;=status.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTP_201_CREATED&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;receive_telemetry&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span&gt;: Dict[str, Any]):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;接收遥测数据&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 提取基础字段
&lt;&#x2F;span&gt;&lt;span&gt;        telemetry_data = {
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;anonymousId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;anonymousId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sessionId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sessionId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;scriptVersion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;scriptVersion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;osVersion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;osVersion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;osName&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;osName&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cpuArchitecture&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cpuArchitecture&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;memoryGB&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;memoryGB&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 处理时间戳
&lt;&#x2F;span&gt;&lt;span&gt;        timestamp = event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;timestamp:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                telemetry_data[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = datetime.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fromisoformat&lt;&#x2F;span&gt;&lt;span&gt;(timestamp.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;replace&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Z&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;+00:00&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;(ValueError, TypeError):
&lt;&#x2F;span&gt;&lt;span&gt;                telemetry_data[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = datetime.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;utcnow&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            telemetry_data[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = datetime.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;utcnow&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 额外的指标数据
&lt;&#x2F;span&gt;&lt;span&gt;        metrics = {}
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;key, value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;event.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;key not in telemetry_data:
&lt;&#x2F;span&gt;&lt;span&gt;                metrics[key] = value
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        telemetry_data[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = metrics
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 存储到数据库
&lt;&#x2F;span&gt;&lt;span&gt;        result = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;insert_one&lt;&#x2F;span&gt;&lt;span&gt;(telemetry_data)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;{&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;success&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(result.inserted_id)}
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Error processing telemetry: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;raise &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTPException&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;status_code&lt;&#x2F;span&gt;&lt;span&gt;=status.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTP_500_INTERNAL_SERVER_ERROR&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;detail&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Failed to process telemetry data: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;4-2-4-tong-ji-shu-ju-api&quot;&gt;4.2.4 统计数据API&lt;&#x2F;h4&gt;
&lt;p&gt;实现用于仪表板的数据统计API：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;@router.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;stats&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;response_model&lt;&#x2F;span&gt;&lt;span&gt;=TelemetryStats)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;get_telemetry_stats&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;获取遥测数据统计摘要&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取会话总数
&lt;&#x2F;span&gt;&lt;span&gt;        total_sessions = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;distinct&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sessionId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;))
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取成功安装数
&lt;&#x2F;span&gt;&lt;span&gt;        completed_installs = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;count_documents&lt;&#x2F;span&gt;&lt;span&gt;({
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;install&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;completed&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;metrics.success&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;        })
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 计算成功率
&lt;&#x2F;span&gt;&lt;span&gt;        success_rate = (completed_installs &#x2F; total_sessions * &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;total_sessions &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取按操作系统划分的安装数
&lt;&#x2F;span&gt;&lt;span&gt;        os_pipeline = [
&lt;&#x2F;span&gt;&lt;span&gt;            {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$group&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$osName&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$sum&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;            }},
&lt;&#x2F;span&gt;&lt;span&gt;            {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$match&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$ne&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;}}}
&lt;&#x2F;span&gt;&lt;span&gt;        ]
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        os_result = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;aggregate&lt;&#x2F;span&gt;&lt;span&gt;(os_pipeline).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to_list&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        installation_by_os = {item[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]: item[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;os_result}
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取按步骤划分的状态统计
&lt;&#x2F;span&gt;&lt;span&gt;        steps_pipeline = [
&lt;&#x2F;span&gt;&lt;span&gt;            {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$group&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;},
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$sum&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;            }}
&lt;&#x2F;span&gt;&lt;span&gt;        ]
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        steps_result = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;aggregate&lt;&#x2F;span&gt;&lt;span&gt;(steps_pipeline).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to_list&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        steps_status = {}
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;steps_result:
&lt;&#x2F;span&gt;&lt;span&gt;            step = item[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;][&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;            status = item[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;][&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;            count = item[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;step not in steps_status:
&lt;&#x2F;span&gt;&lt;span&gt;                steps_status[step] = {}
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            steps_status[step][status] = count
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 计算平均安装时间
&lt;&#x2F;span&gt;&lt;span&gt;        time_pipeline = [
&lt;&#x2F;span&gt;&lt;span&gt;            {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$match&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;install&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            }},
&lt;&#x2F;span&gt;&lt;span&gt;            {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$group&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$sessionId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;minTime&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$min&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;},
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;maxTime&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$max&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;            }},
&lt;&#x2F;span&gt;&lt;span&gt;            {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$project&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;duration&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$subtract&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$maxTime&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$minTime&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]}
&lt;&#x2F;span&gt;&lt;span&gt;            }},
&lt;&#x2F;span&gt;&lt;span&gt;            {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$group&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;avgDuration&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$avg&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$duration&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;            }}
&lt;&#x2F;span&gt;&lt;span&gt;        ]
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        time_result = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;aggregate&lt;&#x2F;span&gt;&lt;span&gt;(time_pipeline).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to_list&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        avg_install_time = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;time_result:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 转换为秒
&lt;&#x2F;span&gt;&lt;span&gt;            avg_install_time = time_result[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;][&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;avgDuration&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1000 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;time_result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TelemetryStats&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;total_sessions&lt;&#x2F;span&gt;&lt;span&gt;=total_sessions,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;successful_installs&lt;&#x2F;span&gt;&lt;span&gt;=completed_installs,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;success_rate&lt;&#x2F;span&gt;&lt;span&gt;=success_rate,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;installation_by_os&lt;&#x2F;span&gt;&lt;span&gt;=installation_by_os,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;steps_status&lt;&#x2F;span&gt;&lt;span&gt;=steps_status,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;avg_install_time&lt;&#x2F;span&gt;&lt;span&gt;=avg_install_time
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Error generating telemetry stats: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;raise &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTPException&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;status_code&lt;&#x2F;span&gt;&lt;span&gt;=status.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTP_500_INTERNAL_SERVER_ERROR&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;detail&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Failed to generate telemetry statistics: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;4-2-5-hui-hua-xiang-qing-api&quot;&gt;4.2.5 会话详情API&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;@router.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;sessions&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{session_id}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;events&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;get_session_events&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;session_id&lt;&#x2F;span&gt;&lt;span&gt;: str):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;获取指定会话的事件序列&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        events = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;find&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sessionId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: session_id}
&lt;&#x2F;span&gt;&lt;span&gt;        ).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sort&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to_list&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 转换 ObjectId 为字符串
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;event &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;events:
&lt;&#x2F;span&gt;&lt;span&gt;            event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;])
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not events:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;raise &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTPException&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;status_code&lt;&#x2F;span&gt;&lt;span&gt;=status.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTP_404_NOT_FOUND&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;detail&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Session with ID &lt;&#x2F;span&gt;&lt;span&gt;{session_id}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; not found&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            )
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;{&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;session_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: session_id, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;events&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: events}
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;HTTPException:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;raise
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Error retrieving session events: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;raise &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTPException&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;status_code&lt;&#x2F;span&gt;&lt;span&gt;=status.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HTTP_500_INTERNAL_SERVER_ERROR&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;detail&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Failed to retrieve session events: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;4-2-6-ying-yong-ru-kou-dian&quot;&gt;4.2.6 应用入口点&lt;&#x2F;h4&gt;
&lt;p&gt;将所有组件连接到FastAPI应用：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# api&#x2F;app&#x2F;main.py
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;fastapi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;FastAPI
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;fastapi.middleware.cors &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;CORSMiddleware
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;uvicorn
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;os
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;dotenv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;load_dotenv
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from .&lt;&#x2F;span&gt;&lt;span&gt;routers &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;telemetry
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from .&lt;&#x2F;span&gt;&lt;span&gt;utils.logger &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;get_logger
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 加载环境变量
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load_dotenv&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 初始化 FastAPI 应用
&lt;&#x2F;span&gt;&lt;span&gt;app = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;FastAPI&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands Telemetry API&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;description&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;API for receiving and analyzing OpenHands installation telemetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 添加CORS中间件
&lt;&#x2F;span&gt;&lt;span&gt;app.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_middleware&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    CORSMiddleware,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;allow_origins&lt;&#x2F;span&gt;&lt;span&gt;=[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 在生产环境中应限制为特定域名
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;allow_credentials&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;allow_methods&lt;&#x2F;span&gt;&lt;span&gt;=[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;allow_headers&lt;&#x2F;span&gt;&lt;span&gt;=[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 包含路由
&lt;&#x2F;span&gt;&lt;span&gt;app.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;include_router&lt;&#x2F;span&gt;&lt;span&gt;(telemetry.router)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 根路由
&lt;&#x2F;span&gt;&lt;span&gt;@app.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;root&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Welcome to OpenHands Telemetry API&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;documentation&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;docs&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;__name__ == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;__main__&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;    port = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;(os.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;getenv&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;API_PORT&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;9999&lt;&#x2F;span&gt;&lt;span&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;    uvicorn.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;app.main:app&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;0.0.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;port&lt;&#x2F;span&gt;&lt;span&gt;=port, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;reload&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-3-streamlityi-biao-ban-shi-xian&quot;&gt;4.3 Streamlit仪表板实现&lt;&#x2F;h3&gt;
&lt;p&gt;Streamlit让我们能够快速创建交互式数据可视化界面：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# dashboard&#x2F;app.py
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;streamlit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;st
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;pandas &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;pd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;plotly.express &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;px
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;plotly.graph_objects &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;requests
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;datetime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;datetime, timedelta
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;os
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;dotenv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;load_dotenv
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 加载环境变量
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;load_dotenv&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 设置页面配置
&lt;&#x2F;span&gt;&lt;span&gt;st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;set_page_config&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;page_title&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands Telemetry Dashboard&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;page_icon&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;📊&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;layout&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;wide&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 配置
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;API_URL &lt;&#x2F;span&gt;&lt;span&gt;= os.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;getenv&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;API_URL&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http:&#x2F;&#x2F;localhost:9999&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 页面标题
&lt;&#x2F;span&gt;&lt;span&gt;st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands Telemetry Dashboard&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;markdown&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;### Installation Telemetry Analytics&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 在仪表板中添加日期选择器
&lt;&#x2F;span&gt;&lt;span&gt;st.sidebar.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;筛选器&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;date_options = [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;最近7天&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;最近30天&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;最近90天&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;全部&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;date_filter = st.sidebar.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selectbox&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;时间范围&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, date_options)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 根据日期筛选修改 API 请求
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;filter_by_date&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;date_filter&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    today = datetime.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;utcnow&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;date_filter == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;最近7天&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;        start_date = today - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timedelta&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;days&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;date_filter == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;最近30天&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;        start_date = today - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timedelta&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;days&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;date_filter == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;最近90天&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;        start_date = today - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timedelta&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;days&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;90&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 全部数据
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;start_date.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;isoformat&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取统计数据
&lt;&#x2F;span&gt;&lt;span&gt;@st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cache_data&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ttl&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span&gt;)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 缓存5分钟
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;get_telemetry_stats&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        response = requests.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;API_URL&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;api&#x2F;telemetry&#x2F;stats&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;raise_for_status&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;json&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Error fetching telemetry stats: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取最近会话
&lt;&#x2F;span&gt;&lt;span&gt;@st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cache_data&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ttl&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;get_recent_sessions&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;limit&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        response = requests.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;API_URL&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;api&#x2F;telemetry&#x2F;recent?limit=&lt;&#x2F;span&gt;&lt;span&gt;{limit}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;raise_for_status&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;json&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Error fetching recent sessions: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;[]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取会话详情
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;get_session_events&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;session_id&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        response = requests.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;API_URL&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;api&#x2F;telemetry&#x2F;sessions&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;{session_id}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;events&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;raise_for_status&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;response.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;json&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Error fetching session events: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 导出功能
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;export_to_csv&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;df&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;filename&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;df.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to_csv&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encode&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 刷新按钮
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;button&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;刷新数据&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;):
&lt;&#x2F;span&gt;&lt;span&gt;    st.cache_data.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;clear&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;success&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;数据已刷新!&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取数据
&lt;&#x2F;span&gt;&lt;span&gt;stats = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get_telemetry_stats&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;recent_sessions = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get_recent_sessions&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;20&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 显示KPI卡片
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;stats:
&lt;&#x2F;span&gt;&lt;span&gt;    col1, col2, col3, col4 = st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;columns&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;col1:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;metric&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;总安装次数&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, stats[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;total_sessions&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;])
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;col2:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;metric&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;成功安装&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, stats[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;successful_installs&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;])
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;col3:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;metric&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;成功率&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{stats[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;success_rate&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;:.1f&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;col4:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;metric&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;平均安装时间&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{stats[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;avg_install_time&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;:.1f&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; 秒&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 创建操作系统分布图表
&lt;&#x2F;span&gt;&lt;span&gt;    st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subheader&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;按操作系统分类的安装数&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    os_data = pd.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DataFrame&lt;&#x2F;span&gt;&lt;span&gt;({
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;操作系统&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: stats[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;installation_by_os&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;keys&lt;&#x2F;span&gt;&lt;span&gt;(),
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;安装数&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: stats[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;installation_by_os&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;values&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    })
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not os_data.empty:
&lt;&#x2F;span&gt;&lt;span&gt;        fig = px.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pie&lt;&#x2F;span&gt;&lt;span&gt;(os_data, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;names&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;操作系统&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;values&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;安装数&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hole&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.4&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        fig.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;update_layout&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;400&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;plotly_chart&lt;&#x2F;span&gt;&lt;span&gt;(fig, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;use_container_width&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;暂无操作系统数据&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 创建步骤成功率图表
&lt;&#x2F;span&gt;&lt;span&gt;    st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subheader&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;安装步骤状态分布&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    steps_data = []
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;step, statuses &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;stats[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;steps_status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        total = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span&gt;(statuses.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;values&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;status, count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;statuses.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;            steps_data.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;({
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;步骤&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: step,
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;状态&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: status,
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;数量&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: count,
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;百分比&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: (count &#x2F; total * &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;total &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;            })
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    steps_df = pd.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DataFrame&lt;&#x2F;span&gt;&lt;span&gt;(steps_data)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not steps_df.empty:
&lt;&#x2F;span&gt;&lt;span&gt;        fig = px.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bar&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            steps_df,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;步骤&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;数量&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;状态&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;barmode&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;stack&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;百分比&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;labels&lt;&#x2F;span&gt;&lt;span&gt;={&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;百分比&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;        fig.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;update_layout&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;plotly_chart&lt;&#x2F;span&gt;&lt;span&gt;(fig, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;use_container_width&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;暂无步骤数据&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;warning&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;无法获取统计数据。请确保后端API正在运行。&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 显示最近会话
&lt;&#x2F;span&gt;&lt;span&gt;st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subheader&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;最近安装会话&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;recent_sessions:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 创建会话表格
&lt;&#x2F;span&gt;&lt;span&gt;    sessions_df = pd.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DataFrame&lt;&#x2F;span&gt;&lt;span&gt;(recent_sessions)
&lt;&#x2F;span&gt;&lt;span&gt;    sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = pd.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to_datetime&lt;&#x2F;span&gt;&lt;span&gt;(sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;])
&lt;&#x2F;span&gt;&lt;span&gt;    sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;时间&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;].dt.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;strftime&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%d %H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;%S&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;状态&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;success&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;成功&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;失败&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;持续时间&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;duration_seconds&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;apply&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;lambda &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;:.1f&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; 秒&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 使用Streamlit的列格式化
&lt;&#x2F;span&gt;&lt;span&gt;    sessions_display = sessions_df[[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;session_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;时间&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;状态&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;持续时间&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;os&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]]
&lt;&#x2F;span&gt;&lt;span&gt;    sessions_display.columns = [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;会话ID&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;时间&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;状态&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;持续时间&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;操作系统&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 添加导出功能
&lt;&#x2F;span&gt;&lt;span&gt;    csv = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;export_to_csv&lt;&#x2F;span&gt;&lt;span&gt;(sessions_df, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sessions.csv&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;download_button&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;label&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;导出会话数据为CSV&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;data&lt;&#x2F;span&gt;&lt;span&gt;=csv,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;file_name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;openhands_sessions.csv&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mime&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;text&#x2F;csv&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    )
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 增加会话详情展开功能
&lt;&#x2F;span&gt;&lt;span&gt;    selected_session = st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;selectbox&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;选择会话查看详情:&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, sessions_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;session_id&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tolist&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;selected_session:
&lt;&#x2F;span&gt;&lt;span&gt;        session_data = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get_session_events&lt;&#x2F;span&gt;&lt;span&gt;(selected_session)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;session_data and session_data[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;events&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]:
&lt;&#x2F;span&gt;&lt;span&gt;            st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subheader&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;会话 &lt;&#x2F;span&gt;&lt;span&gt;{selected_session}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; 详情&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            events = session_data[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;events&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;            events_df = pd.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DataFrame&lt;&#x2F;span&gt;&lt;span&gt;(events)
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 为时间轴创建数据
&lt;&#x2F;span&gt;&lt;span&gt;            events_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = pd.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;to_datetime&lt;&#x2F;span&gt;&lt;span&gt;(events_df[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;])
&lt;&#x2F;span&gt;&lt;span&gt;            events_df = events_df.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sort_values&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 创建时间轴可视化
&lt;&#x2F;span&gt;&lt;span&gt;            fig = go.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Figure&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i, event &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;events_df.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;iterrows&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 根据事件状态设置颜色
&lt;&#x2F;span&gt;&lt;span&gt;                color = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;green&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;failure&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;                    color = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;red&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;warning&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; or event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;partial&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;                    color = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;orange&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 添加事件点
&lt;&#x2F;span&gt;&lt;span&gt;                fig.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_trace&lt;&#x2F;span&gt;&lt;span&gt;(go.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Scatter&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span&gt;=[event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]],
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span&gt;=[event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]],
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mode&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;markers+text&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;marker&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dict&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span&gt;=color, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;size&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;15&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;=[event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]],
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;textposition&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;top center&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{event[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;]}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; - &lt;&#x2F;span&gt;&lt;span&gt;{event[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;]}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                ))
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            fig.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;update_layout&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;安装步骤时间轴&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;xaxis_title&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;时间&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;yaxis_title&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;安装步骤&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;500
&lt;&#x2F;span&gt;&lt;span&gt;            )
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;plotly_chart&lt;&#x2F;span&gt;&lt;span&gt;(fig, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;use_container_width&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 显示事件详情
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span&gt;st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;expander&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;查看会话事件详情&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;):
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 选择要展示的列
&lt;&#x2F;span&gt;&lt;span&gt;                display_cols = [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;                st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dataframe&lt;&#x2F;span&gt;&lt;span&gt;(events_df[display_cols])
&lt;&#x2F;span&gt;&lt;span&gt;                
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 显示最后一个事件的详细指标
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; in events_df.columns:
&lt;&#x2F;span&gt;&lt;span&gt;                    last_event = events_df.iloc[-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;isinstance&lt;&#x2F;span&gt;&lt;span&gt;(last_event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;], dict) and last_event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]:
&lt;&#x2F;span&gt;&lt;span&gt;                        st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subheader&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;最终指标&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;key, value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;last_event[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;                            st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{key}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;{value}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;暂无最近会话数据&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 页脚
&lt;&#x2F;span&gt;&lt;span&gt;st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;markdown&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;---&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;st.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;markdown&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands Telemetry Dashboard | © 2025&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-4-rong-qi-hua-pei-zhi&quot;&gt;4.4 容器化配置&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;4-4-1-apifu-wu-rong-qi&quot;&gt;4.4.1 API服务容器&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;dockerfile&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dockerfile &quot;&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# docker&#x2F;api.Dockerfile
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;FROM&lt;&#x2F;span&gt;&lt;span&gt; python:3.11-slim
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;WORKDIR &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;app
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span&gt; api&#x2F;requirements.txt .
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;RUN &lt;&#x2F;span&gt;&lt;span&gt;pip install --no-cache-dir -r requirements.txt
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span&gt; api&#x2F;app .&#x2F;app
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;CMD [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;uvicorn&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;app.main:app&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--host&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;0.0.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--port&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;9999&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;4-4-2-streamlityi-biao-ban-rong-qi&quot;&gt;4.4.2 Streamlit仪表板容器&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;dockerfile&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-dockerfile &quot;&gt;&lt;code class=&quot;language-dockerfile&quot; data-lang=&quot;dockerfile&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# docker&#x2F;dashboard.Dockerfile
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;FROM&lt;&#x2F;span&gt;&lt;span&gt; python:3.11-slim
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;WORKDIR &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;app
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span&gt; dashboard&#x2F;requirements.txt .
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;RUN &lt;&#x2F;span&gt;&lt;span&gt;pip install --no-cache-dir -r requirements.txt
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;COPY&lt;&#x2F;span&gt;&lt;span&gt; dashboard&#x2F;app.py .
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;EXPOSE &lt;&#x2F;span&gt;&lt;span&gt;8501
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;CMD [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;streamlit&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;app.py&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;4-4-3-docker-composepei-zhi&quot;&gt;4.4.3 Docker Compose配置&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# docker-compose.yml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;services&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mongodb&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;image&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mongo:6.0.5
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ports&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;27017:27017&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mongo_data:&#x2F;data&#x2F;db
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;restart&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;always
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;api&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;build&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dockerfile&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker&#x2F;api.Dockerfile
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ports&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;9999:9999&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;depends_on&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mongodb
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;environment&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MONGODB_URI=mongodb:&#x2F;&#x2F;mongodb:27017
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MONGODB_DB=openhands_telemetry
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ENVIRONMENT=production
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;restart&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;always
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dashboard&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;build&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dockerfile&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker&#x2F;dashboard.Dockerfile
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ports&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;8501:8501&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;depends_on&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;api
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;environment&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;API_URL=http:&#x2F;&#x2F;api:9999
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;restart&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;always
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;volumes&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mongo_data&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;wu-bu-shu-yu-pei-zhi&quot;&gt;五、部署与配置&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;5-1-chuang-jian-yi-lai-wen-jian&quot;&gt;5.1 创建依赖文件&lt;&#x2F;h3&gt;
&lt;p&gt;项目依赖管理是确保环境一致性的关键：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# API依赖
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; api
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python -m&lt;&#x2F;span&gt;&lt;span&gt; venv venv
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;source&lt;&#x2F;span&gt;&lt;span&gt; venv&#x2F;bin&#x2F;activate  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Windows: venv\Scripts\activate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pip&lt;&#x2F;span&gt;&lt;span&gt; install fastapi uvicorn motor pymongo pandas python-dotenv
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pip&lt;&#x2F;span&gt;&lt;span&gt; freeze &amp;gt; requirements.txt
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Dashboard依赖
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; ..&#x2F;dashboard
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python -m&lt;&#x2F;span&gt;&lt;span&gt; venv venv
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;source&lt;&#x2F;span&gt;&lt;span&gt; venv&#x2F;bin&#x2F;activate  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Windows: venv\Scripts\activate
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pip&lt;&#x2F;span&gt;&lt;span&gt; install streamlit pandas matplotlib plotly requests python-dotenv
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pip&lt;&#x2F;span&gt;&lt;span&gt; freeze &amp;gt; requirements.txt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-2-gou-jian-yu-qi-dong-fu-wu&quot;&gt;5.2 构建与启动服务&lt;&#x2F;h3&gt;
&lt;p&gt;使用Docker Compose简化部署流程：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 构建镜像
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker-compose&lt;&#x2F;span&gt;&lt;span&gt; build
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 启动服务
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker-compose&lt;&#x2F;span&gt;&lt;span&gt; up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -d
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-3-chu-shi-hua-ce-shi-shu-ju&quot;&gt;5.3 初始化测试数据&lt;&#x2F;h3&gt;
&lt;p&gt;为验证仪表板功能，我们可以发送一些测试数据：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 测试数据发送脚本
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;import&lt;&#x2F;span&gt;&lt;span&gt; requests
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;import&lt;&#x2F;span&gt;&lt;span&gt; json
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;from&lt;&#x2F;span&gt;&lt;span&gt; datetime import datetime, timedelta
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;import&lt;&#x2F;span&gt;&lt;span&gt; random
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;import&lt;&#x2F;span&gt;&lt;span&gt; uuid
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;API_URL&lt;&#x2F;span&gt;&lt;span&gt; = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http:&#x2F;&#x2F;localhost:9999&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 生成一些会话ID
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;session_ids&lt;&#x2F;span&gt;&lt;span&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;str(uuid.uuid4()) for _ in range(5)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;os_names&lt;&#x2F;span&gt;&lt;span&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Windows&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MacOS&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Linux&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;os_versions&lt;&#x2F;span&gt;&lt;span&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Windows 10&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Windows 11&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MacOS 12.5&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Ubuntu 22.04&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;steps&lt;&#x2F;span&gt;&lt;span&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;check_prerequisites&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;download_docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;install_docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;configure_docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;install&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;statuses&lt;&#x2F;span&gt;&lt;span&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;started&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;in_progress&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;completed&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;warning&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;failure&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 生成随机事件
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt; session_id &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; session_ids:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;anonymous_id&lt;&#x2F;span&gt;&lt;span&gt; = str(uuid.uuid4())&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;[:16]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;os_name&lt;&#x2F;span&gt;&lt;span&gt; = random.choice(os_names)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;os_version&lt;&#x2F;span&gt;&lt;span&gt; = random.choice(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;v for v in os_versions if os_name in v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 为每个会话创建一系列事件
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;base_time&lt;&#x2F;span&gt;&lt;span&gt; = datetime.utcnow() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; timedelta(days=random.randint(0, 6))
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 随机决定这个会话是否成功
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;success&lt;&#x2F;span&gt;&lt;span&gt; = random.random() &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.3
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt; i, step &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; enumerate(steps)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 每个步骤的时间增加一些随机值
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;event_time&lt;&#x2F;span&gt;&lt;span&gt; = base_time + timedelta(minutes=i*5 + random.randint(1, 3))
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 对于失败的会话，可能在某个步骤失败
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;not&lt;&#x2F;span&gt;&lt;span&gt; success and i &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt; and random.random() &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.7:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt; = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;failure&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;span&gt; = {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;error_code&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: random.randint(100, 500), &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;success&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: False}
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt; = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;completed&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; if i &amp;lt; len(steps) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; 1 or success else &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;failure&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;span&gt; = {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;success&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: status == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;completed&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 创建事件数据
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;event&lt;&#x2F;span&gt;&lt;span&gt; = {
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;anonymousId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: anonymous_id,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;sessionId&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: session_id,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: step,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: status,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: event_time.isoformat(),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;scriptVersion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1.0.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;osName&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: os_name,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;osVersion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: os_version,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cpuArchitecture&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;x64&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;memoryGB&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: random.randint(8, 64),
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;metrics&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: metrics
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 发送事件
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;response&lt;&#x2F;span&gt;&lt;span&gt; = requests.post(f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;{API_URL}&#x2F;api&#x2F;telemetry&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, json=event)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(f&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Session {session_id}, Step {step}: {response.status_code}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;liu-xi-tong-gong-neng-zhan-shi&quot;&gt;六、系统功能展示&lt;&#x2F;h2&gt;
&lt;p&gt;OpenHands Telemetry Dashboard提供多个关键功能，助力团队持续优化产品体验：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-1-zong-lan-zhi-biao&quot;&gt;6.1 总览指标&lt;&#x2F;h3&gt;
&lt;p&gt;仪表板顶部显示四个核心KPI：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;总安装次数&lt;&#x2F;li&gt;
&lt;li&gt;成功安装数&lt;&#x2F;li&gt;
&lt;li&gt;安装成功率&lt;&#x2F;li&gt;
&lt;li&gt;平均安装时间&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;这些指标提供了安装脚本效果的直观反馈，帮助团队快速评估整体表现。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-2-cao-zuo-xi-tong-fen-bu&quot;&gt;6.2 操作系统分布&lt;&#x2F;h3&gt;
&lt;p&gt;通过环形饼图展示不同操作系统上的安装分布，帮助团队了解用户环境构成。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-3-an-zhuang-bu-zou-fen-xi&quot;&gt;6.3 安装步骤分析&lt;&#x2F;h3&gt;
&lt;p&gt;堆叠柱状图清晰展示了每个安装步骤的成功&#x2F;失败情况，帮助快速识别问题环节。图表按步骤分组，通过颜色区分不同状态，整合了百分比标签，数据直观易读。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-4-hui-hua-xiang-qing-yu-shi-jian-zhou&quot;&gt;6.4 会话详情与时间轴&lt;&#x2F;h3&gt;
&lt;p&gt;系统最强大的功能之一是详细的会话分析：用户可选择特定会话，查看完整的安装时间轴和状态变化。时间轴使用颜色编码（绿色=成功，红色=失败，橙色=警告）直观展示安装流程，每个事件点显示步骤名称和状态。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-5-shu-ju-dao-chu-gong-neng&quot;&gt;6.5 数据导出功能&lt;&#x2F;h3&gt;
&lt;p&gt;为方便进一步分析，系统支持将会话数据导出为CSV格式，便于在Excel等工具中深入研究。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-chang-jian-wen-ti-yu-jie-jue-fang-an&quot;&gt;七、常见问题与解决方案&lt;&#x2F;h2&gt;
&lt;p&gt;在构建过程中，我们遇到并解决了几个典型问题：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;7-1-dockerjing-xiang-la-qu-wen-ti&quot;&gt;7.1 Docker镜像拉取问题&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;&#x2F;strong&gt;：在某些网络环境下，MongoDB镜像拉取失败，报错&amp;quot;unauthorized: incorrect username or password&amp;quot;。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;手动登录Docker Hub: &lt;code&gt;docker login&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;如无账号，指定具体MongoDB版本: &lt;code&gt;mongo:6.0.5&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;清理Docker缓存: &lt;code&gt;docker system prune -a&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;7-2-apiyu-dashboardtong-xin-wen-ti&quot;&gt;7.2 API与Dashboard通信问题&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;&#x2F;strong&gt;：Dashboard无法连接到API服务。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;确保Docker网络配置正确&lt;&#x2F;li&gt;
&lt;li&gt;在Docker Compose中将API_URL设置为服务名称: &lt;code&gt;API_URL=http:&#x2F;&#x2F;api:9999&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;增加调试输出验证连接: &lt;code&gt;st.sidebar.text(f&amp;quot;API URL: {API_URL}&amp;quot;)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;7-3-shu-ju-geng-xin-yan-chi&quot;&gt;7.3 数据更新延迟&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;&#x2F;strong&gt;：Streamlit缓存导致数据更新不及时。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;添加强制刷新按钮: &lt;code&gt;st.cache_data.clear()&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;调整缓存TTL: &lt;code&gt;@st.cache_data(ttl=60)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;使用实验性重新运行: &lt;code&gt;st.experimental_rerun()&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;ba-wei-lai-you-hua-fang-xiang&quot;&gt;八、未来优化方向&lt;&#x2F;h2&gt;
&lt;p&gt;OpenHands Telemetry Dashboard仍有多个可优化方向：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;8-1-yi-chang-jian-ce-yu-gao-jing&quot;&gt;8.1 异常检测与告警&lt;&#x2F;h3&gt;
&lt;p&gt;实现自动异常检测逻辑，当安装失败率突然上升时，自动告警通知开发团队。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;detect_failure_anomalies&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;检测异常失败模式&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取最近24小时内数据
&lt;&#x2F;span&gt;&lt;span&gt;    one_day_ago = datetime.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;utcnow&lt;&#x2F;span&gt;&lt;span&gt;() - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timedelta&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hours&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;24&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 计算失败率
&lt;&#x2F;span&gt;&lt;span&gt;    total_installs = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;count_documents&lt;&#x2F;span&gt;&lt;span&gt;({
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;install&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$gte&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: one_day_ago}
&lt;&#x2F;span&gt;&lt;span&gt;    })
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    failed_installs = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;telemetry_collection.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;count_documents&lt;&#x2F;span&gt;&lt;span&gt;({
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;install&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;failure&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;$gte&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: one_day_ago}
&lt;&#x2F;span&gt;&lt;span&gt;    })
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    failure_rate = failed_installs &#x2F; total_installs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;total_installs &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 异常检测逻辑
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;failure_rate &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.3 &lt;&#x2F;span&gt;&lt;span&gt;and total_installs &amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 触发告警
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;send_alert&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;安装失败率达到&lt;&#x2F;span&gt;&lt;span&gt;{failure_rate*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;100:.1f&lt;&#x2F;span&gt;&lt;span&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;%，请检查系统&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;8-2-qu-shi-fen-xi&quot;&gt;8.2 趋势分析&lt;&#x2F;h3&gt;
&lt;p&gt;添加基于时间的趋势分析，帮助团队理解不同版本之间的性能变化。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;8-3-yong-hu-ti-yan-ping-fen&quot;&gt;8.3 用户体验评分&lt;&#x2F;h3&gt;
&lt;p&gt;集成用户反馈数据，创建综合用户体验评分，全面评估安装体验。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;8-4-aiyu-ce-fen-xi&quot;&gt;8.4 AI预测分析&lt;&#x2F;h3&gt;
&lt;p&gt;引入机器学习模型，预测可能失败的安装，并提供预防性建议。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jiu-zong-jie-yu-jing-yan-fen-xiang&quot;&gt;九、总结与经验分享&lt;&#x2F;h2&gt;
&lt;p&gt;通过这个项目，我们成功构建了一个功能强大的遥测数据仪表板，为OpenHands Starter的持续优化提供了数据支持。这个系统具有几个关键优势：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;技术栈合理&lt;&#x2F;strong&gt;：FastAPI与Streamlit的组合既高效又强大&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;部署简单&lt;&#x2F;strong&gt;：Docker容器化使得部署过程一致且简单&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;数据可视化直观&lt;&#x2F;strong&gt;：交互式图表使复杂数据易于理解&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;扩展性强&lt;&#x2F;strong&gt;：模块化设计便于未来功能扩展&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;从这个项目中，我们学到了几个关键经验：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;前后端职责分离&lt;&#x2F;strong&gt;：FastAPI专注于数据处理，Streamlit专注于可视化&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;数据建模的重要性&lt;&#x2F;strong&gt;：良好的数据模型设计是系统稳定性的基础&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;容器化带来便利&lt;&#x2F;strong&gt;：Docker极大简化了多组件系统的部署和管理&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;用户为中心的设计&lt;&#x2F;strong&gt;：从用户需求出发的设计才能创造真正有价值的工具&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;通过这个仪表板，OpenHands团队能够持续监控安装过程，快速识别并解决问题，不断提升用户体验。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;源码地址&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;OpenHands-Starter-Dashboard&quot;&gt;GitHub - OpenHands Telemetry Dashboard&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;!--
**在线演示**：[OpenHands Telemetry Demo](https:&#x2F;&#x2F;telemetry.openhands.dev)
--&gt;</content>
        
    </entry>
    <entry xml:lang="en">
        <title>OpenHands 开发环境配置指南</title>
        <published>2025-03-13T00:00:00+00:00</published>
        <updated>2025-03-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/openhands-development-guidance/" type="text/html"/>
        <id>https://polly.wang/openhands-development-guidance/</id>
        
        <content type="html">&lt;ol&gt;
&lt;li&gt;安装 Docker&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; apt-transport-https ca-certificates curl software-properties-common
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -fsSL&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; gpg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --dearmor -o&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;deb [arch=&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dpkg --print-architecture&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;) signed-by=&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu &lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;lsb_release -cs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;) stable&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &amp;gt; &#x2F;dev&#x2F;null
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; docker-ce docker-ce-cli containerd.io
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;安装 Docker Compose&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; curl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -L &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;latest &lt;&#x2F;span&gt;&lt;span&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;grep -oP &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;tag_name&amp;quot;: &amp;quot;\K[^&amp;quot;]+&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&#x2F;docker-compose-&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)-&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;验证安装：&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker --version
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker-compose --version
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;(Optional) 创建 docker 用户组并加入当前用户，上一步验证失败时运行&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; usermod&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -aG&lt;&#x2F;span&gt;&lt;span&gt; docker $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;USER
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;newgrp&lt;&#x2F;span&gt;&lt;span&gt; docker
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl restart docker
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;安装miniforge3 (python环境)&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wget &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;conda-forge&#x2F;miniforge&#x2F;releases&#x2F;latest&#x2F;download&#x2F;Miniforge3-&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)-&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;).sh&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bash&lt;&#x2F;span&gt;&lt;span&gt; Miniforge3-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span&gt;)-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span&gt;).sh
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;安装NodeJS&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Download and install nvm:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -o-&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;nvm-sh&#x2F;nvm&#x2F;v0.40.1&#x2F;install.sh | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bash
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# in lieu of restarting the shell
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\. &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;.nvm&#x2F;nvm.sh&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Download and install Node.js:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nvm&lt;&#x2F;span&gt;&lt;span&gt; install 22
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Verify the Node.js version:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;node -v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Should print &amp;quot;v22.14.0&amp;quot;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nvm&lt;&#x2F;span&gt;&lt;span&gt; current &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Should print &amp;quot;v22.14.0&amp;quot;.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Verify npm version:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;npm -v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Should print &amp;quot;10.9.2&amp;quot;.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;安装Poetry&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -sSL&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;install.python-poetry.org | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;python3&lt;&#x2F;span&gt;&lt;span&gt; -
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;8&quot;&gt;
&lt;li&gt;安装系统依赖&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; build-essential
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;9&quot;&gt;
&lt;li&gt;非sudo开发配置&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Download and install Mamba (a faster version of conda)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -L -O &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;conda-forge&#x2F;miniforge&#x2F;releases&#x2F;latest&#x2F;download&#x2F;Miniforge3-&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)-&lt;&#x2F;span&gt;&lt;span&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;).sh&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bash&lt;&#x2F;span&gt;&lt;span&gt; Miniforge3-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname&lt;&#x2F;span&gt;&lt;span&gt;)-$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uname -m&lt;&#x2F;span&gt;&lt;span&gt;).sh
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Install Python 3.12, nodejs, and poetry
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mamba&lt;&#x2F;span&gt;&lt;span&gt; install python=3.12
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mamba&lt;&#x2F;span&gt;&lt;span&gt; install conda-forge::nodejs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mamba&lt;&#x2F;span&gt;&lt;span&gt; install conda-forge::poetry
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;10&quot;&gt;
&lt;li&gt;安装nginx与SSL证书&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; nginx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; certbot python3-certbot-nginx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; certbot&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --nginx -d&lt;&#x2F;span&gt;&lt;span&gt; your-domain.com
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;11&quot;&gt;
&lt;li&gt;配置nginx&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;aicoder
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; ln&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -s&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;aicoder &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; nginx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -t
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl restart nginx
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nginx配置文件&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;nginx&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-nginx &quot;&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span&gt;server {
&lt;&#x2F;span&gt;&lt;span&gt;    listen 80;
&lt;&#x2F;span&gt;&lt;span&gt;    server_name localhost;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    # 反向代理到 OpenHands 后端服务
&lt;&#x2F;span&gt;&lt;span&gt;    location &#x2F; {
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_pass http:&#x2F;&#x2F;127.0.0.1:3000; # OpenHands 后端服务的地址和端口
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header Host $host;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header X-Real-IP $remote_addr;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header X-Forwarded-Proto $scheme;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        # WebSocket 支持配置
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_http_version 1.1;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header Upgrade $http_upgrade;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header Connection &amp;quot;upgrade&amp;quot;;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_read_timeout 86400; # 保持连接时间更长
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        # 解决 CORS 问题
&lt;&#x2F;span&gt;&lt;span&gt;        add_header Access-Control-Allow-Origin *;
&lt;&#x2F;span&gt;&lt;span&gt;        add_header Access-Control-Allow-Methods &amp;#39;GET, POST, OPTIONS&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt;        add_header Access-Control-Allow-Headers &amp;#39;Content-Type, Authorization&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;12&quot;&gt;
&lt;li&gt;配置Linux系统服务&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;aicoder.service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl daemon-reload
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 启动服务
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl start aicoder.service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 停止服务
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl stop aicoder.service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 重启服务
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl restart aicoder.service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 查看服务状态
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl status aicoder.service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 查看服务日志
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; journalctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -u&lt;&#x2F;span&gt;&lt;span&gt; aicoder.service
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 实时查看日志
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; journalctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -u&lt;&#x2F;span&gt;&lt;span&gt; aicoder.service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -f
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;ini&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-ini &quot;&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[Unit]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Description&lt;&#x2F;span&gt;&lt;span&gt;=AICoder AI Coding Assistant
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;After&lt;&#x2F;span&gt;&lt;span&gt;=network.target
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[Service]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Type&lt;&#x2F;span&gt;&lt;span&gt;=simple
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;User&lt;&#x2F;span&gt;&lt;span&gt;=ubuntu
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WorkingDirectory&lt;&#x2F;span&gt;&lt;span&gt;=&#x2F;home&#x2F;ubuntu&#x2F;GitHub_Workspace&#x2F;AICoder
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ExecStart&lt;&#x2F;span&gt;&lt;span&gt;=&#x2F;home&#x2F;ubuntu&#x2F;miniforge3&#x2F;envs&#x2F;AICoder&#x2F;bin&#x2F;poetry run uvicorn openhands.server.listen:app --host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.0.0.0 &lt;&#x2F;span&gt;&lt;span&gt;--port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3000 &lt;&#x2F;span&gt;&lt;span&gt;--reload-exclude &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;.workspace&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Restart&lt;&#x2F;span&gt;&lt;span&gt;=on-failure
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RestartSec&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StandardOutput&lt;&#x2F;span&gt;&lt;span&gt;=journal
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StandardError&lt;&#x2F;span&gt;&lt;span&gt;=journal
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Environment&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;PATH=home&#x2F;ubuntu&#x2F;miniforge3&#x2F;envs&#x2F;AICoder&#x2F;bin:&#x2F;home&#x2F;ubuntu&#x2F;miniforge3&#x2F;bin:&#x2F;home&#x2F;ubuntu&#x2F;.local&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;bin:&#x2F;bin&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[Install]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WantedBy&lt;&#x2F;span&gt;&lt;span&gt;=multi-user.target
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;chang-jian-wen-ti-ji-jie-jue-fang-an&quot;&gt;常见问题及解决方案&lt;&#x2F;h2&gt;
&lt;p&gt;在配置过程中，开发者可能会遇到以下常见问题：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;端口权限问题：非 root 用户无法绑定 1024 以下端口，请使用 Nginx 代理或 setcap 命令解决&lt;&#x2F;li&gt;
&lt;li&gt;WebSocket 连接失败：确保 Nginx 配置中包含完整的 WebSocket 支持参数&lt;&#x2F;li&gt;
&lt;li&gt;Python 依赖冲突：使用虚拟环境和 Poetry 进行隔离管理&lt;&#x2F;li&gt;
&lt;li&gt;Docker 权限问题：将用户添加到 docker 用户组，避免频繁使用 sudo&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;本指南详细介绍了配置 OpenHands 开发环境的完整流程，从基础依赖安装到服务部署和网络配置。通过以上步骤，您可以在本地或服务器上搭建一个完整的 OpenHands 开发环境，为 AI 辅助编程工具的开发和使用提供坚实基础。&lt;&#x2F;p&gt;
&lt;p&gt;主要配置包括：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Docker 环境：安装 Docker 和 Docker Compose，为容器化开发和部署提供支持&lt;&#x2F;li&gt;
&lt;li&gt;Python 环境：使用 Miniforge3 配置 Python 运行环境，支持不同 Python 版本的开发需求&lt;&#x2F;li&gt;
&lt;li&gt;Node.js 环境：安装 Node.js 以支持前端开发和 JavaScript 工具链&lt;&#x2F;li&gt;
&lt;li&gt;依赖管理工具：集成 Poetry 实现 Python 依赖的精确管理&lt;&#x2F;li&gt;
&lt;li&gt;网络服务配置：通过 Nginx 设置反向代理，实现 OpenHands 的 HTTP 和 WebSocket 服务访问&lt;&#x2F;li&gt;
&lt;li&gt;安全配置：包含 SSL 证书申请和配置，确保服务通信安全&lt;&#x2F;li&gt;
&lt;li&gt;对于开发者而言，这套配置不仅适用于 OpenHands 项目，也可作为其他 AI 工具和 Web 应用开发环境的参考。随着 AI 编程助手的快速发展，掌握这些环境配置技能将有助于开发者更好地参与到相关项目中，创建和优化自己的 AI 辅助工具。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>深度解析 OpenHands CodeActAgent: 智能代理的核心架构</title>
        <published>2025-03-12T00:00:00+00:00</published>
        <updated>2025-03-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/openhands-codeactagent-deep-dive/" type="text/html"/>
        <id>https://polly.wang/openhands-codeactagent-deep-dive/</id>
        
        <content type="html">&lt;p&gt;CodeActAgent 是 OpenHands 框架中的核心组件，旨在通过统一的代码操作空间（CodeAct）简化和增强 LLM（大语言模型）代理的功能。本文将详细解析 CodeActAgent 的组成、功能和运作方式，并结合一个具体案例（TODO 应用）展示其工作流程。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;codeactagent-de-he-xin-zu-cheng&quot;&gt;CodeActAgent 的核心组成&lt;&#x2F;h2&gt;
&lt;p&gt;CodeActAgent 是一个高度模块化的代理，其核心组成部分包括 Profile、Prompt 和 Memory。这些模块共同协作，确保代理能够高效地分解任务、调用工具并与用户交互。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;1-profile&quot;&gt;1. Profile&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;profile-shi-shi-yao&quot;&gt;Profile 是什么&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Profile&lt;&#x2F;strong&gt; 是 CodeActAgent 的配置文件，定义了代理的行为、工具支持、内存管理等。&lt;&#x2F;li&gt;
&lt;li&gt;它通过 &lt;code&gt;AgentConfig&lt;&#x2F;code&gt; 类进行配置，包含以下关键参数：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;codeact_enable_browsing&lt;&#x2F;code&gt;：是否启用浏览器工具。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;codeact_enable_jupyter&lt;&#x2F;code&gt;：是否启用 IPython 工具。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;codeact_enable_llm_editor&lt;&#x2F;code&gt;：是否启用基于 LLM 的文件编辑工具。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;condenser&lt;&#x2F;code&gt;：事件压缩器的配置，用于优化内存中的历史记录。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;enable_prompt_extensions&lt;&#x2F;code&gt;：是否启用扩展提示（Prompt）。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;profile-de-jie-gou&quot;&gt;Profile 的结构&lt;&#x2F;h4&gt;
&lt;p&gt;Profile 是一个字典或对象，包含以下关键参数：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;config = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AgentConfig&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;codeact_enable_browsing&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;codeact_enable_jupyter&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;codeact_enable_llm_editor&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;condenser&lt;&#x2F;span&gt;&lt;span&gt;={&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;max_events&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;},
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;enable_prompt_extensions&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;disabled_microagents&lt;&#x2F;span&gt;&lt;span&gt;=[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;npm&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;github&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;profile-de-zuo-yong&quot;&gt;Profile 的作用&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Profile 决定了 CodeActAgent 的能力范围和行为模式。&lt;&#x2F;li&gt;
&lt;li&gt;例如：
&lt;ul&gt;
&lt;li&gt;如果启用 &lt;code&gt;codeact_enable_browsing&lt;&#x2F;code&gt;，代理可以使用浏览器工具与网页交互。&lt;&#x2F;li&gt;
&lt;li&gt;如果启用 &lt;code&gt;codeact_enable_jupyter&lt;&#x2F;code&gt;，代理可以运行 Python 代码来完成任务。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;2-prompt&quot;&gt;2. Prompt&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;prompt-shi-shi-yao&quot;&gt;Prompt 是什么&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Prompt&lt;&#x2F;strong&gt; 是 CodeActAgent 与 LLM 交互的输入内容，定义了任务的上下文、目标和约束。&lt;&#x2F;li&gt;
&lt;li&gt;它通过 &lt;code&gt;PromptManager&lt;&#x2F;code&gt; 动态生成，包含以下部分：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;系统消息&lt;&#x2F;strong&gt;：定义代理的角色和目标。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;用户消息&lt;&#x2F;strong&gt;：用户输入的任务描述。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;工具调用消息&lt;&#x2F;strong&gt;：代理调用工具的记录。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;观察消息&lt;&#x2F;strong&gt;：工具返回的结果。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;prompt-de-jie-gou&quot;&gt;Prompt 的结构&lt;&#x2F;h4&gt;
&lt;p&gt;Prompt 是一个消息列表，包含以下类型的消息：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;系统消息&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;plaintext&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-plaintext &quot;&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;&lt;span&gt;System: You are CodeActAgent, a highly capable assistant designed to perform tasks by executing code and interacting with tools.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用户消息&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;plaintext&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-plaintext &quot;&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;&lt;span&gt;User: 创建一个 TODO 应用，支持添加、删除和查看任务。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;工具调用消息&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;plaintext&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-plaintext &quot;&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;&lt;span&gt;Assistant: Calling tool: execute_ipython_cell
&lt;&#x2F;span&gt;&lt;span&gt;Tool arguments: {&amp;quot;code&amp;quot;: &amp;quot;tasks = []&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;观察消息&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;plaintext&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-plaintext &quot;&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;&lt;span&gt;Observation: Tool returned: &amp;quot;Initialized an empty task list.&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;prompt-de-sheng-cheng-luo-ji&quot;&gt;Prompt 的生成逻辑&lt;&#x2F;h4&gt;
&lt;p&gt;Prompt 的生成是 CodeActAgent 与 LLM 交互的关键步骤，以下是其详细逻辑：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;系统消息初始化&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;CodeActAgent 使用 &lt;code&gt;PromptManager&lt;&#x2F;code&gt; 添加系统消息，定义代理的角色和目标。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用户消息处理&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;用户输入的任务描述被添加到消息列表中。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;工具调用与观察消息&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;CodeActAgent 从 &lt;code&gt;ConversationMemory&lt;&#x2F;code&gt; 中提取工具调用记录和观察结果，并将其添加到 Prompt。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;消息增强&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;PromptManager&lt;&#x2F;code&gt; 为用户消息添加上下文信息（如示例或扩展信息）。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-memory&quot;&gt;3. Memory&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;memory-de-zuo-yong&quot;&gt;Memory 的作用&lt;&#x2F;h4&gt;
&lt;p&gt;Memory 是 CodeActAgent 的会话内存模块，负责记录代理的对话历史、工具调用记录以及观察结果。它通过 &lt;code&gt;ConversationMemory&lt;&#x2F;code&gt; 和 &lt;code&gt;Condenser&lt;&#x2F;code&gt; 协同工作，确保代理能够在多轮交互中保持上下文一致性。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;memory-de-jie-gou&quot;&gt;Memory 的结构&lt;&#x2F;h4&gt;
&lt;p&gt;Memory 包含以下几个关键部分：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;事件历史&lt;&#x2F;strong&gt;：存储所有的动作和观察，完整记录代理的交互过程。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;压缩历史&lt;&#x2F;strong&gt;：通过 &lt;code&gt;Condenser&lt;&#x2F;code&gt; 压缩后的关键事件，优化存储空间并提高检索效率。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;缓存&lt;&#x2F;strong&gt;：用于特定 LLM 的提示缓存，减少重复计算并提高响应速度。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;memory-de-gong-zuo-liu-cheng&quot;&gt;Memory 的工作流程&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;事件记录&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;每次工具调用或用户交互都会生成一个事件，并存储到事件历史中。&lt;&#x2F;li&gt;
&lt;li&gt;示例：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;event = {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tool_call&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tool&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;execute_ipython_cell&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Initialized task list.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;memory.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_event&lt;&#x2F;span&gt;&lt;span&gt;(event)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;事件压缩&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;Condenser&lt;&#x2F;code&gt; 对事件历史进行压缩，提取关键事件以减少冗余。&lt;&#x2F;li&gt;
&lt;li&gt;示例：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;condensed_events = memory.condenser.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;condensed_history&lt;&#x2F;span&gt;&lt;span&gt;(state)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;上下文检索&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;在生成 Prompt 时，Memory 提供上下文信息以确保对话的连贯性。&lt;&#x2F;li&gt;
&lt;li&gt;示例：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;messages = memory.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;process_events&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;condensed_history&lt;&#x2F;span&gt;&lt;span&gt;=condensed_events)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;zai-todo-ying-yong-zhong-de-zuo-yong&quot;&gt;在 TODO 应用中的作用&lt;&#x2F;h4&gt;
&lt;p&gt;在实现 TODO 应用时，Memory 的主要作用包括：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;记录任务分解过程&lt;&#x2F;strong&gt;：存储每个子任务的工具调用记录和结果。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;维护上下文一致性&lt;&#x2F;strong&gt;：确保代理能够根据用户的后续输入调整任务。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;优化交互效率&lt;&#x2F;strong&gt;：通过事件压缩减少冗余信息，提高响应速度。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;memory-shi-shi-yao&quot;&gt;Memory 是什么&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Memory&lt;&#x2F;strong&gt; 是代理的会话内存，用于存储对话历史、工具调用记录和观察结果。&lt;&#x2F;li&gt;
&lt;li&gt;它通过 &lt;code&gt;ConversationMemory&lt;&#x2F;code&gt; 管理，支持事件压缩和历史记录的动态更新。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;memory-de-jie-gou-1&quot;&gt;Memory 的结构&lt;&#x2F;h4&gt;
&lt;p&gt;Memory 包含以下部分：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;事件历史&lt;&#x2F;strong&gt;：存储所有的动作和观察。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;压缩历史&lt;&#x2F;strong&gt;：通过 &lt;code&gt;Condenser&lt;&#x2F;code&gt; 压缩后的关键事件。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;缓存&lt;&#x2F;strong&gt;：用于特定 LLM 的提示缓存。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;memory-de-zuo-yong-1&quot;&gt;Memory 的作用&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;Memory 记录了任务的分解过程和工具调用结果，确保代理能够在多轮对话中保持上下文一致。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;jie-he-an-li-shi-xian-yi-ge-todo-ying-yong&quot;&gt;结合案例：实现一个 TODO 应用&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ren-wu-miao-shu&quot;&gt;任务描述&lt;&#x2F;h3&gt;
&lt;p&gt;用户输入任务：“创建一个 TODO 应用，支持添加、删除和查看任务。”&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ren-wu-fen-jie&quot;&gt;任务分解&lt;&#x2F;h3&gt;
&lt;p&gt;CodeActAgent 的任务分解通过与 LLM 的交互实现，以下是具体流程：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用户输入任务&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;用户输入任务描述：“创建一个 TODO 应用，支持添加、删除和查看任务。”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;构建 Prompt&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;CodeActAgent 构建消息列表并发送给 LLM。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;解析 LLM 响应&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;LLM 返回的响应被解析为一系列子任务：
&lt;ul&gt;
&lt;li&gt;初始化任务列表。&lt;&#x2F;li&gt;
&lt;li&gt;实现添加任务功能。&lt;&#x2F;li&gt;
&lt;li&gt;实现删除任务功能。&lt;&#x2F;li&gt;
&lt;li&gt;实现查看任务功能。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;zi-ren-wu-fen-fa&quot;&gt;子任务分发&lt;&#x2F;h3&gt;
&lt;p&gt;CodeActAgent 的子任务分发通过工具调用实现，以下是具体流程：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;工具调用&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;根据子任务调用相应的工具（如执行 Python 代码、编辑文件）。&lt;&#x2F;li&gt;
&lt;li&gt;示例：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;action = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CmdRunAction&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;tasks = []&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;result = action.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;execute&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;结果存储&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;工具返回的结果被存储为观察消息。&lt;&#x2F;li&gt;
&lt;li&gt;示例：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;observation_message = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Message&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;role&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;observation&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Tool returned: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Initialized an empty task list.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;state.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_observation&lt;&#x2F;span&gt;&lt;span&gt;(observation_message)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;反馈给用户&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;CodeActAgent 将工具调用结果反馈给用户。&lt;&#x2F;li&gt;
&lt;li&gt;示例：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;final_message = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Message&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;role&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;assistant&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;TODO 应用已创建，支持添加、删除和查看任务。&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;state.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_message&lt;&#x2F;span&gt;&lt;span&gt;(final_message)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;wan-zheng-shi-xian-shi-li&quot;&gt;完整实现示例&lt;&#x2F;h2&gt;
&lt;p&gt;以下是一个完整的实现示例，展示如何使用 CodeActAgent 创建一个 TODO 应用：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;openhands.core.config &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;AgentConfig
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;openhands.llm.llm &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LLM
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;openhands.agenthub.codeact_agent.codeact_agent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;CodeActAgent
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;openhands.controller.state.state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;State
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;openhands.core.message &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;Message
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 配置代理
&lt;&#x2F;span&gt;&lt;span&gt;config = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AgentConfig&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;codeact_enable_browsing&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;codeact_enable_jupyter&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;codeact_enable_llm_editor&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;condenser&lt;&#x2F;span&gt;&lt;span&gt;={&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;max_events&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;},
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;enable_prompt_extensions&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;disabled_microagents&lt;&#x2F;span&gt;&lt;span&gt;=[],
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 初始化 LLM 和代理
&lt;&#x2F;span&gt;&lt;span&gt;llm = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LLM&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;model_name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gpt-4&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;agent = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CodeActAgent&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;llm&lt;&#x2F;span&gt;&lt;span&gt;=llm, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span&gt;=config)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 创建初始状态
&lt;&#x2F;span&gt;&lt;span&gt;state = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;State&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 用户输入任务
&lt;&#x2F;span&gt;&lt;span&gt;user_message = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Message&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;role&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;user&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;创建一个 TODO 应用，支持添加、删除和查看任务。&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;state.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_message&lt;&#x2F;span&gt;&lt;span&gt;(user_message)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 构建 Prompt 并与 LLM 交互
&lt;&#x2F;span&gt;&lt;span&gt;messages = agent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_get_messages&lt;&#x2F;span&gt;&lt;span&gt;(state)
&lt;&#x2F;span&gt;&lt;span&gt;response = llm.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;completion&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;messages&lt;&#x2F;span&gt;&lt;span&gt;=agent.llm.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;format_messages_for_llm&lt;&#x2F;span&gt;&lt;span&gt;(messages))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 解析 LLM 响应
&lt;&#x2F;span&gt;&lt;span&gt;actions = agent.tools.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;response_to_actions&lt;&#x2F;span&gt;&lt;span&gt;(response)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 执行子任务
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;action &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;actions:
&lt;&#x2F;span&gt;&lt;span&gt;    result = action.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;execute&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    observation_message = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Message&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;role&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;observation&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Tool returned: &lt;&#x2F;span&gt;&lt;span&gt;{result}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    state.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_observation&lt;&#x2F;span&gt;&lt;span&gt;(observation_message)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 反馈结果
&lt;&#x2F;span&gt;&lt;span&gt;final_message = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Message&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;role&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;assistant&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;TODO 应用已创建，支持添加、删除和查看任务。&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;state.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add_message&lt;&#x2F;span&gt;&lt;span&gt;(final_message)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 输出对话历史
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;state.history:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{msg.role}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;{msg.content}&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;通过上述分析和实现示例，我们可以清晰地了解 CodeActAgent 的 Prompt 和 Profile，以及它们在任务分解和子任务分发中的作用。您可以根据这些信息手动实现一个类似的代理，并根据任务需求动态生成 Prompt 和配置 Profile。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>OpenHands Starter V2.0 (Windows) 开发实践</title>
        <published>2025-03-11T00:00:00+00:00</published>
        <updated>2025-03-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/openhands-starter-windows-v2/" type="text/html"/>
        <id>https://polly.wang/openhands-starter-windows-v2/</id>
        
        <content type="html">&lt;!--
&gt; 旧版工具繁复如丝，用户叹息不知所措。
&gt;
&gt; 看代码重构，接口优化；体验提升，部署轻松。
&gt;
&gt; 架构精巧，流程清晰，千般细节尽显匠心。
&gt;
&gt; 问开发，论软件工程之道，谁主沉浮？
&gt;
&gt; 多方技术曾融。忆coding时日月如梭。
&gt;
&gt; 恰桌面应用，设计典雅；开发体验，流畅如虹。
&gt;
&gt; 封装命令，简化部署，几步操作胜百行脚本。
&gt;
&gt; 终有成，待打包发布，程序启航！
--&gt;
&lt;h2 id=&quot;yi-xiang-mu-bei-jing-yu-yi-yi&quot;&gt;一、项目背景与意义&lt;&#x2F;h2&gt;
&lt;p&gt;OpenHands是一个强大的AI开发平台，但其部署过程对普通用户而言颇具挑战性。用户需要熟悉Docker、命令行及配置文件，这无疑提高了入门门槛。为解决这一痛点，随即开发了OpenHands PC部署助手V2.0，旨在用图形化界面封装复杂的Docker部署流程，使不具备技术背景的用户也能轻松部署和管理OpenHands服务。
&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-starter-windows-v2&#x2F;OpenHands_Starter.png&quot; alt=&quot;OpenHands Starter&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;er-ji-zhu-zhan-xuan-ze&quot;&gt;二、技术栈选择&lt;&#x2F;h2&gt;
&lt;p&gt;在技术选型上，考虑了跨平台性、开发效率和用户体验：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Python&lt;&#x2F;strong&gt; - 作为主要开发语言，兼具开发效率和强大的生态系统&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;PyQt5&lt;&#x2F;strong&gt; - 强大的GUI框架，提供丰富的界面组件和良好的跨平台支持&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Docker API&lt;&#x2F;strong&gt; - 通过命令行接口实现Docker操作的封装&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;多线程处理&lt;&#x2F;strong&gt; - 确保UI响应性和后台任务平滑运行&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;PyInstaller&lt;&#x2F;strong&gt; - 将Python应用打包为独立可执行程序&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;san-jia-gou-she-ji&quot;&gt;三、架构设计&lt;&#x2F;h2&gt;
&lt;p&gt;应用采用分层架构，明确职责分离：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;OpenHands Starter V2.0
&lt;&#x2F;span&gt;&lt;span&gt;├── 配置管理层 (AppConfig)
&lt;&#x2F;span&gt;&lt;span&gt;├── 日志系统 (Logger)
&lt;&#x2F;span&gt;&lt;span&gt;├── 系统检查层 (SystemChecker)
&lt;&#x2F;span&gt;&lt;span&gt;├── Docker管理层 (DockerManager)
&lt;&#x2F;span&gt;&lt;span&gt;├── 安装向导 (SetupWizard)
&lt;&#x2F;span&gt;&lt;span&gt;└── 主应用界面 (MainWindow)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;每个模块职责单一，减少耦合性，提高代码可维护性。这种设计能够独立优化各个组件，例如改进Docker命令而不影响UI层。&lt;&#x2F;p&gt;
&lt;details&gt;
&lt;summary&gt;OpenHands Starter v2.0 架构 (点击展开)&lt;&#x2F;summary&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-starter-windows-v2&#x2F;OpenHands_Starter_Architecture_v2.svg&quot; alt=&quot;OpenHands Starter&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h2 id=&quot;si-guan-jian-gong-neng-shi-xian&quot;&gt;四、关键功能实现&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;4-1-zhi-neng-xi-tong-jian-ce&quot;&gt;4.1 智能系统检测&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;_run_system_checks&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;实际执行系统检查的方法&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    all_passed = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Windows版本检查
&lt;&#x2F;span&gt;&lt;span&gt;    win_compat = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.system_checker.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_windows_compatible&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.win_compat_label.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Windows版本检查: &lt;&#x2F;span&gt;&lt;span&gt;{&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;通过&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;win_compat &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;不兼容&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.check_results[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;win_compat&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;] = win_compat
&lt;&#x2F;span&gt;&lt;span&gt;    all_passed = all_passed and win_compat
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 虚拟化支持检查
&lt;&#x2F;span&gt;&lt;span&gt;    virtualization = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.system_checker.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;check_virtualization&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.virtualization_label.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;虚拟化支持检查: &lt;&#x2F;span&gt;&lt;span&gt;{&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;通过&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;virtualization &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;未启用&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ...更多检查...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;系统检查是应用最核心的功能之一，通过全面检测用户系统环境，确保满足Docker运行的所有前提条件，为用户提供明确的指导。&lt;&#x2F;p&gt;
&lt;details&gt;
&lt;summary&gt;OpenHands Starter v2.0 检测流程 (点击展开)&lt;&#x2F;summary&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-starter-windows-v2&#x2F;OpenHands_Starter_Workflow_v2.svg&quot; alt=&quot;OpenHands Starter&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h3 id=&quot;4-2-dockercao-zuo-feng-zhuang&quot;&gt;4.2 Docker操作封装&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;start_openhands&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;compose_file&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;启动OpenHands容器&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;正在启动OpenHands，使用配置文件: &lt;&#x2F;span&gt;&lt;span&gt;{compose_file}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 确认目录
&lt;&#x2F;span&gt;&lt;span&gt;        compose_dir = os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dirname&lt;&#x2F;span&gt;&lt;span&gt;(compose_file)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 执行docker-compose up
&lt;&#x2F;span&gt;&lt;span&gt;        process = subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Popen&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker-compose&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, compose_file, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;up&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stdout&lt;&#x2F;span&gt;&lt;span&gt;=subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PIPE&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stderr&lt;&#x2F;span&gt;&lt;span&gt;=subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PIPE&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cwd&lt;&#x2F;span&gt;&lt;span&gt;=compose_dir
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        stdout, stderr = process.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;communicate&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;process.returncode == &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands启动成功&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;, stdout
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands启动失败: &lt;&#x2F;span&gt;&lt;span&gt;{stderr}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;, stderr
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.logger.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;启动OpenHands过程中出错: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这段代码展示了如何将复杂的Docker命令封装为简单的方法调用，隐藏底层细节，让普通用户无需理解Docker命令就能操作服务。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-3-zhi-guan-de-an-zhuang-xiang-dao&quot;&gt;4.3 直观的安装向导&lt;&#x2F;h3&gt;
&lt;p&gt;安装向导是应用的重要环节，采用步骤式引导用户完成系统检查、Docker安装、环境配置。每一步都有详细说明和视觉反馈，降低用户的认知负担。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logger&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;system_checker&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;docker_manager&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ... 初始化代码 ...
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 添加向导页面
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;addPage&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;createIntroPage&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;addPage&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;createSystemCheckPage&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;addPage&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;createDockerInstallPage&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;addPage&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;createConfigPage&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;addPage&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;createCompletionPage&lt;&#x2F;span&gt;&lt;span&gt;())
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-4-xi-tong-tuo-pan-ji-cheng&quot;&gt;4.4 系统托盘集成&lt;&#x2F;h3&gt;
&lt;p&gt;为提升用户体验，实现了系统托盘功能，允许应用最小化运行，同时保持对服务的控制。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;setup_tray&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;初始化系统托盘图标&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.tray_icon = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;QSystemTrayIcon&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 使用系统图标
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.tray_icon.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setIcon&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;standardIcon&lt;&#x2F;span&gt;&lt;span&gt;(QStyle.SP_ComputerIcon))
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 创建托盘菜单
&lt;&#x2F;span&gt;&lt;span&gt;    tray_menu = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;QMenu&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ... 添加菜单项 ...
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 设置托盘菜单
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.tray_icon.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setContextMenu&lt;&#x2F;span&gt;&lt;span&gt;(tray_menu)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;wu-jie-jue-de-ji-zhu-nan-ti&quot;&gt;五、解决的技术难题&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;5-1-qlabelque-shao-textchangedxin-hao&quot;&gt;5.1 QLabel缺少textChanged信号&lt;&#x2F;h3&gt;
&lt;p&gt;在开发过程中，发现QLabel类没有textChanged信号，这影响了向导页面字段状态的自动更新。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：创建自定义SignalLabel类继承QLabel，并添加所需的信号：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;SignalLabel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;QLabel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    textChanged = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pyqtSignal&lt;&#x2F;span&gt;&lt;span&gt;(str)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(text)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.textChanged.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;emit&lt;&#x2F;span&gt;&lt;span&gt;(text)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-2-dockerming-ling-jian-rong-xing&quot;&gt;5.2 Docker命令兼容性&lt;&#x2F;h3&gt;
&lt;p&gt;Docker命令在不同环境下可能有差异，尤其是docker-compose和docker compose两种命令格式的兼容性问题。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：添加命令检测和回退机制：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;check_docker_compose_command&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;检查系统支持的docker compose命令&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 首先尝试新命令
&lt;&#x2F;span&gt;&lt;span&gt;        result = subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;compose&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;],
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stdout&lt;&#x2F;span&gt;&lt;span&gt;=subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PIPE&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;stderr&lt;&#x2F;span&gt;&lt;span&gt;=subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PIPE
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;result.returncode == &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;compose&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;pass
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 回退到旧命令
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker-compose&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-3-windowshe-maclu-jing-chai-yi&quot;&gt;5.3 Windows和Mac路径差异&lt;&#x2F;h3&gt;
&lt;p&gt;在跨平台开发中，Windows和Mac系统的路径表示方式存在差异，需要特别处理。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：统一使用&#x27;&#x2F;&#x27;作为路径分隔符，并在需要的地方进行转换：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;compose_content = DOCKER_COMPOSE_TEMPLATE.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;format&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workspace_path&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;~&#x2F;Docker_Workspace&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 容器内的路径
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workspace_dir&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Path&lt;&#x2F;span&gt;&lt;span&gt;(workspace_dir)).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;replace&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Host路径转换
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;state_dir&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Path&lt;&#x2F;span&gt;&lt;span&gt;(state_dir)).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;replace&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;),
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;port&lt;&#x2F;span&gt;&lt;span&gt;=port
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;liu-da-bao-yu-fen-fa&quot;&gt;六、打包与分发&lt;&#x2F;h2&gt;
&lt;p&gt;将Python应用转换为可执行程序是最后的关键步骤。选择PyInstaller作为打包工具：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# build_app.py
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;PyInstaller.__main__
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;os
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 应用参数
&lt;&#x2F;span&gt;&lt;span&gt;params = [
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHandsStarterV2.py&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 主脚本
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--name=OpenHands部署助手&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 输出名称
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--onefile&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 单文件模式
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--windowed&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# GUI模式
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--icon=app_icon.ico&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 应用图标
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--clean&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 清理临时文件
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 运行PyInstaller
&lt;&#x2F;span&gt;&lt;span&gt;PyInstaller.__main__.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(params)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;为提升专业度，还使用Inno Setup创建了精美的安装向导，让用户获得完整的安装体验。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-xiang-mu-zong-jie-yu-zhan-wang&quot;&gt;七、项目总结与展望&lt;&#x2F;h2&gt;
&lt;p&gt;OpenHands Starter V2.0的开发是一次将复杂技术流程简化为用户友好界面的尝试。通过精心的架构设计和UI优化，成功降低了OpenHands的使用门槛，实现了预期目标。&lt;&#x2F;p&gt;
&lt;p&gt;在未来版本中，计划进一步优化：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;添加自动更新功能，确保用户始终使用最新版本&lt;&#x2F;li&gt;
&lt;li&gt;增强日志分析能力，提供更智能的问题诊断&lt;&#x2F;li&gt;
&lt;li&gt;集成OpenHands官方账户系统，实现无缝授权&lt;&#x2F;li&gt;
&lt;li&gt;开发macOS和Linux版本，实现完全跨平台支持&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;strong&gt;源码地址&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;OpenHands-Starter&quot;&gt;GitHub - OpenHands Starter v2.0&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;下载链接&lt;&#x2F;strong&gt;：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;OpenHands-Starter&#x2F;release&quot;&gt;OpenHands Starter v2.0 发行版&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>OpenHands Starter (Windows) 一键启动工具设计与实现</title>
        <published>2025-03-10T00:00:00+00:00</published>
        <updated>2025-03-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/openhands-auto-starter-windows/" type="text/html"/>
        <id>https://polly.wang/openhands-auto-starter-windows/</id>
        
        <content type="html">&lt;!--

Polly2014: 我想使用python写一个程序，放在Devbox中运行（是Windows系统），可能PC端 程序的主要作用是提供一个界面，可以实现如下功能

界面包含上方配置区（包含左侧配置项与右侧一个大按钮），下方进度条与状态栏（进度条可位于状态栏内右侧，进度条宽度占状态栏的70%）

- 双击程序运行，状态栏提示&quot;Checking OpenHands Status&quot;，程序自动检测OpenHands是否安装和运行
  - 如果已经安装且正在运行，则与OpenHands相关的所有配置均设置为enabled状态，并显示按钮”Start with OpenHands“，点击后打开浏览器并跳转到OpenHands首页，按钮切换为”Stop OpenHands&quot;；点击&quot;Stop Openhands&quot;则关闭浏览器（此场景下按钮仅对浏览器操作）
    - OpenHands的配置包括：OpenHands Container Image, Runtime Container Image, Port, Local Directory, Log All Event. (可参考yaml文件)。每次点击&quot;Start with OpenHands&quot;都会根据当前配置，更新到docker-compose.yaml中
  - 如果已经安装，但没有运行，则与OpenHands相关的所有配置均设置为enabled状态，并显示按钮”Start with OpenHands“，点击后使用docker-compose启动OpenHands，然后打开浏览器并跳转到OpenHands首页，按钮切换为”Stop OpenHands&quot;；点击&quot;Stop Openhands&quot;则关闭浏览器
  - 如果没有安装，则配置全不可用（灰色或diabled状态），按钮切换为&quot;一键安装OpenHands&quot;，安装时实时更新进度条和状态栏。安装步骤包括
    - 检查WSL是否安装，且Default Version为2
      - 如果没安装，则尝试安装
      - 如果安装失败，弹出弹窗并给报错原因
    - 检查Docker是否安装
      - 如果没安装，则尝试安装
      - 如果安装失败，弹出弹窗并给报错原因
    - 检查Docker配置是否符合要求
      - 检查Docker的配置中General配置的&quot;Use the WSL 2 based Engine&quot;是否开启
        - 如果没开启，则尝试开启
        - 如果开启失败，弹出弹窗并给报错原因
      - 检查Docker的配置中Resources &gt; WSL Integration配置的&quot;Enable integration with my default WSL distro&quot;是否开启
        - 如果没开启，则尝试开启
        - 如果开启失败，弹出弹窗并给报错原因
    - 上述安装步骤全部成功后，进度条满格绿色，所有配置均激活可用，按钮显示为”Start with OpenHands&quot;
--&gt;
&lt;h2 id=&quot;yin-yan&quot;&gt;引言&lt;&#x2F;h2&gt;
&lt;p&gt;随着 AI 在开发工作中的普及，个人化 AI 助手平台 OpenHands 逐渐成为许多开发者的得力工具。然而，由于 OpenHands 基于 Docker 容器环境运行，对非技术人员来说，设置和运行过程可能存在一定门槛。为改善用户体验，我开发了一个 Windows 下的 OpenHands 一键启动工具，实现了环境检测、自动配置和一键部署等功能。本文将详细介绍这个工具的设计思路和实现过程。&lt;&#x2F;p&gt;
&lt;details&gt;
&lt;summary&gt;OpenHands Starter 界面 (点击展开)&lt;&#x2F;summary&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-auto-starter-windows&#x2F;OpenHands_Starter.png&quot; alt=&quot;OpenHands Starter&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h2 id=&quot;gong-neng-xu-qiu-fen-xi&quot;&gt;功能需求分析&lt;&#x2F;h2&gt;
&lt;p&gt;在开发之前，我首先明确了工具应具备的核心功能：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;环境检测&lt;&#x2F;strong&gt; - 检查 WSL、Docker 和 OpenHands 的安装和运行状态&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;自动配置&lt;&#x2F;strong&gt; - 提供 OpenHands 环境配置的图形界面&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;一键启动&lt;&#x2F;strong&gt; - 简化 Docker 和 OpenHands 的启动流程&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;状态管理&lt;&#x2F;strong&gt; - 实时显示 OpenHands 运行状态&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;浏览器集成&lt;&#x2F;strong&gt; - 启动后自动打开浏览器访问 OpenHands 界面&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;为实现良好用户体验，还需要考虑以下设计目标：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;简洁直观&lt;&#x2F;strong&gt; - 界面简单明了，状态一目了然&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;错误处理&lt;&#x2F;strong&gt; - 提供详细的错误提示和恢复方案&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;实时反馈&lt;&#x2F;strong&gt; - 通过进度条和状态提示提供实时操作反馈&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ji-zhu-zhan-xuan-ze&quot;&gt;技术栈选择&lt;&#x2F;h2&gt;
&lt;p&gt;经过调研，我选择了以下技术栈：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;编程语言&lt;&#x2F;strong&gt;: Python 3.x&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;GUI 框架&lt;&#x2F;strong&gt;: PyQt5（提供跨平台、美观的界面支持）&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Docker 交互&lt;&#x2F;strong&gt;: 基于 subprocess 模块与 Docker CLI 交互&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;配置管理&lt;&#x2F;strong&gt;: YAML 格式进行配置管理&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;打包发布&lt;&#x2F;strong&gt;: PyInstaller 将应用打包为单一可执行文件&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;xi-tong-jia-gou-she-ji&quot;&gt;系统架构设计&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;zheng-ti-jia-gou&quot;&gt;整体架构&lt;&#x2F;h3&gt;
&lt;details&gt;
&lt;summary&gt;OpenHands Starter 架构图 (点击展开)&lt;&#x2F;summary&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-auto-starter-windows&#x2F;OpenHands_Starter_Architecture.png&quot; alt=&quot;OpenHands Starter 架构图&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;p&gt;该工具采用简单的分层架构：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;服务层&lt;&#x2F;strong&gt; - DockerService 类提供所有与 Docker 和 WSL 相关的操作&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;线程层&lt;&#x2F;strong&gt; - 包含 InstallationThread 和 DockerStartThread 类，处理耗时操作&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;界面层&lt;&#x2F;strong&gt; - OpenHandsManager 类负责 UI 展示和用户交互&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;配置层&lt;&#x2F;strong&gt; - 负责管理 docker-compose.yaml 配置文件&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;zhuang-tai-guan-li-she-ji&quot;&gt;状态管理设计&lt;&#x2F;h3&gt;
&lt;p&gt;系统基于状态机设计，定义了以下几种核心状态：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;not_installed&lt;&#x2F;code&gt;: OpenHands 未安装&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;docker_not_running&lt;&#x2F;code&gt;: Docker 未运行&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;installed&lt;&#x2F;code&gt;: OpenHands 已安装但未运行&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;running&lt;&#x2F;code&gt;: OpenHands 正在运行&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;running_browser&lt;&#x2F;code&gt;: OpenHands 正在运行且浏览器已打开&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;details&gt;
&lt;summary&gt;OpenHands 状态流转图 (点击展开)&lt;&#x2F;summary&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-auto-starter-windows&#x2F;OpenHands_State_Flow.svg&quot; alt=&quot;OpenHands State Flow&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;details&gt;
&lt;h2 id=&quot;dai-ma-shi-xian&quot;&gt;代码实现&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-fu-wu-ceng-shi-xian-dockerservice-lei&quot;&gt;1. 服务层实现 - DockerService 类&lt;&#x2F;h3&gt;
&lt;p&gt;首先创建 DockerService 类，封装所有 Docker 和 WSL 操作：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;DockerService&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;处理与Docker和WSL相关的所有操作&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;staticmethod
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;is_wsl_installed&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            result = subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;([&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;wsl&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--status&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;], &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;capture_output&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;WSL&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; in result.stdout and &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Default Version: 2&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; in result.stdout
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;staticmethod
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;is_docker_running&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            result = subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;([&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;], &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;capture_output&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Server:&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; in result.stdout
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;staticmethod
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;start_docker&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;启动Docker Desktop服务&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 查找Docker Desktop安装路径
&lt;&#x2F;span&gt;&lt;span&gt;            program_files_paths = [
&lt;&#x2F;span&gt;&lt;span&gt;                os.environ.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ProgramFiles&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;C:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Program Files&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;),
&lt;&#x2F;span&gt;&lt;span&gt;                os.environ.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ProgramFiles(x86)&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;C:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Program Files (x86)&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;            ]
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            docker_exe = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;program_files_paths:
&lt;&#x2F;span&gt;&lt;span&gt;                possible_path = os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(path, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Docker Desktop.exe&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;exists&lt;&#x2F;span&gt;&lt;span&gt;(possible_path):
&lt;&#x2F;span&gt;&lt;span&gt;                    docker_exe = possible_path
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;break
&lt;&#x2F;span&gt;&lt;span&gt;            
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;docker_exe:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 启动Docker Desktop
&lt;&#x2F;span&gt;&lt;span&gt;                subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Popen&lt;&#x2F;span&gt;&lt;span&gt;([docker_exe])
&lt;&#x2F;span&gt;&lt;span&gt;                
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 等待Docker服务就绪
&lt;&#x2F;span&gt;&lt;span&gt;                max_attempts = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;30
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(max_attempts):
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;DockerService.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_docker_running&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Docker 服务已启动&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                    time.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;                
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Docker 服务启动超时&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;找不到 Docker Desktop 执行文件&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;启动 Docker 服务时出错: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;2-duo-xian-cheng-chu-li-bi-mian-ui-zu-sai&quot;&gt;2. 多线程处理 - 避免 UI 阻塞&lt;&#x2F;h3&gt;
&lt;p&gt;为处理耗时操作，创建专门的线程类：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;DockerStartThread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;QThread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;处理Docker启动的后台线程&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    docker_started = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pyqtSignal&lt;&#x2F;span&gt;&lt;span&gt;(bool, str)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        success, message = DockerService.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;start_docker&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 给Docker一点启动的缓冲时间
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;success:
&lt;&#x2F;span&gt;&lt;span&gt;            time.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 额外等待2秒确保Docker完全就绪
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_started.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;emit&lt;&#x2F;span&gt;&lt;span&gt;(success, message)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;3-pei-zhi-guan-li&quot;&gt;3. 配置管理&lt;&#x2F;h3&gt;
&lt;p&gt;为避免文件路径问题，特别是在 PyInstaller 打包后，处理配置文件路径：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 获取应用程序目录
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;getattr&lt;&#x2F;span&gt;&lt;span&gt;(sys, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;frozen&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 如果是PyInstaller打包的应用
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.app_dir = os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dirname&lt;&#x2F;span&gt;&lt;span&gt;(sys.executable)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 如果是直接运行的Python脚本
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.app_dir = os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dirname&lt;&#x2F;span&gt;&lt;span&gt;(os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;abspath&lt;&#x2F;span&gt;&lt;span&gt;(__file__))
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.app_dir:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.app_dir = os.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;getcwd&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.compose_file_path = os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.app_dir, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker-compose.yaml&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;配置文件的保存与加载：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;save_config&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;保存配置到docker-compose.yaml&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        compose_data = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.compose_file_path, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;                compose_data = yaml.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;safe_load&lt;&#x2F;span&gt;&lt;span&gt;(f)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;FileNotFoundError:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 如果文件不存在，创建默认配置
&lt;&#x2F;span&gt;&lt;span&gt;            compose_data = {
&lt;&#x2F;span&gt;&lt;span&gt;                &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;services&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: {
&lt;&#x2F;span&gt;&lt;span&gt;                    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;openhands-app&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;: {
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ... 配置详情
&lt;&#x2F;span&gt;&lt;span&gt;                    }
&lt;&#x2F;span&gt;&lt;span&gt;                }
&lt;&#x2F;span&gt;&lt;span&gt;            }
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 更新配置
&lt;&#x2F;span&gt;&lt;span&gt;        compose_data[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;services&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;][&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;openhands-app&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;][&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;image&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.config[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;container_image&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# ... 其他配置更新
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.compose_file_path, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;            yaml.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dump&lt;&#x2F;span&gt;&lt;span&gt;(compose_data, f, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;default_flow_style&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        QMessageBox.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;critical&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;配置保存错误&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;无法保存配置: &lt;&#x2F;span&gt;&lt;span&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;str&lt;&#x2F;span&gt;&lt;span&gt;(e)}&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-zhuang-tai-jian-ce-yu-ui-geng-xin&quot;&gt;4. 状态检测与 UI 更新&lt;&#x2F;h3&gt;
&lt;p&gt;实现状态检测并根据状态更新 UI 的关键代码：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;check_openhands_status&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;检查OpenHands的安装和运行状态&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.status_label.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;检查 OpenHands 状态...&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 先检查 docker-compose.yaml 是否存在
&lt;&#x2F;span&gt;&lt;span&gt;    is_installed = DockerService.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_openhands_installed&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.compose_file_path)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 再检查 Docker 是否运行
&lt;&#x2F;span&gt;&lt;span&gt;    docker_running = DockerService.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_docker_running&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 最后检查 OpenHands 是否运行
&lt;&#x2F;span&gt;&lt;span&gt;    is_running = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;docker_running:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 只有当 Docker 运行时才检查 OpenHands 状态
&lt;&#x2F;span&gt;&lt;span&gt;        is_running = DockerService.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_openhands_running&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 根据不同状态组合设置 UI
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;is_installed and is_running:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# OpenHands 已安装且运行中
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.status_label.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands 已安装并正在运行&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.main_button.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;使用 OpenHands&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.main_button.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setStyleSheet&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;background-color: #4CAF50; color: white;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.current_state = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;running&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.progress_bar.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setValue&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;is_installed and docker_running and not is_running:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# OpenHands 已安装，Docker 运行中，但 OpenHands 未运行
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.status_label.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands 已安装但未运行&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.main_button.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;启动 OpenHands&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.current_state = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;installed&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.progress_bar.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setValue&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span&gt;is_installed and not docker_running:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# OpenHands 已安装，但 Docker 未运行
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.status_label.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Docker 未运行，需要先启动 Docker&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.main_button.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;启动 Docker 服务&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.current_state = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker_not_running&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.progress_bar.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setValue&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# OpenHands 未安装
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.status_label.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHands 未安装&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.main_button.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;一键安装 OpenHands&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.current_state = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;not_installed&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.progress_bar.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setValue&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-zhu-an-niu-dian-ji-chu-li-luo-ji&quot;&gt;5. 主按钮点击处理逻辑&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;on_main_button_click&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;主按钮点击事件处理&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.current_state == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;running&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 打开浏览器
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;open_browser&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.main_button.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;停止 OpenHands&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.current_state = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;running_browser&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.current_state == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker_not_running&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Docker 未运行，启动 Docker
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.status_label.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setText&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;正在启动 Docker 服务...&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.main_button.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setEnabled&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.progress_bar.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;setValue&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_thread = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DockerStartThread&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_thread.docker_started.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;connect&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.on_docker_started)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_thread.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;start&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.current_state == &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;installed&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 已安装但未运行，启动OpenHands
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not DockerService.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_docker_running&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 如果Docker未运行，先启动Docker
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_thread = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;DockerStartThread&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_thread.docker_started.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;connect&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.on_docker_started_for_openhands)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_thread.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;start&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Docker已运行，直接启动OpenHands
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_start_openhands&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;da-bao-yu-fa-bu&quot;&gt;打包与发布&lt;&#x2F;h2&gt;
&lt;p&gt;使用 PyInstaller 将应用打包为单一可执行文件，注意添加配置文件：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pyinstaller --onefile --noconsole --icon&lt;&#x2F;span&gt;&lt;span&gt;=openhands.ico&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;OpenHandsManager&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; ^
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--add-data &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;docker-compose.yaml;.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; ^
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--hidden-import&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;PyQt5.QtPrintSupport &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;^
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--hidden-import&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;PyQt5.sip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;^
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OpenHandsStartQt.py
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;yu-dao-de-tiao-zhan-yu-jie-jue-fang-an&quot;&gt;遇到的挑战与解决方案&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-docker-zhuang-tai-jian-ce-wen-ti&quot;&gt;1. Docker 状态检测问题&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;挑战&lt;&#x2F;strong&gt;：Docker 启动时间不确定，可能导致检测结果不准确。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：实现轮询检测机制，并添加充足的等待时间，确保 Docker 服务完全就绪。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;max_attempts = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;30
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span&gt;(max_attempts):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;DockerService.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_docker_running&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Docker 服务已启动&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    time.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;)  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 等待2秒钟
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;2-pyinstaller-da-bao-hou-lu-jing-wen-ti&quot;&gt;2. PyInstaller 打包后路径问题&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;挑战&lt;&#x2F;strong&gt;：PyInstaller 打包后，应用运行时的工作目录与开发时不同，导致配置文件不可访问。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：获取应用程序实际运行目录，使用绝对路径处理配置文件：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;getattr&lt;&#x2F;span&gt;&lt;span&gt;(sys, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;frozen&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# PyInstaller打包的应用
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.app_dir = os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dirname&lt;&#x2F;span&gt;&lt;span&gt;(sys.executable)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 直接运行的Python脚本
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.app_dir = os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dirname&lt;&#x2F;span&gt;&lt;span&gt;(os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;abspath&lt;&#x2F;span&gt;&lt;span&gt;(__file__))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;3-ui-xiang-ying-xing-wen-ti&quot;&gt;3. UI 响应性问题&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;挑战&lt;&#x2F;strong&gt;：启动 Docker 和 OpenHands 过程耗时，可能导致 UI 卡死。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;解决方案&lt;&#x2F;strong&gt;：使用 QThread 处理耗时操作，配合信号槽机制更新 UI：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;DockerStartThread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;QThread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    docker_started = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pyqtSignal&lt;&#x2F;span&gt;&lt;span&gt;(bool, str)
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        success, message = DockerService.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;start_docker&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_started.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;emit&lt;&#x2F;span&gt;&lt;span&gt;(success, message)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 在主线程中连接信号
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.docker_thread.docker_started.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;connect&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.on_docker_started)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;you-hua-yu-gai-jin-fang-xiang&quot;&gt;优化与改进方向&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;自动更新功能&lt;&#x2F;strong&gt;：检测并提示用户更新 OpenHands 版本&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;日志功能&lt;&#x2F;strong&gt;：添加详细日志，方便问题排查&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;系统托盘集成&lt;&#x2F;strong&gt;：最小化到系统托盘，便于长期运行&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;定制化主题&lt;&#x2F;strong&gt;：提供暗色&#x2F;浅色主题切换&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;多语言支持&lt;&#x2F;strong&gt;：添加英文等多语言界面&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;开发 OpenHands 一键启动工具的过程既挑战又有趣。通过合理的架构设计和状态管理，我们实现了一个直观、易用的管理工具，极大降低了用户使用 OpenHands 的门槛。关键成功因素包括良好的状态管理、多线程处理耗时操作以及详尽的错误处理。&lt;&#x2F;p&gt;
&lt;p&gt;希望这个工具能帮助更多开发者轻松体验 OpenHands 的强大功能，也欢迎社区贡献改进建议和代码优化。&lt;&#x2F;p&gt;
&lt;!--
---

**源码地址**：[GitHub - OpenHands Starter](https:&#x2F;&#x2F;github.com&#x2F;yourusername&#x2F;openhands-starter)

**下载链接**：[OpenHands Starter 发行版](https:&#x2F;&#x2F;github.com&#x2F;yourusername&#x2F;openhands-starter&#x2F;releases)

--&gt;</content>
        
    </entry>
    <entry xml:lang="en">
        <title>OpenHands：端到端流程原理深度剖析</title>
        <published>2025-03-07T00:00:00+00:00</published>
        <updated>2025-03-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/openhands-e2e-workflow-deep-dive/" type="text/html"/>
        <id>https://polly.wang/openhands-e2e-workflow-deep-dive/</id>
        
        <content type="html">&lt;h2 id=&quot;1-yin-yan&quot;&gt;&lt;strong&gt;1. 引言&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;在现代软件开发中，自动化工具已经成为不可或缺的一部分。然而，传统的自动化工具往往局限于特定场景，无法灵活适应复杂的用户需求。为了解决这一问题，OpenHands 应运而生。&lt;&#x2F;p&gt;
&lt;p&gt;OpenHands 是一个自动化 AI 软件工程师，旨在通过端到端的交互流程，帮助用户完成从代码生成到测试运行、从文件操作到 Web 自动化等多种任务。它的核心组件——Agent，能够智能地解析用户请求、分解任务并协调执行环境完成操作。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;openhands-de-du-te-you-shi&quot;&gt;&lt;strong&gt;OpenHands 的独特优势&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自然语言交互&lt;&#x2F;strong&gt;：用户可以通过简单的自然语言描述任务，无需掌握复杂的技术细节。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;模块化设计&lt;&#x2F;strong&gt;：系统由多个独立模块组成，支持灵活扩展和动态调用。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;安全性与隔离&lt;&#x2F;strong&gt;：通过沙箱技术和严格的权限管理，确保任务执行的安全性。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;端到端自动化&lt;&#x2F;strong&gt;：从用户请求到任务完成，全流程自动化，无需人工干预。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;2-openhands-de-zheng-ti-jia-gou&quot;&gt;&lt;strong&gt;2. OpenHands 的整体架构&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;jia-gou-tu&quot;&gt;&lt;strong&gt;架构图&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;polly.wang&#x2F;openhands-e2e-workflow-deep-dive&#x2F;OpenHands_Architecture.png&quot; alt=&quot;OpenHands Architecture&quot; &#x2F;&gt;
上图展示了 OpenHands 的整体架构，包括用户、前端、Server、Agent、MicroAgent、Sandbox&#x2F;Browser&#x2F;Shell 等模块之间的交互关系。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mo-kuai-jian-jie&quot;&gt;&lt;strong&gt;模块简介&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;模块名称&lt;&#x2F;th&gt;&lt;th&gt;描述&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;用户&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;用户通过自然语言描述任务，例如“生成一个 Python 函数并编写单元测试”。用户请求是整个流程的起点。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;前端&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;提供用户交互界面，支持文件上传、任务配置和结果展示，基于 React 构建，确保用户体验流畅。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Server&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;基于 FastAPI 构建，负责接收用户请求并将其转发给 Agent。Server 提供 RESTful API 接口，支持任务的分发、会话管理和请求验证，同时与前端交互，确保用户请求能够被正确解析并传递到后端的 Agent。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Agent&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;OpenHands 的核心组件，负责解析用户请求、分解任务并协调执行。它是整个系统的“大脑”，通过调用 MicroAgent 和执行环境完成复杂任务。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;MicroAgent&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;执行具体任务的子模块，例如文件操作、代码生成、测试运行等。每个 MicroAgent 专注于特定功能，支持动态加载和扩展，确保任务的灵活性和高效性。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;LLM&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;提供强大的自然语言处理能力，支持任务解析、语义分析和动态评分标准生成，确保复杂任务能够被准确理解和执行。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Memory&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;管理会话记忆和上下文信息，确保任务执行的连续性。通过 Condenser 和 ConversationMemory 模块实现高效的记忆管理。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Security&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;负责权限管理和安全审计，确保任务执行的安全性。通过沙箱技术和严格的输入验证防止恶意代码注入。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Storage&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;负责数据存储和检索，支持任务结果的持久化，确保用户能够随时访问历史任务结果。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Sandbox&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;提供安全、隔离的任务执行环境，确保任务执行不会影响系统的其他部分。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Browser&#x2F;Shell&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;实际的执行环境，用于完成 Web 自动化或 Shell 命令操作，支持跨平台和多种任务类型。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;本文将对 OpenHands 的架构、工作流程、技术实现以及应用场景进行全面解析。通过深入剖析每个组件的设计原理与技术细节，帮助读者理解 OpenHands 的工作机制，并探索其在自动化领域的潜力。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;3-gong-zuo-liu-cheng-cong-yong-hu-dao-zhi-xing-huan-jing&quot;&gt;&lt;strong&gt;3. 工作流程：从用户到执行环境&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;OpenHands 的工作流程是一个端到端的自动化过程，从用户请求到任务完成，每个步骤都经过精心设计以确保高效、准确和安全。以下是以自动化开发与部署一个 Web 应用为核心的详细工作流程解析。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-1-yong-hu-qing-qiu-de-chu-li&quot;&gt;&lt;strong&gt;3.1 用户请求的处理&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;用户交互&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;用户通过前端描述任务，例如：
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;创建一个待办事项管理工具，前端用 React，后端用 FastAPI，支持添加、删除和标记任务为完成。将其部署到 Vercel。&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;前端通过 RESTful API 将请求发送到 Server。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Server 的作用&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Server 接收用户请求并通过 FastAPI 路由处理，定义在 &lt;code&gt;openhands.server.routes.conversation.py&lt;&#x2F;code&gt; 中：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;@router.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;post&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;api&#x2F;v1&#x2F;execute&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;execute_task&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span&gt;: Request):
&lt;&#x2F;span&gt;&lt;span&gt;    data = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;request.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;json&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    task_description = data.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;task_description&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;    agent = Agent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get_cls&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;CodeActAgent&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)()
&lt;&#x2F;span&gt;&lt;span&gt;    result = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;await &lt;&#x2F;span&gt;&lt;span&gt;agent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;handle_task&lt;&#x2F;span&gt;&lt;span&gt;(task_description)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;{&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: result}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-2-codeactagent-de-ren-wu-fen-jie&quot;&gt;&lt;strong&gt;3.2 CodeActAgent 的任务分解&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;任务分解&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;CodeActAgent 接收用户请求后，将其分解为多个子任务：
&lt;ol&gt;
&lt;li&gt;生成前端代码。&lt;&#x2F;li&gt;
&lt;li&gt;生成后端代码。&lt;&#x2F;li&gt;
&lt;li&gt;优化代码（调用 LLM）。&lt;&#x2F;li&gt;
&lt;li&gt;在本地运行测试。&lt;&#x2F;li&gt;
&lt;li&gt;打包代码并上传到 Vercel。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;调用 LLM&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 CodeActAgent 的 &lt;code&gt;step&lt;&#x2F;code&gt; 方法与 LLM 交互，优化代码：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;step&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;state&lt;&#x2F;span&gt;&lt;span&gt;: State) -&amp;gt; Action:
&lt;&#x2F;span&gt;&lt;span&gt;    messages = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_get_messages&lt;&#x2F;span&gt;&lt;span&gt;(state)
&lt;&#x2F;span&gt;&lt;span&gt;    params = {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;messages&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.llm.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;format_messages_for_llm&lt;&#x2F;span&gt;&lt;span&gt;(messages)}
&lt;&#x2F;span&gt;&lt;span&gt;    response = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.llm.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;completion&lt;&#x2F;span&gt;&lt;span&gt;(**params)
&lt;&#x2F;span&gt;&lt;span&gt;    actions = codeact_function_calling.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;response_to_actions&lt;&#x2F;span&gt;&lt;span&gt;(response)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;action &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;actions:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.pending_actions.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span&gt;(action)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.pending_actions.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;popleft&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;上下文管理&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Memory 模块（如 &lt;code&gt;ConversationMemory&lt;&#x2F;code&gt; 和 &lt;code&gt;Condenser&lt;&#x2F;code&gt;）管理会话记忆和上下文信息：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.conversation_memory = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ConversationMemory&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.prompt_manager)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.condenser = Condenser.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;from_config&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.config.condenser)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-3-microagent-de-ren-wu-zhi-xing&quot;&gt;&lt;strong&gt;3.3 MicroAgent 的任务执行&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;在 OpenHands 中，MicroAgent 是执行具体任务的核心模块。以下是与 Todo App 开发和部署相关的 MicroAgent 实现：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CodeGenerationMicroAgent&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;负责生成前端和后端代码。&lt;&#x2F;li&gt;
&lt;li&gt;示例代码（非 OpenHands 源码，仅为案例展示）：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;CodeGenerationMicroAgent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;generate_frontend_code&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        import React, { useState } from &amp;#39;react&amp;#39;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        function App() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            const [tasks, setTasks] = useState([]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            const addTask = (task) =&amp;gt; setTasks([...tasks, { task, completed: false }]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            const toggleTask = (index) =&amp;gt; {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                const newTasks = [...tasks];
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                newTasks[index].completed = !newTasks[index].completed;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                setTasks(newTasks);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            };
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            return (
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                &amp;lt;div&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                    &amp;lt;h1&amp;gt;Todo List&amp;lt;&#x2F;h1&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                    &amp;lt;input id=&amp;quot;taskInput&amp;quot; placeholder=&amp;quot;Add a task&amp;quot; &#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                    &amp;lt;button onClick={() =&amp;gt; addTask(document.getElementById(&amp;#39;taskInput&amp;#39;).value)}&amp;gt;Add&amp;lt;&#x2F;button&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                    &amp;lt;ul&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                        {tasks.map((t, i) =&amp;gt; (
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                            &amp;lt;li key=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{i}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; onClick={() =&amp;gt; toggleTask(i)} style=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;{{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; textDecoration: t.completed ? &amp;#39;line-through&amp;#39; : &amp;#39;none&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{t.task}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                            &amp;lt;&#x2F;li&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                        ))}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                    &amp;lt;&#x2F;ul&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                &amp;lt;&#x2F;div&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            );
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        export default App;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;generate_backend_code&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        from fastapi import FastAPI
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        app = FastAPI()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        tasks = []
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        @app.post(&amp;quot;&#x2F;add_task&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        def add_task(task: str):
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            tasks.append({&amp;quot;task&amp;quot;: task, &amp;quot;completed&amp;quot;: False})
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            return {&amp;quot;message&amp;quot;: &amp;quot;Task added successfully&amp;quot;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        @app.get(&amp;quot;&#x2F;tasks&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        def get_tasks():
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            return tasks
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        @app.put(&amp;quot;&#x2F;toggle_task&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{index}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        def toggle_task(index: int):
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            if 0 &amp;lt;= index &amp;lt; len(tasks):
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                tasks[index][&amp;quot;completed&amp;quot;] = not tasks[index][&amp;quot;completed&amp;quot;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;                return {&amp;quot;message&amp;quot;: &amp;quot;Task updated successfully&amp;quot;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;            return {&amp;quot;error&amp;quot;: &amp;quot;Invalid index&amp;quot;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BrowserMicroAgent&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;负责自动化部署到 Vercel。&lt;&#x2F;li&gt;
&lt;li&gt;示例代码（非 OpenHands 源码，仅为案例展示）：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;BrowserMicroAgent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;deploy_to_vercel&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;project_path&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 使用浏览器自动化完成部署
&lt;&#x2F;span&gt;&lt;span&gt;        browser = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;initialize_browser&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        browser.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;goto&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;vercel.com&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        browser.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;login&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;user@example.com&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;        browser.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;upload_project&lt;&#x2F;span&gt;&lt;span&gt;(project_path)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;todo-app.vercel.app&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-4-zhi-xing-huan-jing-de-jiao-hu&quot;&gt;&lt;strong&gt;3.4 执行环境的交互&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;OpenHands 的执行环境交互通过文件操作和路径解析实现，确保任务执行的安全性和隔离性。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;文件路径解析&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;resolve_path&lt;&#x2F;code&gt; 方法将用户提供的路径解析为主机文件系统上的路径，同时确保路径安全性。&lt;&#x2F;li&gt;
&lt;li&gt;示例代码（真实代码）：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;resolve_path&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;file_path&lt;&#x2F;span&gt;&lt;span&gt;: str,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;working_directory&lt;&#x2F;span&gt;&lt;span&gt;: str,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workspace_base&lt;&#x2F;span&gt;&lt;span&gt;: str,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workspace_mount_path_in_sandbox&lt;&#x2F;span&gt;&lt;span&gt;: str,
&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;    path_in_sandbox = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Path&lt;&#x2F;span&gt;&lt;span&gt;(file_path)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not path_in_sandbox.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_absolute&lt;&#x2F;span&gt;&lt;span&gt;():
&lt;&#x2F;span&gt;&lt;span&gt;        path_in_sandbox = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Path&lt;&#x2F;span&gt;&lt;span&gt;(working_directory) &#x2F; path_in_sandbox
&lt;&#x2F;span&gt;&lt;span&gt;    abs_path_in_sandbox = path_in_sandbox.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;resolve&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not abs_path_in_sandbox.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;is_relative_to&lt;&#x2F;span&gt;&lt;span&gt;(workspace_mount_path_in_sandbox):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;raise &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PermissionError&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;File access not permitted: &lt;&#x2F;span&gt;&lt;span&gt;{file_path}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;    path_in_workspace = abs_path_in_sandbox.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;relative_to&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Path&lt;&#x2F;span&gt;&lt;span&gt;(workspace_mount_path_in_sandbox)
&lt;&#x2F;span&gt;&lt;span&gt;    )
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Path&lt;&#x2F;span&gt;&lt;span&gt;(workspace_base) &#x2F; path_in_workspace
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;文件读取&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;read_file&lt;&#x2F;code&gt; 方法读取文件内容，返回 &lt;code&gt;FileReadObservation&lt;&#x2F;code&gt; 对象。&lt;&#x2F;li&gt;
&lt;li&gt;示例代码（真实代码）：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;read_file&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workdir&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workspace_base&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workspace_mount_path_in_sandbox&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;start&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span&gt;=-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;) -&amp;gt; Observation:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        whole_path = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;resolve_path&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            path, workdir, workspace_base, workspace_mount_path_in_sandbox
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;PermissionError:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ErrorObservation&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;You&amp;#39;re not allowed to access this path: &lt;&#x2F;span&gt;&lt;span&gt;{path}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;. You can only access paths inside the workspace.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(whole_path, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encoding&lt;&#x2F;span&gt;&lt;span&gt;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;file:
&lt;&#x2F;span&gt;&lt;span&gt;            lines = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;read_lines&lt;&#x2F;span&gt;&lt;span&gt;(file.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;readlines&lt;&#x2F;span&gt;&lt;span&gt;(), start, end)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;FileNotFoundError:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ErrorObservation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;File not found: &lt;&#x2F;span&gt;&lt;span&gt;{path}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;UnicodeDecodeError:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ErrorObservation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;File could not be decoded as utf-8: &lt;&#x2F;span&gt;&lt;span&gt;{path}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;IsADirectoryError:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ErrorObservation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Path is a directory: &lt;&#x2F;span&gt;&lt;span&gt;{path}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;. You can only read files&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;    code_view = &amp;#39;&amp;#39;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;join&lt;&#x2F;span&gt;&lt;span&gt;(lines)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;FileReadObservation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;=path, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;=code_view)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;文件写入&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;write_file&lt;&#x2F;code&gt; 方法支持在指定范围内插入或覆盖文件内容。&lt;&#x2F;li&gt;
&lt;li&gt;示例代码（真实代码）：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;write_file&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workdir&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workspace_base&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;workspace_mount_path_in_sandbox&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;start&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;end&lt;&#x2F;span&gt;&lt;span&gt;=-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;) -&amp;gt; Observation:
&lt;&#x2F;span&gt;&lt;span&gt;    insert = content.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;split&lt;&#x2F;span&gt;&lt;span&gt;(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;        whole_path = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;resolve_path&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;            path, workdir, workspace_base, workspace_mount_path_in_sandbox
&lt;&#x2F;span&gt;&lt;span&gt;        )
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;exists&lt;&#x2F;span&gt;&lt;span&gt;(os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dirname&lt;&#x2F;span&gt;&lt;span&gt;(whole_path)):
&lt;&#x2F;span&gt;&lt;span&gt;            os.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;makedirs&lt;&#x2F;span&gt;&lt;span&gt;(os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dirname&lt;&#x2F;span&gt;&lt;span&gt;(whole_path))
&lt;&#x2F;span&gt;&lt;span&gt;        mode = &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;not os.path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;exists&lt;&#x2F;span&gt;&lt;span&gt;(whole_path) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;r+&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(whole_path, mode, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;encoding&lt;&#x2F;span&gt;&lt;span&gt;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;utf-8&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;file:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;mode != &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;:
&lt;&#x2F;span&gt;&lt;span&gt;                all_lines = file.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;readlines&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;                new_file = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;insert_lines&lt;&#x2F;span&gt;&lt;span&gt;(insert, all_lines, start, end)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;                new_file = [i + &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\\&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;insert]
&lt;&#x2F;span&gt;&lt;span&gt;            file.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;seek&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            file.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;writelines&lt;&#x2F;span&gt;&lt;span&gt;(new_file)
&lt;&#x2F;span&gt;&lt;span&gt;            file.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;truncate&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span&gt;PermissionError &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;e:
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ErrorObservation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Permission error on &lt;&#x2F;span&gt;&lt;span&gt;{path}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;{e}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;FileWriteObservation&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;=&amp;#39;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;=path)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;沙箱隔离&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;文件操作严格限制在工作区内，确保任务执行的安全性。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-5-jie-guo-fan-hui&quot;&gt;&lt;strong&gt;3.5 结果返回&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;结果整合&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;CodeActAgent 整合 MicroAgent 的结果，并通过前端返回 Web 应用的部署链接。&lt;&#x2F;li&gt;
&lt;li&gt;示例返回结果：&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;: &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Web 应用已成功部署！访问链接：https:&#x2F;&#x2F;todo-app.vercel.app&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;bu-chong-mo-kuai&quot;&gt;&lt;strong&gt;补充模块&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;确保任务执行的安全性，防止恶意代码注入。&lt;&#x2F;li&gt;
&lt;li&gt;示例代码：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Security&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;validate_input&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;input_data&lt;&#x2F;span&gt;&lt;span&gt;: dict):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 验证用户输入，防止恶意代码注入
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;dangerous_command&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; in input_data:
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;raise &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ValueError&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Invalid input detected!&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Storage&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;负责任务结果的持久化存储，支持用户随时访问历史任务结果。&lt;&#x2F;li&gt;
&lt;li&gt;示例代码：&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Storage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;save_result&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;task_id&lt;&#x2F;span&gt;&lt;span&gt;: str, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;result&lt;&#x2F;span&gt;&lt;span&gt;: dict):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;open&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;{task_id}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;_result.json&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;w&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span&gt;f:
&lt;&#x2F;span&gt;&lt;span&gt;            json.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dump&lt;&#x2F;span&gt;&lt;span&gt;(result, f)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;4-he-xin-zu-jian-shen-du-jie-xi&quot;&gt;&lt;strong&gt;4. 核心组件深度解析&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;OpenHands 的核心组件包括 Agent、MicroAgent 和执行环境。这些组件共同构成了系统的核心功能，确保任务能够高效、安全地完成。以下是对每个组件的详细剖析。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-1-agent&quot;&gt;&lt;strong&gt;4.1 Agent&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Agent 是 OpenHands 的“大脑”，负责接收用户请求、解析任务并协调 MicroAgent 执行具体操作。每个 Agent 都专注于特定的功能领域，例如代码生成、网页浏览或任务分发。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;agent-fen-lei-biao-ge&quot;&gt;&lt;strong&gt;Agent 分类表格&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Agent 名称&lt;&#x2F;th&gt;&lt;th&gt;路径&lt;&#x2F;th&gt;&lt;th&gt;功能描述&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;BrowsingAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;browsing_agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;处理网页浏览相关任务，例如从网页中提取信息。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;CodeActAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;codeact_agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;专注于代码相关任务，例如代码生成、修复或分析。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;DelegatorAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;delegator_agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;负责任务的分解和分发，协调多个 Agent 和 MicroAgent 的工作。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;DummyAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;dummy_agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;一个简单的占位 Agent，主要用于测试或演示。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;VisualBrowsingAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;visualbrowsing_agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;专注于视觉浏览任务，例如处理网页的视觉元素或截图。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;MicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;包含多个子模块，专注于特定领域的微任务，例如代码处理、数据库操作等。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h4 id=&quot;microagent-fen-lei-biao-ge&quot;&gt;&lt;strong&gt;MicroAgent 分类表格&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;MicroAgent 名称&lt;&#x2F;th&gt;&lt;th&gt;路径&lt;&#x2F;th&gt;&lt;th&gt;功能描述&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;InstructionsMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;instructions.py&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;加载和组织指令文件，构建嵌套字典结构。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;RegistryMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;registry.py&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;注册所有 MicroAgent，加载其定义和提示文件。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;BaseMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;agent.py&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;定义 MicroAgent 的基础功能，包括历史事件序列化、模板渲染和 LLM 调用。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;ManagerMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;manager&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;管理任务的分配和执行。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;CommitWriterMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;commit_writer&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;负责生成和提交代码变更。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;TypoFixerMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;typo_fixer_agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;自动修复代码中的拼写错误。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;StudyRepoMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;study_repo_for_task&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;分析代码仓库以支持任务执行。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;MathMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;math_agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;执行数学计算任务。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;RepoExplorerMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;repo_explorer&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;浏览和分析代码仓库。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;VerifierMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;verifier&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;验证任务执行结果的正确性。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;PostgresMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;postgres_agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;执行 PostgreSQL 数据库相关操作。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;CoderMicroAgent&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;agenthub&#x2F;micro&#x2F;coder&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;负责代码生成和优化。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h4 id=&quot;agent-de-zhu-ce-yu-diao-yong&quot;&gt;&lt;strong&gt;Agent 的注册与调用&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;注册&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;每个 Agent 在初始化时会注册到 Agent Hub。&lt;&#x2F;li&gt;
&lt;li&gt;注册信息包括 Agent 的名称、功能描述和路径。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;调用&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;用户请求通过 Agent Hub 分发到合适的 Agent。&lt;&#x2F;li&gt;
&lt;li&gt;Agent Hub 根据任务类型选择合适的 Agent 或 MicroAgent。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;shi-li-dai-ma-agent-de-zhu-ce&quot;&gt;&lt;strong&gt;示例代码：Agent 的注册&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;openhands.agenthub &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;AgentHub
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 注册 BrowsingAgent
&lt;&#x2F;span&gt;&lt;span&gt;AgentHub.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;register_agent&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;BrowsingAgent&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;agenthub&#x2F;browsing_agent&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;description&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;处理网页浏览相关任务&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 注册 CodeActAgent
&lt;&#x2F;span&gt;&lt;span&gt;AgentHub.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;register_agent&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;CodeActAgent&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;path&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;agenthub&#x2F;codeact_agent&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;description&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;专注于代码相关任务&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;shi-li-dai-ma-agent-de-diao-yong&quot;&gt;&lt;strong&gt;示例代码：Agent 的调用&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span&gt;openhands.agenthub &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span&gt;AgentHub
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 用户请求
&lt;&#x2F;span&gt;&lt;span&gt;user_request = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;提取 https:&#x2F;&#x2F;example.com 的标题和内容&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 调用合适的 Agent
&lt;&#x2F;span&gt;&lt;span&gt;agent = AgentHub.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;get_agent&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;BrowsingAgent&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;result = agent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;handle_request&lt;&#x2F;span&gt;&lt;span&gt;(user_request)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span&gt;(result)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-2-microagent&quot;&gt;&lt;strong&gt;4.2 MicroAgent&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;MicroAgent 是 Agent 的子模块，专注于特定领域的功能实现。它们是模块化的组件，例如处理代码、数据库操作或拼写修复。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;zhi-ze&quot;&gt;&lt;strong&gt;职责&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;任务执行&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;根据 Agent 的指令执行具体任务。&lt;&#x2F;li&gt;
&lt;li&gt;例如，生成代码、修改文件、运行测试等。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;模块化设计&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;每个 MicroAgent 专注于特定功能，支持动态加载和扩展。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;shi-li-dai-ma-microagent-de-zhi-xing&quot;&gt;&lt;strong&gt;示例代码：MicroAgent 的执行&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;CodeGenerationMicroAgent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;async def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;execute&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;task&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 执行代码生成逻辑
&lt;&#x2F;span&gt;&lt;span&gt;        code = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;generate_code&lt;&#x2F;span&gt;&lt;span&gt;(task[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;])
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;code
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;generate_code&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 简单生成代码
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;def fibonacci(n):&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;    if n &amp;lt;= 1: return n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;    return fibonacci(n-1) + fibonacci(n-2)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-3-zhi-xing-huan-jing&quot;&gt;&lt;strong&gt;4.3 执行环境&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;执行环境是 OpenHands 的“工作场所”，包括 Sandbox、Browser 和 Shell。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;zhi-ze-1&quot;&gt;&lt;strong&gt;职责&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安全执行&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;提供隔离的执行环境，确保任务执行的安全性。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;跨环境支持&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;支持多种任务类型，例如 Web 自动化、Shell 命令执行等。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;shi-li-dai-ma-zhi-xing-huan-jing-de-jiao-hu&quot;&gt;&lt;strong&gt;示例代码：执行环境的交互&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;python&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-python &quot;&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Sandbox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;execute_code&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;code&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 在隔离环境中执行代码
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(code)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Browser&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;load_page&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;url&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 使用浏览器加载网页
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Loaded page: &lt;&#x2F;span&gt;&lt;span&gt;{url}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Shell&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;run_command&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span&gt;):
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 执行系统命令
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Executed command: &lt;&#x2F;span&gt;&lt;span&gt;{command}&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;ji-zhu-tiao-zhan&quot;&gt;&lt;strong&gt;技术挑战&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安全性&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;解决方案：严格限制沙箱权限，防止恶意代码访问系统资源。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;性能优化&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;解决方案：使用轻量级容器技术（如 Docker）减少资源开销。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;5-ji-zhu-zhan-yu-shi-xian-xi-jie&quot;&gt;&lt;strong&gt;5. 技术栈与实现细节&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;OpenHands 的技术栈涵盖了后端、前端、通信机制和安全性设计。以下是对每个部分的详细解析。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;5-1-hou-duan-python&quot;&gt;&lt;strong&gt;5.1 后端（Python）&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;后端是 OpenHands 的核心逻辑层，负责处理用户请求、任务分解和执行。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-yong-de-kuang-jia-yu-ku&quot;&gt;&lt;strong&gt;使用的框架与库&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;框架&#x2F;库名称&lt;&#x2F;th&gt;&lt;th&gt;功能描述&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Flask&#x2F;FastAPI&lt;&#x2F;td&gt;&lt;td&gt;用于构建 REST API，支持高效的请求处理。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Pytest&lt;&#x2F;td&gt;&lt;td&gt;用于单元测试和集成测试，确保代码质量。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Asyncio&lt;&#x2F;td&gt;&lt;td&gt;实现异步任务处理，提高系统的并发能力。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h4 id=&quot;dai-ma-zu-zhi-yu-mo-kuai-hua-she-ji&quot;&gt;&lt;strong&gt;代码组织与模块化设计&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;目录结构&lt;&#x2F;th&gt;&lt;th&gt;描述&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;openhands&#x2F;agent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Agent 的实现。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;openhands&#x2F;microagent&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;MicroAgent 的实现。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;openhands&#x2F;sandbox&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;执行环境的实现。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;tests&#x2F;unit&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;单元测试代码。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h4 id=&quot;guan-jian-gong-neng-shi-xian&quot;&gt;&lt;strong&gt;关键功能实现&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;功能&lt;&#x2F;th&gt;&lt;th&gt;描述&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;任务分解&lt;&#x2F;td&gt;&lt;td&gt;使用规则或 AI 模型解析用户请求并分解任务。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;上下文管理&lt;&#x2F;td&gt;&lt;td&gt;使用字典或树结构存储任务上下文信息。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;错误处理&lt;&#x2F;td&gt;&lt;td&gt;设计错误恢复机制，确保任务失败时能够自动重试。&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;5-2-qian-duan-react&quot;&gt;&lt;strong&gt;5.2 前端（React）&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;前端是用户与 OpenHands 交互的界面，提供直观的操作体验。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;yong-hu-jie-mian-de-she-ji-yu-jiao-hu&quot;&gt;&lt;strong&gt;用户界面的设计与交互&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;React 框架&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;构建动态、响应式的用户界面。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;组件化设计&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;每个功能模块对应一个独立的 React 组件，支持复用和扩展。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;状态管理&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用 Redux 或 Context API 管理应用状态。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;guo-ji-hua-zhi-chi&quot;&gt;&lt;strong&gt;国际化支持&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;工具&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用 i18next 实现多语言支持。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;环境变量配置&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;frontend&#x2F;.env&lt;&#x2F;code&gt; 文件中设置国际化相关变量。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;gou-jian-yu-you-hua&quot;&gt;&lt;strong&gt;构建与优化&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;构建工具&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用 Webpack 或 Vite 构建前端代码。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;性能优化&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;通过代码分割和懒加载减少页面加载时间。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;5-3-tong-xin-ji-zhi&quot;&gt;&lt;strong&gt;5.3 通信机制&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;通信机制是前后端以及 Agent 与 MicroAgent 之间的桥梁。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;qian-hou-duan-tong-xin&quot;&gt;&lt;strong&gt;前后端通信&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;REST API&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用 HTTP 协议实现前后端通信。&lt;&#x2F;li&gt;
&lt;li&gt;例如，前端发送用户请求到后端，后端返回任务结果。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;实现实时通信，例如任务进度更新。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;agent-yu-microagent-de-tong-xin&quot;&gt;&lt;strong&gt;Agent 与 MicroAgent 的通信&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;协议设计&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用 JSON 格式传递任务指令和结果。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;异步调用&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用 Python 的 asyncio 实现异步通信。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;5-4-an-quan-xing&quot;&gt;&lt;strong&gt;5.4 安全性&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;安全性是 OpenHands 的重要设计目标，确保用户数据和任务执行的安全。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shu-ju-an-quan&quot;&gt;&lt;strong&gt;数据安全&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;加密&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用 HTTPS 加密通信，防止数据泄露。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;权限管理&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;限制用户对系统资源的访问权限。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;ren-wu-zhi-xing-an-quan&quot;&gt;&lt;strong&gt;任务执行安全&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;沙箱技术&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用容器或虚拟机隔离任务执行环境。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;输入验证&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;验证用户输入，防止恶意代码注入。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;xi-tong-an-quan&quot;&gt;&lt;strong&gt;系统安全&lt;&#x2F;strong&gt;&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;防火墙&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;使用防火墙保护系统免受外部攻击。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;日志监控&lt;&#x2F;strong&gt;：
&lt;ul&gt;
&lt;li&gt;记录系统日志，检测异常行为。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>OpenHands 多账户方案（一）: Backend Server Setup and Deployment with SSL</title>
        <published>2025-03-06T00:00:00+00:00</published>
        <updated>2025-03-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://polly.wang/openhands-backend-setup-deployment-ssl/" type="text/html"/>
        <id>https://polly.wang/openhands-backend-setup-deployment-ssl/</id>
        
        <content type="html">&lt;p&gt;OpenHands 是一个基于 Python 的后端服务，使用 FastAPI 框架构建。本文将详细记录如何从源码独立编译部署 OpenHands 的 Server 端，并为其配置 SSL&#x2F;HTTPS，以实现安全的生产环境服务。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fastapi-poetry-uvicorn-nginx-he-ssl-de-guan-xi&quot;&gt;FastAPI、Poetry、Uvicorn、Nginx 和 SSL 的关系&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;FastAPI&lt;&#x2F;strong&gt;：
FastAPI 是一个现代的 Python Web 框架，专注于快速开发和高性能。它支持异步编程，能够处理高并发请求。FastAPI 提供了自动生成的交互式 API 文档（如 Swagger UI 和 ReDoc），使开发者能够轻松测试和调试 API。它的类型提示和数据验证功能基于 Python 的 &lt;code&gt;pydantic&lt;&#x2F;code&gt;，确保了数据的可靠性和安全性。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Poetry&lt;&#x2F;strong&gt;：
Poetry 是一个强大的 Python 项目管理工具，用于管理依赖、虚拟环境和项目构建。它通过 &lt;code&gt;pyproject.toml&lt;&#x2F;code&gt; 文件定义项目的依赖关系和元数据，确保开发环境的一致性。Poetry 的虚拟环境隔离功能使得项目之间的依赖不会相互干扰，同时简化了依赖安装和版本管理。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Uvicorn&lt;&#x2F;strong&gt;：
Uvicorn 是一个高性能的 ASGI 服务器，用于运行基于 FastAPI 的应用。ASGI（Asynchronous Server Gateway Interface）是 WSGI 的异步版本，支持 WebSocket 和 HTTP&#x2F;2 等现代协议。Uvicorn 的轻量化设计使其能够快速启动并处理大量并发请求，是运行 FastAPI 应用的理想选择。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nginx&lt;&#x2F;strong&gt;：
Nginx 是一个功能强大的 Web 服务器和反向代理工具，广泛用于处理静态资源、负载均衡和 SSL&#x2F;HTTPS 配置。在本项目中，Nginx 充当反向代理，将外部请求转发到运行在 Uvicorn 上的 FastAPI 应用，同时负责管理 SSL 证书和加密通信。Nginx 的高性能和灵活性使其成为生产环境的首选。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SSL&lt;&#x2F;strong&gt;：
SSL（Secure Sockets Layer）是一种加密协议，用于保护客户端与服务器之间的通信安全。通过 HTTPS（HTTP over SSL），可以确保数据在传输过程中不会被窃取或篡改。SSL 证书由受信任的证书颁发机构（CA）签发，验证服务器的身份。在本项目中，SSL 通过 Nginx 或 Caddy 自动管理，提供安全的访问通道。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bu-shu-jia-gou&quot;&gt;部署架构&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span&gt;                      +-------------+
&lt;&#x2F;span&gt;&lt;span&gt;                      |             |
&lt;&#x2F;span&gt;&lt;span&gt;                      |  Internet   |
&lt;&#x2F;span&gt;&lt;span&gt;                      |             |
&lt;&#x2F;span&gt;&lt;span&gt;                      +------+------+
&lt;&#x2F;span&gt;&lt;span&gt;                             |
&lt;&#x2F;span&gt;&lt;span&gt;                             | HTTPS (443)
&lt;&#x2F;span&gt;&lt;span&gt;                             |
&lt;&#x2F;span&gt;&lt;span&gt;                      +------+------+
&lt;&#x2F;span&gt;&lt;span&gt;                      |             |
&lt;&#x2F;span&gt;&lt;span&gt;                      |   Nginx     | SSL 终止
&lt;&#x2F;span&gt;&lt;span&gt;                      |             |
&lt;&#x2F;span&gt;&lt;span&gt;                      +------+------+
&lt;&#x2F;span&gt;&lt;span&gt;                             |
&lt;&#x2F;span&gt;&lt;span&gt;                             | HTTP (localhost:54013)
&lt;&#x2F;span&gt;&lt;span&gt;                             |
&lt;&#x2F;span&gt;&lt;span&gt;       +-----------------+---+---+-----------------+
&lt;&#x2F;span&gt;&lt;span&gt;       |                 |       |                 |
&lt;&#x2F;span&gt;&lt;span&gt;       |                 |       |                 |
&lt;&#x2F;span&gt;&lt;span&gt;+------+------+    +-----+------+     +------+-----+
&lt;&#x2F;span&gt;&lt;span&gt;|             |    |            |     |            |
&lt;&#x2F;span&gt;&lt;span&gt;|  Uvicorn    |    |  Uvicorn   | ... |  Uvicorn   | ASGI 服务器
&lt;&#x2F;span&gt;&lt;span&gt;|  Worker 1   |    |  Worker 2  |     |  Worker n  |
&lt;&#x2F;span&gt;&lt;span&gt;|             |    |            |     |            |
&lt;&#x2F;span&gt;&lt;span&gt;+------+------+    +------+-----+     +------+-----+
&lt;&#x2F;span&gt;&lt;span&gt;       |                 |                  |
&lt;&#x2F;span&gt;&lt;span&gt;       |                 |                  |
&lt;&#x2F;span&gt;&lt;span&gt;+------+------+    +-----+------+     +-----+------+
&lt;&#x2F;span&gt;&lt;span&gt;|             |    |            |     |            |
&lt;&#x2F;span&gt;&lt;span&gt;|  FastAPI    |    |  FastAPI   |     |  FastAPI   | Web 框架
&lt;&#x2F;span&gt;&lt;span&gt;|  App        |    |  App       |     |  App       |
&lt;&#x2F;span&gt;&lt;span&gt;|             |    |            |     |            |
&lt;&#x2F;span&gt;&lt;span&gt;+-------------+    +------------+     +------------+
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;shi-xian-bu-zou&quot;&gt;实现步骤&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-cong-yuan-ma-bian-yi-openhands-server&quot;&gt;1. 从源码编译 OpenHands Server&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;an-zhuang-yi-lai&quot;&gt;安装依赖&lt;&#x2F;h4&gt;
&lt;p&gt;确保服务器上安装以下工具：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Python 3.8 或更高版本&lt;&#x2F;li&gt;
&lt;li&gt;Poetry&lt;&#x2F;li&gt;
&lt;li&gt;Make&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;ke-long-yuan-ma&quot;&gt;克隆源码&lt;&#x2F;h4&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 克隆 OpenHands 仓库
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone https:&#x2F;&#x2F;github.com&#x2F;Polly2014&#x2F;OpenHands.git
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; OpenHands
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;an-zhuang-yi-lai-1&quot;&gt;安装依赖&lt;&#x2F;h4&gt;
&lt;p&gt;进入后端目录并安装依赖：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; openhands
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;poetry&lt;&#x2F;span&gt;&lt;span&gt; install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;qi-dong-fu-wu&quot;&gt;启动服务&lt;&#x2F;h4&gt;
&lt;p&gt;使用 Uvicorn 启动 FastAPI 应用：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;poetry&lt;&#x2F;span&gt;&lt;span&gt; run uvicorn openhands.server.app:app&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --host&lt;&#x2F;span&gt;&lt;span&gt; 0.0.0.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --port&lt;&#x2F;span&gt;&lt;span&gt; 54013
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;此命令会启动 OpenHands 的后端服务，监听端口 &lt;code&gt;54013&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-pei-zhi-ssl-https&quot;&gt;2. 配置 SSL&#x2F;HTTPS&lt;&#x2F;h3&gt;
&lt;p&gt;为了为后端服务添加 HTTPS 支持，可以使用 Nginx 或 Caddy 作为反向代理。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;shi-yong-nginx-pei-zhi-https&quot;&gt;使用 Nginx 配置 HTTPS&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装 Nginx&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt install nginx
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;申请 SSL 证书&lt;&#x2F;strong&gt;（使用 Let&#x27;s Encrypt 和 Certbot）：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt install certbot python3-certbot-nginx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; certbot&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --nginx -d&lt;&#x2F;span&gt;&lt;span&gt; your-domain.com
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;配置 Nginx 反向代理&lt;&#x2F;strong&gt;：
编辑 &lt;code&gt;&#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;openhands&lt;&#x2F;code&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;nginx&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-nginx &quot;&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span&gt;server {
&lt;&#x2F;span&gt;&lt;span&gt;    listen 80;
&lt;&#x2F;span&gt;&lt;span&gt;    server_name your-domain.com;
&lt;&#x2F;span&gt;&lt;span&gt;    return 301 https:&#x2F;&#x2F;$host$request_uri;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;server {
&lt;&#x2F;span&gt;&lt;span&gt;    listen 443 ssl;
&lt;&#x2F;span&gt;&lt;span&gt;    server_name your-domain.com;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    ssl_certificate &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;your-domain.com&#x2F;fullchain.pem;
&lt;&#x2F;span&gt;&lt;span&gt;    ssl_certificate_key &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;your-domain.com&#x2F;privkey.pem;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    location &#x2F; {
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_pass http:&#x2F;&#x2F;127.0.0.1:54013; # 后端服务的地址
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header Host $host;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header X-Real-IP $remote_addr;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
&lt;&#x2F;span&gt;&lt;span&gt;        proxy_set_header X-Forwarded-Proto $scheme;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;启用配置并重启 Nginx&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; ln&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -s&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;openhands &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; nginx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -t
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl restart nginx
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h4 id=&quot;shi-yong-caddy-pei-zhi-https&quot;&gt;使用 Caddy 配置 HTTPS&lt;&#x2F;h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装 Caddy&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span&gt; debian-keyring debian-archive-keyring apt-transport-https
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -1sLf &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;dl.cloudsmith.io&#x2F;public&#x2F;caddy&#x2F;stable&#x2F;gpg.key&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; tee &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;caddy-archive-keyring.asc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl -1sLf &lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;dl.cloudsmith.io&#x2F;public&#x2F;caddy&#x2F;stable&#x2F;deb.deb.txt&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;caddy-stable.list
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; apt install caddy
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;配置 Caddyfile&lt;&#x2F;strong&gt;：
编辑 &lt;code&gt;&#x2F;etc&#x2F;caddy&#x2F;Caddyfile&lt;&#x2F;code&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;caddy&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-caddy &quot;&gt;&lt;code class=&quot;language-caddy&quot; data-lang=&quot;caddy&quot;&gt;&lt;span&gt;your-domain.com {
&lt;&#x2F;span&gt;&lt;span&gt;   reverse_proxy 127.0.0.1:54013
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;启动 Caddy&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl restart caddy
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Caddy 会自动申请和管理 SSL 证书。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-optional-sheng-chan-huan-jing-you-hua&quot;&gt;3. [Optional] 生产环境优化&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;4-optional-jin-cheng-guan-li-yu-zi-qi-dong&quot;&gt;4. [Optional] 进程管理与自启动&lt;&#x2F;h3&gt;
&lt;p&gt;使用 Systemd 管理服务进程：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;创建服务配置：&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;openhands.service
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;添加以下内容：&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;int&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-int &quot;&gt;&lt;code class=&quot;language-int&quot; data-lang=&quot;int&quot;&gt;&lt;span&gt;[Unit]
&lt;&#x2F;span&gt;&lt;span&gt;Description=OpenHands FastAPI Server
&lt;&#x2F;span&gt;&lt;span&gt;After=network.target
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[Service]
&lt;&#x2F;span&gt;&lt;span&gt;User=ubuntu
&lt;&#x2F;span&gt;&lt;span&gt;WorkingDirectory=&#x2F;path&#x2F;to&#x2F;OpenHands&#x2F;openhands
&lt;&#x2F;span&gt;&lt;span&gt;ExecStart=&#x2F;path&#x2F;to&#x2F;poetry&#x2F;bin&#x2F;poetry run uvicorn openhands.server.app:app --host 0.0.0.0 --port 54013
&lt;&#x2F;span&gt;&lt;span&gt;Restart=always
&lt;&#x2F;span&gt;&lt;span&gt;RestartSec=10
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[Install]
&lt;&#x2F;span&gt;&lt;span&gt;WantedBy=multi-user.target
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;启用并启动服务&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl daemon-reload
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl enable openhands
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; systemctl start openhands
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;5-yan-zheng-bu-shu&quot;&gt;5. 验证部署&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;确保后端服务正在运行：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;curl&lt;&#x2F;span&gt;&lt;span&gt; http:&#x2F;&#x2F;127.0.0.1:54013
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;通过浏览器访问 &lt;code&gt;https:&#x2F;&#x2F;your-domain.com&lt;&#x2F;code&gt;，验证 HTTPS 是否正常工作。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;nginxxing-neng-you-hua&quot;&gt;Nginx性能优化&lt;&#x2F;h2&gt;
&lt;p&gt;修改 &#x2F;etc&#x2F;nginx&#x2F;nginx.conf，添加以下优化：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;nginx&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-nginx &quot;&gt;&lt;code class=&quot;language-nginx&quot; data-lang=&quot;nginx&quot;&gt;&lt;span&gt;worker_processes auto;
&lt;&#x2F;span&gt;&lt;span&gt;worker_connections 1024;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;http {
&lt;&#x2F;span&gt;&lt;span&gt;    # 启用 gzip 压缩
&lt;&#x2F;span&gt;&lt;span&gt;    gzip on;
&lt;&#x2F;span&gt;&lt;span&gt;    gzip_comp_level 5;
&lt;&#x2F;span&gt;&lt;span&gt;    gzip_types text&#x2F;plain text&#x2F;css application&#x2F;json application&#x2F;javascript;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    # 调整缓冲区大小
&lt;&#x2F;span&gt;&lt;span&gt;    client_body_buffer_size 10K;
&lt;&#x2F;span&gt;&lt;span&gt;    client_header_buffer_size 1k;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    # 启用 HTTP&#x2F;2
&lt;&#x2F;span&gt;&lt;span&gt;    http2 on;
&lt;&#x2F;span&gt;&lt;span&gt;    
&lt;&#x2F;span&gt;&lt;span&gt;    # SSL 优化
&lt;&#x2F;span&gt;&lt;span&gt;    ssl_session_cache shared:SSL:10m;
&lt;&#x2F;span&gt;&lt;span&gt;    ssl_session_timeout 10m;
&lt;&#x2F;span&gt;&lt;span&gt;    ssl_protocols TLSv1.2 TLSv1.3;
&lt;&#x2F;span&gt;&lt;span&gt;    ssl_prefer_server_ciphers off;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;chang-jian-wen-ti-pai-cha&quot;&gt;常见问题排查&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;fu-wu-wu-fa-qi-dong&quot;&gt;服务无法启动&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;检查端口是否被占用：&lt;code&gt;sudo lsof -i:54013&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;检查 Python 环境：&lt;code&gt;python --version&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;查看日志：&lt;code&gt;poetry run uvicorn openhands.server.app:app --log-level debug&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ssl-pei-zhi-wen-ti&quot;&gt;SSL 配置问题&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;证书路径错误：确认证书文件路径正确 &lt;&#x2F;li&gt;
&lt;li&gt;Nginx 配置测试：运行 &lt;code&gt;sudo nginx -t&lt;&#x2F;code&gt; 检查配置&lt;&#x2F;li&gt;
&lt;li&gt;防火墙设置：确保 80&#x2F;443 端口已开放 &lt;code&gt;sudo ufw status&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;yu-ming-jie-xi-wen-ti&quot;&gt;域名解析问题&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;确认 DNS 记录已正确设置：&lt;code&gt;dig your-domain.com&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;等待 DNS 缓存更新（可能需要 24-48 小时）&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zong-jie&quot;&gt;总结&lt;&#x2F;h2&gt;
&lt;p&gt;通过以上步骤，我们成功实现了 OpenHands Server 端的独立编译部署，并为其配置了 SSL&#x2F;HTTPS。FastAPI、Poetry、Uvicorn、Nginx 和 SSL 的协作确保了服务的高效性和安全性。&lt;&#x2F;p&gt;
&lt;p&gt;这种部署架构具有显著的可扩展性优势：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;水平扩展&lt;&#x2F;strong&gt;：当负载增加时，可以轻松添加更多 Uvicorn 工作进程或部署多个服务实例，由 Nginx 进行负载均衡，实现无缝扩容。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;技术栈灵活性&lt;&#x2F;strong&gt;：架构的各组件可以单独升级或替换（如 Caddy 替代 Nginx），无需重新设计整个系统。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;资源隔离&lt;&#x2F;strong&gt;：使用 Poetry 创建的虚拟环境确保应用依赖独立，便于多个项目在同一服务器上共存。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;容器化潜力&lt;&#x2F;strong&gt;：此架构可轻松迁移至 Docker 容器或 Kubernetes 集群，进一步提升部署的一致性和可靠性。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;通过这种方式部署的 OpenHands 后端服务既安全可靠，又具备了应对未来业务增长的技术基础。如果有其他问题或需求，请随时联系！&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
